{
  "comments": [
    {
      "key": {
        "uuid": "5ac10518_dab4efd2",
        "filename": "utils/test/testapi/opnfv_testapi/resources/scenario_models.py",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 335
      },
      "writtenOn": "2017-01-19T07:14:39Z",
      "side": 1,
      "message": "ScenarioProject sounds maybe a bit strange but OK it is the atomic scenario\n\nwhat \u0027project\u0027 would mean here according to https://wiki.opnfv.org/display/testing/Testing+group+Danube+priorities\n\nthe scenario owner is missing",
      "revId": "8ce27ce11a5916d9b725ff74be304805c0c3ebe7",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_c03cfee4",
        "filename": "utils/test/testapi/opnfv_testapi/resources/scenario_models.py",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 2651
      },
      "writtenOn": "2017-01-20T03:20:08Z",
      "side": 1,
      "message": "For the \u0027project\u0027 part, If we use project name as key, it is hardcoded, add or delete project will cause the change of the data structure, means TestAPI code will change accordingly, so I change the data structure, functest/yardstick is not used as key, it is indicated in the way of {\u0027project\u0027: \u0027functest\u0027}, to do it in this way, when other projects are added or some projects are dropped, we don\u0027t need to change the data structure, only update collection data in TestDB.\n{....\n\"projects\": [\n{\n    \"project\": \"functest\",\n    \"customs\": [ \"healthcheck\", \"vping_ssh\".... ],\n    ....\n},\n{\n    \"project\": \"yardstick\",\n    \"customs\": [ \"tc_001\", \"tc_006\".... ],\n    ....\n},\n]\n}\n\nAs regards to \u0027owner\u0027, in the design, there\u0027s no \u0027owner\u0027 field in scenario level, it only exists in \u0027version\u0027 level.\n\"versions\": [\n     {\n      \"version\": \u003cversion name\u003e,\n      \"owner\": \u003cscenario owner\u003e,\n      ....\n     }\n]",
      "parentUuid": "5ac10518_dab4efd2",
      "revId": "8ce27ce11a5916d9b725ff74be304805c0c3ebe7",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_5ac0ff29",
        "filename": "utils/test/testapi/opnfv_testapi/resources/scenario_models.py",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 335
      },
      "writtenOn": "2017-01-19T07:14:39Z",
      "side": 1,
      "message": "scores (and custom and trust indicators) deal with\ndata per project\n \n\"score\": { \n            \"projects\": [{\n                            \"functest\" : [{\"date\": YYY-MM-DD HH:MM, \"score\":\u003cscore\u003e}, {\"date\": YYY-MM-DD HH:MM, \"score\":\u003cscore\u003e}, ...],\n                            \"yardstick\" : [{\"date\": YYY-MM-DD HH:MM, \"score\":\u003cscore\u003e}, {\"date\": YYY-MM-DD HH:MM, \"score\":\u003cscore\u003e}, ...]}]},",
      "revId": "8ce27ce11a5916d9b725ff74be304805c0c3ebe7",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_e03fbad4",
        "filename": "utils/test/testapi/opnfv_testapi/resources/scenario_models.py",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 2651
      },
      "writtenOn": "2017-01-20T03:20:08Z",
      "side": 1,
      "message": "If we do it in this way, it is quite hardcoded, and very difficult to do query work, so I suggested to change the data structure in the comment.",
      "parentUuid": "5ac10518_5ac0ff29",
      "revId": "8ce27ce11a5916d9b725ff74be304805c0c3ebe7",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}