- project:
    name: qtip

    project: '{name}'

    jobs:
        - 'qtip-verify-{stream}'
        - 'qtip-{installer_type}-{pod}-daily-{stream}'

    pod:
        - dell-us-testing-bm-1:
           node: 'dell-us-testing-bm-1'
           installer_type: 'fuel'
           installer_ip: '10.20.0.2'
        - dell-us-deploying-bm3:
           node: 'dell-us-deploying-bm3'
           installer_type: 'fuel'
           installer_ip: '10.20.0.2'

# only master branch is enabled at the moment to keep no of jobs sane
    stream:
        - master:
            branch: 'master'
            gs-pathname: ''
#        - brahmaputra:
#            branch: 'stable/brahmaputra'
#            gs-pathname: '/brahmaputra'

- job-template:
    name: 'qtip-verify-{stream}'

    parameters:
        - project-parameter:
            project: '{project}'
        - gerrit-parameter:
            branch: '{branch}'
        - 'opnfv-build-defaults'

    scm:
        - gerrit-trigger-scm:
            credentials-id: '{ssh-credentials}'
            refspec: '$GERRIT_REFSPEC'
            choosing-strategy: 'gerrit'

    triggers:
        - gerrit:
            trigger-on:
                - patchset-created-event:
                    exclude-drafts: 'false'
                    exclude-trivial-rebase: 'false'
                    exclude-no-code-change: 'false'
                - draft-published-event
                - comment-added-contains-event:
                    comment-contains-value: 'recheck'
                - comment-added-contains-event:
                    comment-contains-value: 'reverify'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: '{project}'
                branches:
                  - branch-compare-type: 'ANT'
                    branch-pattern: '**/{branch}'
                forbidden-file-paths:
                  - compare-type: ANT
                    pattern: 'docs/**|.gitignore'

    builders:
        - shell: |
            echo "Nothing to verify!"

- job-template:
    name: 'qtip-{installer_type}-{pod}-daily-{stream}'

    disabled: false

    node: '{node}'

    parameters:
      - project-parameter:
          project: '{project}'
      - string:
          name: INSTALLER_TYPE
          default: '{installer_type}'
          description: "Installer name that is used for deployment."
      - string:
          name: INSTALLER_IP
          default: '{installer_ip}'
          description: "Installer IP"
      - string:
          name: NODE_NAME
          default: '{node}'
          description: "Name of the POD"
      - string:
          name: GIT_BASE
          default: https://gerrit.opnfv.org/gerrit/$PROJECT
          description: "Used for overriding the GIT URL coming from Global Jenkins configuration in case if the stuff is done on none-LF HW."

    scm:
       - git-scm:
           credentials-id: '{ssh-credentials}'
           refspec: ''
           branch: master

    builders:
        - 'qtip-cleanup'
        - 'qtip-set-env'
        - 'qtip-run-suite'
        - 'qtip-pushtoDB'

    triggers:
      - timed: '0 0,13,15,20 * * *'


###########################
#biuilder macros
###########################
- builder:
    name: qtip-set-env
    builders:
        - shell: |
            #!/bin/bash
            echo "Qtip: Start Docker and prepare environment"
            envs="INSTALLER_TYPE=${INSTALLER_TYPE} -e INSTALLER_IP=${INSTALLER_IP} -e NODE_NAME=${NODE_NAME}"
            suite="TEST_CASE=all"
            docker pull opnfv/qtip:latest

            cmd=" docker run -id -e $envs -e $suite opnfv/qtip:latest /bin/bash"
            echo "Qtip: Running docker run command: ${cmd}"
            ${cmd}
            docker ps -a
            container_id=$(docker ps | grep 'opnfv/qtip:latest' | awk '{print $1}' | head -1)
             if [ $(docker ps | grep 'opnfv/qtip' | wc -l) == 0 ]; then
                echo "The container opnfv/qtip with ID=${container_id} has not been properly started. Exiting..."
                exit 1
            fi
- builder:
    name: qtip-run-suite
    builders:
        - shell: |
            #!/bin/bash
            container_id=$(docker ps | grep 'opnfv/qtip:latest' | awk '{print $1}' | head -1)
            if [[ ! -z ${container_id} ]]; then
                echo "The container ID is: ${container_id}"
                QTIP_REPO=/home/opnfv/repos/qtip
                docker exec -t ${container_id} $QTIP_REPO/docker/run_qtip.sh
            else
                echo "Container ID not available"
            fi

- builder:
    name: qtip-pushtoDB
    builders:
        - shell: |
            #!/bin/bash

            echo "Pushing available results to DB"
            echo "The container id is:"
            container_id=$(docker ps | grep 'opnfv/qtip:latest' | awk '{print $1}' | head -1)
            if [[ ! -z ${container_id} ]]; then
                echo "The condiner ID is: ${container_id}"
                QTIP_REPO=/home/opnfv/repos/qtip
                docker exec -t ${container_id} $QTIP_REPO/docker/push_db.sh
            else
                echo "Container ID not available"
            fi

- builder:
    name: qtip-cleanup
    builders:
        - shell: |
            #!/bin/bash

            echo "Cleaning up QTIP  docker containers/images..."
            # Remove previous running containers if exist
            if [[ ! -z $(docker ps -a | grep opnfv/qtip) ]]; then
                echo "Removing existing opnfv/qtip containers..."
                running_containers=$(docker ps | grep opnfv/qtip | awk '{print $1}')
                docker stop ${running_containers}
                all_containers=$(docker ps -a | grep opnfv/qtip | awk '{print $1}')
                docker rm ${all_containers}
            fi

            # Remove existing images if exist
            if [[ ! -z $(docker images | grep opnfv/qtip) ]]; then
                echo "Docker images to remove:"
                docker images | head -1 && docker images | grep opnfv/qtip
                image_tags=($(docker images | grep opnfv/qtip | awk '{print $2}'))
                for tag in "${image_tags[@]}"; do
                    echo "Removing docker image opnfv/qtip:$tag..."
                    docker rmi opnfv/qtip:$tag
                done
            fi

- builder:
    name: qtip-fetch-os-cred
    builders:
        - shell: |
            #!/bin/bash

            echo $HOME
            echo $WORKSPACE
            cd $WORKSPACE
            git clone https://gerrit.opnfv.org/gerrit/releng
            cd $WORKSPACE/releng/utils
            #./fetch_os_creds.sh                  #To test the problem with creating the file in $HOME
            ./fetch_os_creds.sh -d $WORKSPACE/opnfv-stack.sh    #To test if  the file can be created in $WORKSPACE
