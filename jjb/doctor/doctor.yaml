---
- project:
    name: doctor

    project: '{name}'
    project-name: '{name}'
    project-pattern: '{project}'

    stream:
      - master:
          branch: '{stream}'
          gs-pathname: ''
          disabled: false
      - hunter:
          branch: 'stable/{stream}'
          gs-pathname: '/{stream}'
          disabled: false

    installer:
      - 'fuel':
          scenario: 'os-nosdn-nofeature-noha'

    arch:
      - 'x86_64'
      - 'aarch64'

    inspector:
      - 'sample'
      - 'congress'

    jobs:
      - 'doctor-verify-{stream}'
      - 'doctor-verify-fault_management-{installer}-{inspector}-{arch}-{stream}'
      - 'doctor-verify-maintenance-{installer}-{inspector}-{arch}-{stream}'
      - 'doctor-verify-all-{installer}-{inspector}-{arch}-{stream}'

- job-template:
    name: 'doctor-verify-{stream}'
    disabled: '{obj:disabled}'
    project-type: 'multijob'
    parameters:
      - project-parameter:
          project: '{project}'
          branch: '{branch}'
      - 'doctor-slave-parameter'
    scm:
      - git-scm-gerrit
    triggers:
      - 'doctor-verify':
          project: '{project}'
          branch: '{branch}'
          files: 'doctor_tests/**'

    builders:
      - shell: |
          #!/bin/bash
          # we do nothing here as the main stuff will be done
          # in phase jobs
          echo "Triggering phase jobs!"
      - multijob:
          name: 'doctor-verify-fault_management'
          execution-type: PARALLEL
          projects:
            - name: 'doctor-verify-fault_management-fuel-sample-x86_64-{stream}'
              predefined-parameters: |
                PROJECT=$PROJECT
                GERRIT_BRANCH=$GERRIT_BRANCH
                GERRIT_REFSPEC=$GERRIT_REFSPEC
                GERRIT_CHANGE_NUMBER=$GERRIT_CHANGE_NUMBER
                GERRIT_CHANGE_COMMIT_MESSAGE=$GERRIT_CHANGE_COMMIT_MESSAGE
              kill-phase-on: FAILURE
              git-revision: true
            - name: 'doctor-verify-fault_management-fuel-congress-x86_64-{stream}'
              predefined-parameters: |
                PROJECT=$PROJECT
                GERRIT_BRANCH=$GERRIT_BRANCH
                GERRIT_REFSPEC=$GERRIT_REFSPEC
                GERRIT_CHANGE_NUMBER=$GERRIT_CHANGE_NUMBER
                GERRIT_CHANGE_COMMIT_MESSAGE=$GERRIT_CHANGE_COMMIT_MESSAGE
              kill-phase-on: FAILURE
              git-revision: true
      - multijob:
          name: 'doctor-verify-maintenance'
          execution-type: PARALLEL
          projects:
            - name: doctor-verify-maintenance-fuel-sample-x86_64-{stream}'
              predefined-parameters: |
                PROJECT=$PROJECT
                GERRIT_BRANCH=$GERRIT_BRANCH
                GERRIT_REFSPEC=$GERRIT_REFSPEC
                GERRIT_CHANGE_NUMBER=$GERRIT_CHANGE_NUMBER
                GERRIT_CHANGE_COMMIT_MESSAGE=$GERRIT_CHANGE_COMMIT_MESSAGE
              kill-phase-on: FAILURE
              git-revision: true

- job-template:
    name: 'doctor-verify-fault_management-{installer}-{inspector}-{arch}-{stream}'
    disabled: '{obj:disabled}'
    node: 'zte-virtual4'
    wrappers:
      - ssh-agent-wrapper
      - build-timeout:
          timeout: 30
    parameters:
      - project-parameter:
          project: '{project}'
          branch: '{branch}'
      - '{installer}-defaults'
      - 'doctor-slave-parameter'
      - 'doctor-parameter':
          inspector: '{inspector}'
          scenario: '{scenario}'
          test_case: 'fault_management'
          admin_tool_type: 'sample'
    scm:
      - git-scm-gerrit
    builders:
      - 'doctor-verify-installer-inspector-builders-macro'
    publishers:
      - 'doctor-verify-publishers-macro'

- job-template:
    name: 'doctor-verify-maintenance-{installer}-{inspector}-{arch}-{stream}'
    disabled: '{obj:disabled}'
    node: 'nokia-pod1'
    wrappers:
      - ssh-agent-wrapper
      - build-timeout:
          timeout: 40
    parameters:
      - project-parameter:
          project: '{project}'
          branch: '{branch}'
      - '{installer}-defaults'
      - 'doctor-slave-parameter'
      - 'doctor-parameter':
          inspector: '{inspector}'
          scenario: '{scenario}'
          test_case: 'maintenance'
          admin_tool_type: 'fenix'
    scm:
      - git-scm-gerrit
    builders:
      - 'doctor-verify-installer-inspector-builders-macro'
    publishers:
      - 'doctor-verify-publishers-macro'

- job-template:
    name: 'doctor-verify-all-{installer}-{inspector}-{arch}-{stream}'
    disabled: '{obj:disabled}'
    node: 'doctor-{installer}-{arch}'
    wrappers:
      - ssh-agent-wrapper
      - build-timeout:
          timeout: 50
    parameters:
      - project-parameter:
          project: '{project}'
          branch: '{branch}'
      - '{installer}-defaults'
      - 'doctor-slave-parameter'
      - 'doctor-parameter':
          inspector: '{inspector}'
          scenario: '{scenario}'
          test_case: 'all'
          admin_tool_type: 'sample'
    scm:
      - git-scm-gerrit
    builders:
      - 'doctor-verify-installer-inspector-builders-macro'
    publishers:
      - 'doctor-verify-publishers-macro'


# -------------------------------
# parameter macros
# -------------------------------
- parameter:
    name: 'doctor-parameter'
    parameters:
      - string:
          name: INSPECTOR_TYPE
          default: '{inspector}'
          description: 'inspector component'
      - string:
          name: TEST_CASE
          default: '{test_case}'
          description: 'test case: all, fault_management or maintenance'
      - string:
          name: DEPLOY_SCENARIO
          default: '{scenario}'
          description: 'Scenario to deploy and test'
      - string:
          name: ADMIN_TOOL_TYPE
          default: '{admin_tool_type}'
          description: 'admin_tool_type: sample, fenix'


# -------------------------------
# builder macros
# -------------------------------

- builder:
    name: 'doctor-verify-installer-inspector-builders-macro'
    builders:
      # yamllint disable rule:indentation
      - shell: !include-raw:
          - ./doctor-env-presetup.sh
          - ../../utils/fetch_os_creds.sh
      - shell: |
          #!/bin/bash

          # prepare the env for test
          . $HOME/opnfv-openrc.sh
          if [ -f $HOME/os_cacert ]; then
              export OS_CACERT=$HOME/os_cacert
          fi
          . $HOME/opnfv-installer.sh

          # run tox to trigger the test
          # As Jenkins user, it has no permission to send ICMP package
          sudo -E tox -e py34


# -------------------------------
# publisher macros
# -------------------------------
- publisher:
    name: 'doctor-verify-publishers-macro'
    publishers:
      - archive:
          artifacts: 'doctor_tests/*.log'
      - email-jenkins-admins-on-failure
      - workspace-cleanup

#####################################
# trigger macros
#####################################
- trigger:
    name: 'doctor-verify'
    triggers:
      - gerrit:
          server-name: 'gerrit.opnfv.org'
          trigger-on:
            - patchset-created-event:
                exclude-drafts: 'false'
                exclude-trivial-rebase: 'false'
                exclude-no-code-change: 'false'
            - draft-published-event
            - comment-added-contains-event:
                comment-contains-value: 'recheck'
            - comment-added-contains-event:
                comment-contains-value: 'reverify'
          projects:
            - project-compare-type: 'ANT'
              project-pattern: '{project}'
              branches:
                - branch-compare-type: 'ANT'
                  branch-pattern: '**/{branch}'
              file-paths:
                - compare-type: ANT
                  pattern: '{files}'
          skip-vote:
            successful: true
            failed: true
            unstable: true
            notbuilt: true
