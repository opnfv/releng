- project:
    name: doctor

    project: '{name}'

    stream:
        - master:
            branch: '{stream}'
            gs-pathname: ''
            docker_tag: 'master'
            disabled: false
        - colorado:
            branch: 'stable/{stream}'
            gs-pathname: '/{stream}'
            docker_tag: 'stable'
            disabled: false

    installer:
        - apex:
            slave-label: 'ool-virtual1'
            pod: 'ool-virtual1'

    inspector:
        - 'sample'
        - 'congress'

    jobs:
        - 'doctor-verify-{stream}'
        - 'doctor-verify-{installer}-{inspector}-{stream}'

- job-template:
    name: 'doctor-verify-{stream}'

    disabled: '{obj:disabled}'

    parameters:
        - project-parameter:
            project: '{project}'
        - gerrit-parameter:
            branch: '{branch}'
        - 'opnfv-build-ubuntu-defaults'

    scm:
        - gerrit-trigger-scm:
            credentials-id: '{ssh-credentials}'
            refspec: '$GERRIT_REFSPEC'
            choosing-strategy: 'gerrit'

    triggers:
        - gerrit:
            trigger-on:
                - patchset-created-event:
                    exclude-drafts: 'false'
                    exclude-trivial-rebase: 'false'
                    exclude-no-code-change: 'false'
                - draft-published-event
                - comment-added-contains-event:
                    comment-contains-value: 'recheck'
                - comment-added-contains-event:
                    comment-contains-value: 'reverify'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: '{project}'
                branches:
                  - branch-compare-type: 'ANT'
                    branch-pattern: '**/{branch}'
                file-paths:
                  - compare-type: ANT
                    pattern: 'tests/**'

    builders:
        - shell: "[ -e tests/run.sh ] && bash -n ./tests/run.sh"

- job-template:
    name: 'doctor-verify-{installer}-{inspector}-{stream}'

    node: '{slave-label}'

    parameters:
        - project-parameter:
            project: '{project}'
        - gerrit-parameter:
            branch: '{branch}'
        - string:
            name: OS_CREDS
            default: /home/jenkins/openstack.creds
            description: 'OpenStack credentials'
        - '{installer}-defaults'
        - '{slave-label}-defaults'
        - functest-suite-parameter:
            FUNCTEST_SUITE_NAME: 'doctor'
            TESTCASE_OPTIONS: '-e INSPECTOR_TYPE={inspector} -v $WORKSPACE:$HOME/opnfv/repos/doctor'
        - string:
            name: DEPLOY_SCENARIO
            default: 'os-nosdn-nofeature-ha'
        - string:
            name: DOCKER_TAG
            default: '{docker-tag}'
            description: 'Tag to pull docker image'
        - functest-parameter:
            gs-pathname: '{gs-pathname}'
            CI_DEBUG: 'true'

    scm:
        - gerrit-trigger-scm:
            credentials-id: '{ssh-credentials}'
            refspec: '$GERRIT_REFSPEC'
            choosing-strategy: 'gerrit'

    triggers:
        - gerrit:
            trigger-on:
                - patchset-created-event:
                    exclude-drafts: 'false'
                    exclude-trivial-rebase: 'false'
                    exclude-no-code-change: 'false'
                - draft-published-event
                - comment-added-contains-event:
                    comment-contains-value: 'recheck'
                - comment-added-contains-event:
                    comment-contains-value: 'reverify'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: '{project}'
                branches:
                  - branch-compare-type: 'ANT'
                    branch-pattern: '**/{branch}'
                file-paths:
                  - compare-type: ANT
                    pattern: 'tests/**'
            skip-vote:
                successful: true
                failed: true
                unstable: true
                notbuilt: true

    builders:
        - description-setter:
            description: "POD: $NODE_NAME"
        - 'functest-suite-builder'

    publishers:
        - postbuildscript:
            builders:
                - functest-copy-suite-log:
                    suite: '{project}'
        - archive:
            artifacts: '{project}.log'

- builder:
    name: functest-copy-suite-log
    builders:
        - shell: |
            cp $HOME/opnfv/functest/results/${{GIT_BRANCH##*/}}/{suite}.log $WORKSPACE/
