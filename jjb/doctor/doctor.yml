- project:
    name: doctor

    project: '{name}'

    stream:
        - master:
            branch: '{stream}'
            gs-pathname: ''
            docker-tag: 'latest'
            disabled: false
        - danube:
            branch: 'stable/{stream}'
            gs-pathname: '/{stream}'
            docker-tag: 'stable'
            disabled: false

    installer:
        - apex:
            slave-label: 'ool-virtual1'
            pod: 'ool-virtual1'
        - fuel:
            slave-label: 'ool-virtual2'
            pod: 'ool-virtual2'
        # TODO(r-mibu): enable this once joid is ready
        #- joid:
        #    slave-label: 'ool-virtual3'
        #    pod: 'ool-virtual3'

    inspector:
        - 'sample'
        - 'congress'

    task:
        - verify:
            profiler: 'none'
            auto-trigger-name: 'doctor-verify'
        - profiling:
            profiler: 'poc'
            auto-trigger-name: 'experimental'

    jobs:
        - 'doctor-verify-{stream}'
        - 'doctor-{task}-{installer}-{inspector}-{stream}'

- job-template:
    name: 'doctor-verify-{stream}'

    disabled: '{obj:disabled}'

    parameters:
        - project-parameter:
            project: '{project}'
            branch: '{branch}'
        - 'opnfv-build-ubuntu-defaults'

    scm:
        - git-scm-gerrit

    triggers:
        - gerrit:
            server-name: 'gerrit.opnfv.org'
            trigger-on:
                - patchset-created-event:
                    exclude-drafts: 'false'
                    exclude-trivial-rebase: 'false'
                    exclude-no-code-change: 'false'
                - draft-published-event
                - comment-added-contains-event:
                    comment-contains-value: 'recheck'
                - comment-added-contains-event:
                    comment-contains-value: 'reverify'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: '{project}'
                branches:
                  - branch-compare-type: 'ANT'
                    branch-pattern: '**/{branch}'
                file-paths:
                  - compare-type: ANT
                    pattern: 'tests/**'

    builders:
        - shell: "[ -e tests/run.sh ] && bash -n ./tests/run.sh"

- job-template:
    name: 'doctor-{task}-{installer}-{inspector}-{stream}'

    node: '{slave-label}'

    parameters:
        - project-parameter:
            project: '{project}'
            branch: '{branch}'
        - string:
            name: OS_CREDS
            default: /home/jenkins/openstack.creds
            description: 'OpenStack credentials'
        - '{slave-label}-defaults'
        - '{installer}-defaults'
        - string:
            name: DOCKER_TAG
            default: '{docker-tag}'
            description: 'Tag to pull docker image'
        - string:
            name: CLEAN_DOCKER_IMAGES
            default: 'false'
            description: 'Remove downloaded docker images (opnfv/functest:*)'
        - string:
            name: DEPLOY_SCENARIO
            default: 'os-nosdn-nofeature-ha'
            description: 'Scenario to deploy and test'
        # functest-suite-parameter
        - string:
            name: FUNCTEST_SUITE_NAME
            default: '{project}'
        - string:
            name: TESTCASE_OPTIONS
            default: '-e INSPECTOR_TYPE={inspector} -e PROFILER_TYPE={profiler} -v $WORKSPACE:/home/opnfv/repos/doctor'
            description: 'Addtional parameters specific to test case(s)'
        # functest-parameter
        - string:
            name: GS_PATHNAME
            default: '{gs-pathname}'
            description: "Version directory where the opnfv documents will be stored in gs repository"
        - string:
            name: FUNCTEST_REPO_DIR
            default: "/home/opnfv/repos/functest"
            description: "Directory where the Functest repository is cloned"
        - string:
            name: PUSH_RESULTS_TO_DB
            default: "true"
            description: "Push the results of all the tests to the resultDB"
        - string:
            name: CI_DEBUG
            default: 'true'
            description: "Show debug output information"

    scm:
        - git-scm-gerrit

    triggers:
        - '{auto-trigger-name}':
            project: '{project}'
            branch: '{branch}'

    builders:
        - 'functest-suite-builder'
        - shell: |
            functest_log="$HOME/opnfv/functest/results/{stream}/{project}.log"
            to_be_archived="$WORKSPACE/tests/functest-{project}.log"
            cp $functest_log $to_be_archived
            # NOTE: checking the test result, as the previous job could return
            #       0 regardless the result of doctor test scenario.
            grep -e ' OK$' $functest_log || exit 1

    publishers:
        - archive:
            artifacts: 'tests/*.log'


#####################################
# trigger macros
#####################################
- trigger:
    name: 'doctor-verify'
    triggers:
        - gerrit:
            server-name: 'gerrit.opnfv.org'
            trigger-on:
                - patchset-created-event:
                    exclude-drafts: 'false'
                    exclude-trivial-rebase: 'false'
                    exclude-no-code-change: 'false'
                - draft-published-event
                - comment-added-contains-event:
                    comment-contains-value: 'recheck'
                - comment-added-contains-event:
                    comment-contains-value: 'reverify'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: '{project}'
                branches:
                  - branch-compare-type: 'ANT'
                    branch-pattern: '**/{branch}'
                file-paths:
                  - compare-type: ANT
                    pattern: 'tests/**'
            skip-vote:
                successful: true
                failed: true
                unstable: true
                notbuilt: true
