###################################
# job configuration for cperf
###################################
- project:
    name: cperf
    project: '{name}'

#--------------------------------
# BRANCH ANCHORS
#--------------------------------
    master: &master
        stream: master
        branch: '{stream}'
        gs-pathname: ''
        docker-tag: 'latest'

#--------------------------------
# POD, INSTALLER, AND BRANCH MAPPING
#--------------------------------
    pod:
#--------------------------------
#        master
#--------------------------------
        - intel-pod2:
            installer: apex
            <<: *master

#--------------------------------

    testsuite:
        - 'daily'

    jobs:
        - 'cperf-{installer}-{pod}-{testsuite}-{stream}'

################################
# job template
################################
- job-template:
    name: 'cperf-{installer}-{pod}-{testsuite}-{stream}'

    concurrent: true

    properties:
        - throttle:
            enabled: true
            max-per-node: 1

    wrappers:
        - build-name:
            name: '$BUILD_NUMBER Suite: $CPERF_SUITE_NAME Scenario: $DEPLOY_SCENARIO'
        - timeout:
            timeout: 400
            abort: true

    parameters:
        - project-parameter:
            project: '{project}'
        - '{pod}-defaults'
        - '{installer}-defaults'
        - string:
            name: DEPLOY_SCENARIO
            default: 'os-odl_l2-nofeature-ha'  # need to figure this out, as I want openflowplugin + drop-test
                                               # but I don't know of any scenario yet that doesn't use ovsdb
                                               # at the very least.  But, actually I know how we can install
                                               # extra features after deployment (but only for ODL, would have
                                               # to figure it out for ONOS, $otherController01, etc
        - string:
            name: DOCKER_TAG
            default: '{docker-tag}'
            description: 'Tag to pull docker image'
        - cperf-parameter:
            gs-pathname: '{gs-pathname}'

    scm:
        - git-scm:
            credentials-id: '{ssh-credentials}'
            refspec: ''
            branch: '{branch}'

    builders:
        - 'cperf-{testsuite}-builder'

########################
# parameter macros
########################
- parameter:
    name: cperf-parameter
    parameters:
        - string:
            name: CPERF_SUITE_NAME
            default: 'daily'
            description: "Suite name to run"
        - string:
            name: GS_PATHNAME
            default: '{gs-pathname}'
            description: "Version directory where the opnfv documents will be stored in gs repository"
        - string:
            name: PUSH_RESULTS_TO_DB
            default: "false"
            description: "Push the results of all the tests to the resultDB"
        - string:
            name: CI_DEBUG
            default: 'false'
            description: "Show debug output information"

########################
# trigger macros
########################

########################
# builder macros
########################
- builder:
    name: cperf-daily-builder
    builders:
        - 'odl-cbench-suite'

- builder:
    name: odl-cbench-suite
    builders:
        - shell: |
            #!/bin/bash
            set +e
            # TODO: need to figure out the logic to get ${CONTROLLER_IP} used below
            docker pull opnfv/cperf:$DOCKER_TAG
            robot_cmd="pybot -e exclude -v ODL_SYSTEM_IP:${CONTROLLER_IP} -v switch_count:100 -v loops:10 \
                              -v TOOLS_SYSTEM_IP:localhost -v duration_in_seconds:60"
            robot_suite="/home/opnfv/repos/test/csit/suites/openflowplugin/Performance/010_Cbench.robot"
            sudo docker run -t -i opnfv/cperf:$DOCKER_TAG ${robot_cmd} ${robot_suite}