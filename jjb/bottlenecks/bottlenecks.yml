####################################
# Job configuration for bottlenecks
####################################
- project:
    name: bottlenecks
    jobs:
        - 'bottlenecks-verify-{stream}'
        - 'bottlenecks-daily-{installer}-{pod}-{stream}'
        - 'bottlenecks-upload-artifacts-{stream}'
    pod:
        - lf:
            node: 'opnfv-jump-2'
            installer_type: 'fuel'
            installer_ip: '10.20.0.2'

    installer:
        -fuel

# only master branch is enabled at the moment to keep no of jobs sane
    stream:
        - master:
            branch: 'master'
            gs-pathname: ''
#        - brahmaputra:
#            branch: 'stable/brahmaputra'
#            gs-pathname: '/brahmaputra'

    project: 'bottlenecks'
###############################
# Job templates
##############################
- job-template:
    name: 'bottlenecks-verify-{stream}'

    parameters:
        - project-parameter:
            project: '{project}'
        - gerrit-parameter:
            branch: '{branch}'
        - 'opnfv-build-defaults'

    scm:
        - gerrit-trigger-scm:
            credentials-id: '{ssh-credentials}'
            refspec: '$GERRIT_REFSPEC'
            choosing-strategy: 'gerrit'

    triggers:
        - gerrit:
            trigger-on:
                - patchset-created-event:
                    exclude-drafts: 'false'
                    exclude-trivial-rebase: 'false'
                    exclude-no-code-change: 'false'
                - draft-published-event
                - comment-added-contains-event:
                    comment-contains-value: 'recheck'
                - comment-added-contains-event:
                    comment-contains-value: 'reverify'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: '{project}'
                branches:
                  - branch-compare-type: 'ANT'
                    branch-pattern: '**/{branch}'
                forbidden-file-paths:
                  - compare-type: ANT
                    pattern: 'docs/**|.gitignore'

    builders:
        - shell: |
            echo "Nothing to verify!"

- job-template:
    name: 'bottlenecks-upload-artifacts-{stream}'

    node: ericsson-build

    concurrent: true

    properties:
        - throttle:
            enabled: true
            max-total: 1
            max-per-node: 1

    parameters:
        - project-parameter:
            project: '{project}'
        - 'ericsson-ca-build-1-defaults'
        - 'bottlenecks-parameter'

    scm:
        - git-scm:
            credentials-id: '{ssh-credentials}'
            refspec: ''
            branch: '{branch}'

    builders:
        - 'bottlenecks-builder-upload-artifact'
        - 'bottlenecks-workspace-cleanup'

- job-template:
    name: 'bottlenecks-daily-{installer}-{pod}-{stream}'

    disabled: false

    node: '{node}'

    parameters:
        - project-parameter:
            project: '{project}'
        - 'opnfv-jump-2-defaults'
        - string:
            name: POD_NAME
            default: '{pod}'
            description: "POD where the job runs"
        - string:
            name: INSTALLER_TYPE
            default: '{installer_type}'
            description: "Installer name that is used for deployment."
        - string:
            name: INSTALLER_IP
            default: '{installer_ip}'
            description: "Installer IP."

    scm:
        - git-scm:
            credentials-id: '{ssh-credentials}'
            refspec: ''
            branch: '{branch}'

    triggers:
        - 'bottlenecks-trigger-{pod}'

    builders:
        - 'bottlenecks-fetch-os-creds'
        #- 'run-rubbos-env-preparation'
        - 'bottlenecks-instance-creation'
        #- 'run-rubbos-tools-installation'
        #- 'rubbos-exec'

    publishers:
        - email:
            recipients: hongbo.tianhongbo@huawei.com matthew.lijun@huawei.com

####################
# parameter macros
####################
- parameter:
    name: bottlenecks-parameter
    parameters:
        - string:
           name: CACHE_DIR
           default: $WORKSPACE/cache
           description: "the cache to store packages downloaded from public IP"
        - string:
           name: RUBBOS_URL
           default: http://artifacts.opnfv.org/bottlenecks/rubbos
           description: "LF artifacts url for storage of bottlenecks packages"
        - string:
           name: PACKAGE_URL
           default: http://205.177.226.235:9999/bottlenecks/rubbos/
           description: "the url where we store the packages used for bottlenecks rubbos"

###################################
#builders for bottlenecks project
###################################
- builder:
    name: bottlenecks-fetch-os-creds
    builders:
        - shell:
            !include-raw ../../utils/fetch_os_creds.sh

- builder:
    name: run-rubbos-env-preparation
    builders:
        - shell: |
            #!/bin/bash
            set -o errexit

            echo "Bottlenecks: export openstack parameters before rubbos running"

            cd $WORKSPACE
            ./rubbos/rubbos_scripts/1-1-1/scripts/env_preparation.sh

- builder:
    name: bottlenecks-instance-creation
    builders:
        - shell: |
            #!/bin/bash
            set -o errexit

            echo "Bottlenecks: instance creation by using heat template"
            cd $WORKSPACE
            ./utils/infra_setup/heat_template/HOT_create_instance.sh

- builder:
    name: run-rubbos-tools-installation
    builders:
        - shell: |
            #!/bin/bash
            set -o errexit

            echo "Bottlenecks: to install tools to run rubbos"

            cd $WORKSPACE
            cd rubbos/rubbos_scripts/1-1-1
            source set_bottlenecks_rubbos_env.sh
            ./rubbos/rubbos_scripts/1-1-1/scripts/run.sh

- builder:
    name: rubbos-exec
    builders:
        - shell: |
            #!/bin/bash
            set -o errexit

            echo "Bottlenecks: rubbos execution"

            cd $WORKSPACE
            cd ./rubbos/rubbos_scripts/1-1-1
            source set_bottlenecks_rubbos_env.sh
            ssh $CONTROL_HOST
            ./tmp/CONTROL_rubbos_exec.sh

- builder:
    name: bottlenecks-builder-upload-artifact
    builders:
        - shell: |
            #!/bin/bash
            set -o errexit

            echo "Bottlenecks: upload to artifacts from the public IP"

            [[ -d $CACHE_DIR ]] || mkdir -p $CACHE_DIR

            for file in $(curl -s $PACKAGE_URL |
                               grep href |
                               sed 's/.*href="//' |
                               sed 's/".*//' |
                               grep '^[a-zA-Z].*'); do
                 curl --connect-timeout 10 -o $CACHE_DIR/$file $PACKAGE_URL$file
                 gsutil cp $CACHE_DIR/$file $RUBBOS_URL
            done

- builder:
    name: bottlenecks-workspace-cleanup
    builders:
        - shell: |
            #!/bin/bash
            set -o errexit

            echo "Bottlenecks: cleanup cache used for storage downloaded packages"

            /bin/rm -rf $WORKSPACE

#######################
#trigger macros
#######################
- trigger:
    name: 'bottlenecks-trigger-lf'
    triggers:
        - timed: '@midnight'
