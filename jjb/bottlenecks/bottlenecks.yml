####################################
# Job configuration for bottlenecks
####################################
- project:
    name: bottlenecks
    jobs:
        - 'bottlenecks-test'
        - 'bottlenecks-verify'
        - 'bottlenecks-daily-{stream}'
        - 'bottlenecks-merge'
        - 'bottlenecks-{installer}-{pod}-{stream}'

    # stream:    branch with - in place of / (eg. stable-arno)
    # branch:    branch (eg. stable/arno)
    pod:
        - lf:
            node: 'opnfv-jump-2'
            installer_type: 'fuel'
            installer_ip: '10.20.0.2'

    installer:
        -fuel

    stream:
        - master:
            branch: 'master'

    project: 'bottlenecks'
    somevar: 'foo'
###############################
# Job templates
##############################
- job-template:
    name: 'bottlenecks-test'

    project-type: freestyle

    logrotate:
        daysToKeep: 30
        numToKeep: 10
        artifactDaysToKeep: -1
        artifactNumToKeep: -1

    builders:
        - shell: |
            echo "Hello world from bottlenecks"

- job-template:
    name: 'bottlenecks-daily-{stream}'

    node: master

    # Job template for daily builders
    #
    # Required Variables:
    #     stream:    branch with - in place of / (eg. stable)
    #     branch:    branch (eg. stable)

    project-type: freestyle
    varsetabove: '{somevar}'

    logrotate:
        daysToKeep: 30
        numToKeep: 10
        artifactDaysToKeep: -1
        artifactNumToKeep: -1

    parameters:
        - project-parameter:
            project: '{project}'

    scm:
        - git-scm:
            credentials-id: '{ssh-credentials}'
            refspec: ''
            branch: '{branch}'

    triggers:
        - timed: 'H H * * *'

    prebuilders:
        - test-macro

    builders:
        - shell: |
            echo "hello world"

    postbuilders:
        - test-macro

- job-template:
    name: 'bottlenecks-verify'

    node: master

    project-type: freestyle

    logrotate:
        daysToKeep: 30
        numToKeep: 10
        artifactDaysToKeep: -1
        artifactNumToKeep: -1

    parameters:
        - project-parameter:
            project: '{project}'
        - gerrit-parameter:
            branch: 'master'
    scm:
        - gerrit-trigger-scm:
            credentials-id: '{ssh-credentials}'
            refspec: '$GERRIT_REFSPEC'
            choosing-strategy: 'gerrit'

    triggers:
        - gerrit:
            trigger-on:
                - patchset-created-event:
                    exclude-drafts: 'false'
                    exclude-trivial-rebase: 'false'
                    exclude-no-code-change: 'false'
                - draft-published-event
                - comment-added-contains-event:
                    comment-contains-value: 'recheck'
                - comment-added-contains-event:
                    comment-contains-value: 'reverify'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: '{project}'
                branches:
                  - branch-compare-type: 'ANT'
                    branch-pattern: '**/master'

    builders:
        - shell: |
            echo "hello world"

- job-template:
    name: 'bottlenecks-merge'

    node: master

    # builder-merge job to run JJB update
    #
    # This job's purpose is to update all the JJB

    project-type: freestyle

    logrotate:
        daysToKeep: 30
        numToKeep: 40
        artifactDaysToKeep: -1
        artifactNumToKeep: 5

    parameters:
        - project-parameter:
            project: '{project}'
        - gerrit-parameter:
            branch: 'master'

    scm:
        - gerrit-trigger-scm:
            credentials-id: '{ssh-credentials}'
            refspec: ''
            choosing-strategy: 'default'

    triggers:
        - gerrit:
            trigger-on:
                - change-merged-event
                - comment-added-contains-event:
                    comment-contains-value: 'remerge'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: 'bottlenecks'
                branches:
                    - branch-compare-type: 'ANT'
                      branch-pattern: '**/master'

    builders:
        - shell: |
            echo "hello world"

- job-template:
    name: 'bottlenecks-{installer}-{pod}-{stream}'

    project-type: freestyle

    disabled: false

    node: '{node}'

    parameters:
        - project-parameter:
            project: '{project}'
        - '{pod}-parameters'
        - string:
            name: POD_NAME
            default: '{pod}'
            description: "POD where the job runs"
        - string:
            name: INSTALLER_TYPE
            default: '{installer_type}'
            description: "Installer name that is used for deployment."
        - string:
            name: INSTALLER_IP
            default: '{installer_ip}'
            description: "Installer IP."

    scm:
        - git-scm:
            credentials-id: '{ssh-credentials}'
            refspec: ''
            branch: master

    logrotate:
        daysToKeep: 30
        numToKeep: 10
        artifactDaysToKeep: -1
        artifactNumToKeep: -1

    triggers:
        - 'bottlenecks-trigger-{pod}'

    builders:
        - 'run-rubbos-env-preparation'
        - 'run-rubbos-tools-installation'
        - 'rubbos-exec'

    publishers:
        - email:
            recipients: hongbo.tianhongbo@huawei.com matthew.lijun@huawei.com

###################################
#builders for bottlenecks project
###################################
- builder:
    name: run-rubbos-env-preparation
    builders:
        - shell: |
            #!/bin/bash
            set -o errexit

            echo "Bottlenecks: run rubbos environment preparation"

            cd $WORKSPACE
            cd ./utils/infra_setup
            ./create_instances.sh

- builder:
    name: run-rubbos-tools-installation
    builders:
        - shell: |
            #!/bin/bash
            set -o errexit

            echo "Bottlenecks: to install tools to run rubbos"

            cd $WORKSPACE
            cd ./rubbos/rubbos_scripts/1-1-1/scripts
            ./run.sh
- builder:
    name: rubbos-exec
    builders:
        - shell: |
            #!/bin/bash
            set -o errexit

            echo "Bottlenecks: rubbos executation"

            ssh $CONTROL_HOST
            ./tmp/CONTROL_rubbos_exec.sh

########################
#parameter macros
########################
- parameter:
    name: 'control node ip'
    parameters:
        - string:
            name: CONTROL_HOST
            default: 192.168.50.60
            description: "ip of control node, it's a VM ip launched by installer"

########################
#trigger macros
#######################
- trigger:
    name: 'bottlenecks-trigger-lf'
    triggers:
        -timed: 'H 16 * * *'
