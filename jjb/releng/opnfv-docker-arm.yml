---
##############################################
# job configuration for docker build and push
##############################################

- project:

    name: opnfv-docker-arm

    master: &master
      stream: master
      branch: '{stream}'
      disabled: false
    euphrates: &euphrates
      stream: euphrates
      branch: 'stable/{stream}'
      disabled: false
    functest-arm-receivers: &functest-arm-receivers
      receivers: >
          cristina.pauna@enea.com
          alexandru.avadanii@enea.com
          delia.popescu@enea.com
    dovetail-arm-receivers: &dovetail-arm-receivers
      receivers: >
          cristina.pauna@enea.com
          alexandru.avadanii@enea.com
          alexandru.nemes@enea.com
    storperf-arm-receivers: &storperf-arm-receivers
      receivers: >
          cristina.pauna@enea.com
          alexandru.avadanii@enea.com
          mark.beierl@emc.com
    yardstick-arm-receivers: &yardstick-arm-receivers
      receivers: >
          cristina.pauna@enea.com
          alexandru.avadanii@enea.com
          alexandru.nemes@enea.com
          catalina.focsa@enea.com
          delia.popescu@enea.com
    other-receivers: &other-receivers
      receivers: ''

    dockerfile: "Dockerfile"
    dockerdir: "docker"
    docker_repo_name: "opnfv/{project}"
    arch_tag: ""

    # yamllint disable rule:key-duplicates
    dockerrepo:
      # projects with jobs for master
      - 'functest':
          project: 'functest'
          dockerfile: 'Dockerfile.aarch64'
          docker_repo_name: "opnfv/functest_aarch64"
          <<: *master
          <<: *functest-arm-receivers
      - 'dovetail':
          project: 'dovetail'
          dockerfile: 'Dockerfile.aarch64'
          docker_repo_name: "opnfv/dovetail_aarch64"
          <<: *master
          <<: *dovetail-arm-receivers
      - 'storperf-master':
          project: 'storperf'
          dockerdir: 'docker/storperf-master'
          arch_tag: 'aarch64'
          <<: *master
          <<: *storperf-arm-receivers
      - 'storperf-graphite':
          project: 'storperf'
          dockerdir: 'docker/storperf-graphite'
          arch_tag: 'aarch64'
          <<: *master
          <<: *storperf-arm-receivers
      - 'storperf-httpfrontend':
          project: 'storperf'
          dockerdir: 'docker/storperf-httpfrontend'
          arch_tag: 'aarch64'
          <<: *master
          <<: *storperf-arm-receivers
      - 'storperf-reporting':
          project: 'storperf'
          dockerdir: 'docker/storperf-reporting'
          arch_tag: 'aarch64'
          <<: *master
          <<: *storperf-arm-receivers
      - 'storperf-swaggerui':
          project: 'storperf'
          dockerdir: 'docker/storperf-swaggerui'
          arch_tag: 'aarch64'
          <<: *master
          <<: *storperf-arm-receivers
      - 'yardstick':
          project: 'yardstick'
          dockerfile: 'Dockerfile.aarch64'
          docker_repo_name: "opnfv/yardstick_aarch64"
          <<: *master
          <<: *yardstick-arm-receivers
      # projects with jobs for stable/euphrates
      - 'functest':
          project: 'functest'
          dockerfile: 'Dockerfile.aarch64'
          docker_repo_name: "opnfv/functest_aarch64"
          <<: *euphrates
          <<: *functest-arm-receivers
      - 'dovetail':
          project: 'dovetail'
          dockerfile: 'Dockerfile.aarch64'
          docker_repo_name: "opnfv/dovetail_aarch64"
          <<: *euphrates
          <<: *dovetail-arm-receivers
      - 'storperf-master':
          project: 'storperf'
          dockerdir: 'docker/storperf-master'
          arch_tag: 'aarch64'
          <<: *euphrates
          <<: *storperf-arm-receivers
      - 'storperf-graphite':
          project: 'storperf'
          dockerdir: 'docker/storperf-graphite'
          arch_tag: 'aarch64'
          <<: *euphrates
          <<: *storperf-arm-receivers
      - 'storperf-httpfrontend':
          project: 'storperf'
          dockerdir: 'docker/storperf-httpfrontend'
          arch_tag: 'aarch64'
          <<: *euphrates
          <<: *storperf-arm-receivers
      - 'storperf-reporting':
          project: 'storperf'
          dockerdir: 'docker/storperf-reporting'
          arch_tag: 'aarch64'
          <<: *euphrates
          <<: *storperf-arm-receivers
      - 'storperf-swaggerui':
          project: 'storperf'
          dockerdir: 'docker/storperf-swaggerui'
          arch_tag: 'aarch64'
          <<: *euphrates
          <<: *storperf-arm-receivers
      - 'yardstick':
          project: 'yardstick'
          dockerfile: 'Dockerfile.aarch64'
          docker_repo_name: "opnfv/yardstick_aarch64"
          <<: *euphrates
          <<: *yardstick-arm-receivers
      - 'functest-core':
          project: 'functest-core'
          dockerdir: 'docker/core'
          arch_tag: 'arm64'
          <<: *euphrates
          <<: *functest-arm-receivers
      - 'functest-healthcheck':
          project: 'functest-healthcheck'
          dockerdir: 'docker/healthcheck'
          arch_tag: 'arm64'
          <<: *euphrates
          <<: *functest-arm-receivers
      - 'functest-features':
          project: 'functest-features'
          dockerdir: 'docker/features'
          arch_tag: 'arm64'
          <<: *euphrates
          <<: *functest-arm-receivers
      - 'functest-components':
          project: 'functest-components'
          dockerdir: 'docker/components'
          arch_tag: 'arm64'
          <<: *euphrates
          <<: *functest-arm-receivers
      - 'functest-parser':
          project: 'functest-parser'
          dockerdir: 'docker/parser'
          arch_tag: 'arm64'
          <<: *euphrates
          <<: *functest-arm-receivers
      - 'functest-smoke':
          project: 'functest-smoke'
          dockerdir: 'docker/smoke'
          arch_tag: 'arm64'
          <<: *euphrates
          <<: *functest-arm-receivers
      - 'functest-vnf':
          project: 'functest-vnf'
          dockerdir: 'docker/vnf'
          arch_tag: 'arm64'
          <<: *euphrates
          <<: *functest-arm-receivers
      - 'functest-restapi':
          project: 'functest-restapi'
          dockerdir: 'docker/restapi'
          arch_tag: 'arm64'
          <<: *euphrates
          <<: *functest-arm-receivers


    # yamllint enable rule:key-duplicates
    jobs:
      - '{dockerrepo}-docker-build-arm-push-{stream}'
########################
# job templates
########################
- job-template:
    name: '{dockerrepo}-docker-build-arm-push-{stream}'

    project-type: multijob

    disabled: '{obj:disabled}'

    parameters: &parameters
      - project-parameter:
          project: '{project}'
          branch: '{branch}'
      - 'opnfv-build-ubuntu-arm-defaults'
      - string:
          name: PUSH_IMAGE
          default: "true"
          description: "To enable/disable pushing the image to Dockerhub."
      - string:
          name: DOCKER_REPO_NAME
          default: "{docker_repo_name}"
          description: "Dockerhub repo to be pushed to."
      - string:
          name: RELEASE_VERSION
          default: ""
          description: "Release version, e.g. 1.0, 2.0, 3.0"
      - string:
          name: DOCKER_DIR
          default: "{dockerdir}"
          description: "Directory containing files needed by the Dockerfile"
      - string:
          name: DOCKERFILE
          default: "{dockerfile}"
          description: "Dockerfile to use for creating the image."
      - string:
          name: ARCH_TAG
          default: "{arch_tag}"
          description: "If set, will be added to the docker image tag"
      - string:
          name: PROJECT
          default: "{project}"
          description: "Project name used to enable job conditions"

    properties:
      - throttle:
          max-per-node: 1
          option: 'project'

    scm:
      - git-scm

    builders:
      - shell: |
          #!/bin/bash
          echo "Triggering phase jobs!"
      - multijob:
          name: 'build-base-img'
          execution-type: SEQUENTIAL
          projects:
            - name: '{dockerrepo}-build-push-{stream}'
              current-parameters: false
              git-revision: true
              node-parameters: false
              predefined-parameters: |
                PUSH_IMAGE=$PUSH_IMAGE
                DOCKER_REPO_NAME=$DOCKER_REPO_NAME
                DOCKER_DIR=$DOCKER_DIR
                COMMIT_ID=$COMMIT_ID
                RELEASE_VERSION=$RELEASE_VERSION
                DOCKERFILE=$DOCKERFILE
                ARCH_TAG=$ARCH_TAG
                PROJECT=$PROJECT
              enable-condition:
                "def repo = ! ('$PROJECT' ==~ /functest-(healthcheck|features|vnf|restapi|components|smoke)/)"
              kill-phase-on: FAILURE
              abort-all-jobs: false
      - multijob:
          name: 'build-child-img'
          condition: SUCCESSFUL
          execution-type: PARALLEL
          projects:
            - name: '{dockerrepo}-build-push-{stream}'
              current-parameters: false
              git-revision: true
              node-parameters: false
              predefined-parameters: |
                PUSH_IMAGE=$PUSH_IMAGE
                DOCKER_REPO_NAME=$DOCKER_REPO_NAME
                DOCKER_DIR=$DOCKER_DIR
                COMMIT_ID=$COMMIT_ID
                RELEASE_VERSION=$RELEASE_VERSION
                DOCKERFILE=$DOCKERFILE
                ARCH_TAG=$ARCH_TAG
                PROJECT=$PROJECT
              kill-phase-on: FAILURE
              enable-condition:
                "def repo = ('$PROJECT' ==~ /functest-(healthcheck|features|vnf|restapi|components|smoke)/)"
              abort-all-jobs: false
      - multijob:
          name: 'create-img-manifest'
          condition: SUCCESSFUL
          execution-type: PARALLEL
          projects:
            - name: '{dockerrepo}-create-arm-manifest-{stream}'
              current-parameters: false
              git-revision: true
              node-parameters: false
              predefined-parameters: |
                DOCKER_REPO_NAME=$DOCKER_REPO_NAME
                RELEASE_VERSION=$RELEASE_VERSION
                ARCH_TAG=$ARCH_TAG
                PROJECT=$PROJECT
              kill-phase-on: FAILURE
              enable-condition:
                "def repo = ('$PROJECT' ==~ /opnfv.functest-(healthcheck|features|vnf|restapi|components|smoke)/)"
              abort-all-jobs: false

    triggers:
      - pollscm:
          cron: "*/30 * * * *"

    publishers:
      - email:
          recipients: '{receivers}'
      - email-jenkins-admins-on-failure
