---
##############################################
# job configuration for docker build and push
##############################################

- project:

    name: opnfv-docker

    master: &master
      stream: master
      branch: '{stream}'
      disabled: false
    hunter: &hunter
      stream: hunter
      branch: 'stable/{stream}'
      disabled: false
    iruya: &iruya
      stream: iruya
      branch: 'stable/{stream}'
      disabled: false
    laas-receivers: &laas_receivers
      receivers: >
          pberberian@iol.unh.edu
          sbergeron@iol.unh.edu
    storperf-receivers: &storperf-receivers
      receivers: >
          mbeierl@vmware.com
    yardstick-receivers: &yardstick-receivers
      receivers: >
          rexlee8776@gmail.com
    other-receivers: &other-receivers
      receivers: ''

    dockerfile: "Dockerfile"
    dockerdir: "docker"
    arch_tag: ""
    extra_build_args: ""

    # This is the dockerhub repo the image will be pushed to as
    # 'opnfv/{dockerrepo}. See: DOCKER_REPO_NAME parameter.
    # 'project' is the OPNFV repo we expect to contain the Dockerfile
    # yamllint disable rule:key-duplicates
    dockerrepo:
      # projects with jobs for master
      - 'releng-anteater':
          project: 'releng-anteater'
          <<: *master
          <<: *other-receivers
      - 'barometer-collectd':
          project: 'barometer'
          dockerdir: 'docker/barometer-collectd'
          <<: *master
          <<: *other-receivers
      - 'barometer-collectd-experimental':
          project: 'barometer'
          dockerdir: '.'
          dockerfile: 'docker/barometer-collectd-experimental/Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'barometer-collectd-master':
          project: 'barometer'
          dockerdir: '.'
          dockerfile: 'docker/barometer-collectd-master/Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'barometer-dma':
          project: 'barometer'
          dockerdir: 'docker/barometer-dma'
          <<: *master
          <<: *other-receivers
      - 'barometer-grafana':
          project: 'barometer'
          dockerdir: 'docker/barometer-grafana'
          <<: *master
          <<: *other-receivers
      - 'barometer-influxdb':
          project: 'barometer'
          dockerdir: 'docker/barometer-influxdb'
          <<: *master
          <<: *other-receivers
      - 'barometer-kafka':
          project: 'barometer'
          dockerdir: 'docker/barometer-kafka'
          <<: *master
          <<: *other-receivers
      - 'barometer-ves':
          project: 'barometer'
          dockerdir: 'docker/barometer-ves'
          <<: *master
          <<: *other-receivers
      - 'barometer-snmp':
          project: 'barometer'
          dockerdir: 'docker/barometer-snmp'
          <<: *master
          <<: *other-receivers
      - 'bottlenecks':
          project: 'bottlenecks'
          <<: *master
          <<: *other-receivers
      - 'clover':
          project: 'clover'
          dockerdir: '.'
          dockerfile: 'docker/Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'clover-ns-nginx-lb':
          project: 'clover'
          dockerdir: 'samples/services/nginx/docker'
          dockerfile: 'subservices/lb/Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'clover-ns-nginx-proxy':
          project: 'clover'
          dockerdir: 'samples/services/nginx/docker'
          dockerfile: 'subservices/proxy/Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'clover-ns-nginx-server':
          project: 'clover'
          dockerdir: 'samples/services/nginx/docker'
          dockerfile: 'subservices/server/Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'clover-ns-snort-ids':
          project: 'clover'
          dockerdir: 'samples/services/snort_ids/docker'
          dockerfile: 'Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'clover-controller':
          project: 'clover'
          dockerdir: 'clover/controller'
          dockerfile: 'docker/Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'clover-collector':
          project: 'clover'
          dockerdir: 'clover/collector'
          dockerfile: 'docker/Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'clover-jmeter-master':
          project: 'clover'
          dockerdir: 'clover/tools/jmeter'
          dockerfile: 'jmeter-master/Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'clover-jmeter-slave':
          project: 'clover'
          dockerdir: 'clover/tools/jmeter'
          dockerfile: 'jmeter-slave/Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'clover-sample-app':
          project: 'clover'
          dockerdir: 'samples/scenarios/sample_app'
          dockerfile: 'Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'clover-ns-modsecurity-crs':
          project: 'clover'
          dockerdir: 'samples/services/modsecurity/docker'
          dockerfile: 'Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'clover-spark':
          project: 'clover'
          dockerdir: 'clover/spark/docker/clover-spark'
          dockerfile: 'Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'clover-spark-submit':
          project: 'clover'
          dockerdir: 'clover/spark/docker/spark-submit'
          dockerfile: 'Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'clover-clovisor':
          project: 'clover'
          dockerdir: 'clover/clovisor'
          dockerfile: 'Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'cperf':
          project: 'cperf'
          <<: *master
          <<: *other-receivers
      - 'dovetail':
          project: 'dovetail'
          <<: *master
          <<: *other-receivers
      - 'dovetail-webportal-api':
          project: 'dovetail-webportal'
          dockerfile: 'Dockerfile.api'
          <<: *master
          <<: *other-receivers
      - 'dovetail-webportal-web':
          project: 'dovetail-webportal'
          dockerfile: 'Dockerfile.web'
          <<: *master
          <<: *other-receivers
      - 'dovetail-webportal-web-onap':
          project: 'dovetail-webportal'
          dockerfile: 'Dockerfile.web'
          extra_build_args: 'CONTAINER=onap GUI=onap-ui'
          <<: *master
          <<: *other-receivers
      - 'nfvbench':
          project: 'nfvbench'
          <<: *master
          <<: *other-receivers
      - 'laas-dashboard':
          project: 'laas'
          dockerdir: '.'
          dockerfile: 'web/Dockerfile'
          <<: *master
          <<: *laas_receivers
      - 'laas-celery':
          project: 'laas'
          dockerdir: '.'
          dockerfile: 'worker/Dockerfile'
          <<: *master
          <<: *laas_receivers
      - 'qtip':
          project: 'qtip'
          dockerdir: '.'
          dockerfile: 'docker/Dockerfile.local'
          <<: *master
          <<: *other-receivers
      - 'qtip-nettest':
          project: 'qtip'
          dockerdir: 'contrib/nettest'
          <<: *master
          <<: *other-receivers
      - 'storperf-master':
          project: 'storperf'
          dockerdir: 'docker/storperf-master'
          arch_tag: 'x86_64'
          <<: *master
          <<: *storperf-receivers
      - 'storperf-graphite':
          project: 'storperf'
          dockerdir: 'docker/storperf-graphite'
          arch_tag: 'x86_64'
          <<: *master
          <<: *storperf-receivers
      - 'storperf-httpfrontend':
          project: 'storperf'
          dockerdir: 'docker/storperf-httpfrontend'
          arch_tag: 'x86_64'
          <<: *master
          <<: *storperf-receivers
      - 'storperf-reporting':
          project: 'storperf'
          dockerdir: 'docker/storperf-reporting'
          arch_tag: 'x86_64'
          <<: *master
          <<: *storperf-receivers
      - 'storperf-swaggerui':
          project: 'storperf'
          dockerdir: 'docker/storperf-swaggerui'
          arch_tag: 'x86_64'
          <<: *master
          <<: *storperf-receivers
      - 'yardstick':
          project: 'yardstick'
          <<: *master
          <<: *yardstick-receivers
      - 'yardstick-ubuntu-18.04':
          project: 'yardstick'
          dockerfile: 'Dockerfile_ubuntu18'
          <<: *master
          <<: *yardstick-receivers
      - 'yardstick-image-k8s':
          project: 'yardstick'
          dockerdir: 'docker/k8s'
          <<: *master
          <<: *yardstick-receivers

      # projects with jobs for hunter
      - 'bottlenecks':
          project: 'bottlenecks'
          <<: *hunter
          <<: *other-receivers
      - 'dovetail':
          project: 'dovetail'
          <<: *hunter
          <<: *other-receivers
      - 'yardstick':
          project: 'yardstick'
          <<: *hunter
          <<: *yardstick-receivers

      # projects with jobs for iruya
      - 'barometer-dma':
          project: 'barometer'
          dockerdir: 'docker/barometer-dma'
          <<: *iruya
          <<: *other-receivers
      - 'barometer-collectd':
          project: 'barometer'
          dockerdir: 'docker/barometer-collectd'
          <<: *iruya
          <<: *other-receivers
      - 'barometer-collectd-experimental':
          project: 'barometer'
          dockerdir: '.'
          dockerfile: 'docker/barometer-collectd-experimental/Dockerfile'
          <<: *iruya
          <<: *other-receivers
      - 'barometer-collectd-master':
          project: 'barometer'
          dockerdir: '.'
          dockerfile: 'docker/barometer-collectd-master/Dockerfile'
          <<: *iruya
          <<: *other-receivers
      - 'barometer-grafana':
          project: 'barometer'
          dockerdir: 'docker/barometer-grafana'
          <<: *iruya
          <<: *other-receivers
      - 'barometer-influxdb':
          project: 'barometer'
          dockerdir: 'docker/barometer-influxdb'
          <<: *iruya
          <<: *other-receivers
      - 'barometer-kafka':
          project: 'barometer'
          dockerdir: 'docker/barometer-kafka'
          <<: *iruya
          <<: *other-receivers
      - 'barometer-ves':
          project: 'barometer'
          dockerdir: 'docker/barometer-ves'
          <<: *iruya
          <<: *other-receivers
      - 'barometer-snmp':
          project: 'barometer'
          dockerdir: 'docker/barometer-snmp'
          <<: *iruya
          <<: *other-receivers
      - 'storperf-master':
          project: 'storperf'
          dockerdir: 'docker/storperf-master'
          arch_tag: 'x86_64'
          <<: *iruya
          <<: *storperf-receivers
      - 'storperf-graphite':
          project: 'storperf'
          dockerdir: 'docker/storperf-graphite'
          arch_tag: 'x86_64'
          <<: *iruya
          <<: *storperf-receivers
      - 'storperf-httpfrontend':
          project: 'storperf'
          dockerdir: 'docker/storperf-httpfrontend'
          arch_tag: 'x86_64'
          <<: *iruya
          <<: *storperf-receivers
      - 'storperf-reporting':
          project: 'storperf'
          dockerdir: 'docker/storperf-reporting'
          arch_tag: 'x86_64'
          <<: *iruya
          <<: *storperf-receivers
      - 'storperf-swaggerui':
          project: 'storperf'
          dockerdir: 'docker/storperf-swaggerui'
          arch_tag: 'x86_64'
          <<: *iruya
          <<: *storperf-receivers

    # yamllint enable rule:key-duplicates
    jobs:
      - "{dockerrepo}-docker-build-push-{stream}"

- project:

    name: opnfv-monitor-docker        # projects which only monitor dedicated file or path

    dockerfile: "Dockerfile"
    dockerdir: "docker"
    arch_tag: ""
    extra_build_args: ""

    project:
      # projects with jobs for master
      - 'daisy':
          dockerrepo: 'daisy'
          <<: *master

    jobs:
      - '{project}-docker-build-push-monitor-{stream}'

########################
# job templates
########################
- job-template:
    name: '{dockerrepo}-docker-build-push-{stream}'

    disabled: '{obj:disabled}'

    parameters: &parameters
      - project-parameter:
          project: '{project}'
          branch: '{branch}'
      - 'opnfv-build-ubuntu-defaults'
      - string:
          name: PUSH_IMAGE
          default: "true"
          description: "To enable/disable pushing the image to Dockerhub."
      - string:
          name: DOCKER_REPO_NAME
          default: "opnfv/{dockerrepo}"
          description: "Dockerhub repo to be pushed to."
      - string:
          name: DOCKER_DIR
          default: "{dockerdir}"
          description: "Directory containing files needed by the Dockerfile"
      - string:
          name: COMMIT_ID
          default: ""
          description: "commit id to make a snapshot docker image"
      - string:
          name: GERRIT_REFNAME
          default: ""
          description: "Docker tag to be built, e.g. refs/tags/5.0.0, refs/tags/opnfv-5.0.0, refs/tags/5.0.RC1"
      - string:
          name: DOCKERFILE
          default: "{dockerfile}"
          description: "Dockerfile to use for creating the image."
      - string:
          name: ARCH_TAG
          default: "{arch_tag}"
          description: "If set, this value will be added to the docker image tag as a prefix"
      - string:
          name: EXTRA_BUILD_ARGS
          default: "{extra_build_args}"
          description: "Whitespace separated key=value pairs. If set, these args will be used to build docker image"

    properties:
      - throttle:
          max-per-node: 1
          option: 'project'

    scm:
      - git-scm

    builders: &builders
      - shell:
          !include-raw-escape: ./opnfv-docker.sh

    triggers:
      - pollscm:
          cron: "*/30 * * * *"
      - gerrit-trigger-tag-created:
          project: '{project}'

    publishers:
      - email:
          recipients: '{receivers}'
      - email-jenkins-admins-on-failure

- job-template:
    name: '{project}-docker-build-push-monitor-{stream}'
    disabled: '{obj:disabled}'
    parameters: *parameters

    scm:
      - git-scm

    builders: *builders

    # trigger only matching the file name
    triggers:
      - gerrit:
          trigger-on:
            - change-merged-event
            - comment-added-contains-event:
                comment-contains-value: 'remerge'
          projects:
            - project-compare-type: 'ANT'
              project-pattern: '{project}'
              branches:
                - branch-compare-type: 'ANT'
                  branch-pattern: '**/{branch}'
              file-paths:
                - compare-type: ANT
                  pattern: 'docker/**'
