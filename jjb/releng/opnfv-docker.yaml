---
##############################################
# job configuration for docker build and push
##############################################

- project:

    name: opnfv-docker

    master: &master
      stream: master
      branch: '{stream}'
      disabled: false
    hunter: &hunter
      stream: hunter
      branch: 'stable/{stream}'
      disabled: false
    iruya: &iruya
      stream: iruya
      branch: 'stable/{stream}'
      disabled: false
    jerma: &jerma
      stream: jerma
      branch: 'stable/{stream}'
      disabled: false
    kali: &kali
      stream: kali
      branch: 'stable/{stream}'
      disabled: false
    laas-receivers: &laas_receivers
      receivers: >
          pberberian@iol.unh.edu
          sbergeron@iol.unh.edu
    storperf-receivers: &storperf-receivers
      receivers: >
          mbeierl@vmware.com
    samplevnf-receivers: &samplevnf-receivers
      receivers: >
          luc.provoost@intel.com
          yury.kylulin@intel.com
    vineperf-receivers: &vineperf-receivers
      receivers: >
          sridhar.rao@spirent.com
    cirv-receivers: &cirv-receivers
      receivers: >
          sridhar.rao@spirent.com
          parthyadav3105@gmail.com
    other-receivers: &other-receivers
      receivers: ''

    dockerfile: "Dockerfile"
    dockerdir: "docker"
    arch_tag: ""
    extra_build_args: ""

    # This is the dockerhub repo the image will be pushed to as
    # 'anuket/{dockerrepo}. See: DOCKER_REPO_NAME parameter.
    # 'project' is the OPNFV repo we expect to contain the Dockerfile
    # yamllint disable rule:key-duplicates
    dockerrepo:
      # projects with jobs for master
      - 'releng-anteater':
          project: 'releng-anteater'
          <<: *master
          <<: *other-receivers
      - 'barometer-collectd':
          project: 'barometer'
          dockerdir: 'docker/barometer-collectd'
          <<: *master
          <<: *other-receivers
      - 'barometer-collectd-experimental':
          project: 'barometer'
          dockerdir: '.'
          dockerfile: 'docker/barometer-collectd-experimental/Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'barometer-collectd-latest':
          project: 'barometer'
          dockerdir: '.'
          dockerfile: 'docker/barometer-collectd-latest/Dockerfile'
          <<: *master
          <<: *other-receivers
      - 'barometer-dma':
          project: 'barometer'
          dockerdir: 'docker/barometer-dma'
          <<: *master
          <<: *other-receivers
      - 'barometer-grafana':
          project: 'barometer'
          dockerdir: 'docker/barometer-grafana'
          <<: *master
          <<: *other-receivers
      - 'barometer-influxdb':
          project: 'barometer'
          dockerdir: 'docker/barometer-influxdb'
          <<: *master
          <<: *other-receivers
      - 'barometer-kafka':
          project: 'barometer'
          dockerdir: 'docker/barometer-kafka'
          <<: *master
          <<: *other-receivers
      - 'barometer-ves':
          project: 'barometer'
          dockerdir: 'docker/barometer-ves'
          <<: *master
          <<: *other-receivers
      - 'barometer-snmp':
          project: 'barometer'
          dockerdir: 'docker/barometer-snmp'
          <<: *master
          <<: *other-receivers
      - 'dovetail':
          project: 'dovetail'
          <<: *master
          <<: *other-receivers
      - 'dovetail-webportal-api':
          project: 'dovetail-webportal'
          dockerfile: 'Dockerfile.api'
          <<: *master
          <<: *other-receivers
      - 'dovetail-webportal-web':
          project: 'dovetail-webportal'
          dockerfile: 'Dockerfile.web'
          <<: *master
          <<: *other-receivers
      - 'dovetail-webportal-web-onap':
          project: 'dovetail-webportal'
          dockerfile: 'Dockerfile.web'
          extra_build_args: 'CONTAINER=onap GUI=onap-ui'
          <<: *master
          <<: *other-receivers
      - 'nfvbench':
          project: 'nfvbench'
          <<: *master
          <<: *other-receivers
      - 'laas-dashboard':
          project: 'laas'
          dockerdir: '.'
          dockerfile: 'web/Dockerfile'
          <<: *master
          <<: *laas_receivers
      - 'laas-celery':
          project: 'laas'
          dockerdir: '.'
          dockerfile: 'worker/Dockerfile'
          <<: *master
          <<: *laas_receivers
      - 'storperf-master':
          project: 'storperf'
          dockerdir: 'docker/storperf-master'
          arch_tag: 'x86_64'
          <<: *master
          <<: *storperf-receivers
      - 'storperf-graphite':
          project: 'storperf'
          dockerdir: 'docker/storperf-graphite'
          arch_tag: 'x86_64'
          <<: *master
          <<: *storperf-receivers
      - 'storperf-httpfrontend':
          project: 'storperf'
          dockerdir: 'docker/storperf-httpfrontend'
          arch_tag: 'x86_64'
          <<: *master
          <<: *storperf-receivers
      - 'storperf-reporting':
          project: 'storperf'
          dockerdir: 'docker/storperf-reporting'
          arch_tag: 'x86_64'
          <<: *master
          <<: *storperf-receivers
      - 'storperf-swaggerui':
          project: 'storperf'
          dockerdir: 'docker/storperf-swaggerui'
          arch_tag: 'x86_64'
          <<: *master
          <<: *storperf-receivers
      - 'storperf-workloadagent':
          project: 'storperf'
          dockerdir: 'docker/storperf-workloadagent'
          arch_tag: 'x86_64'
          <<: *master
          <<: *storperf-receivers
      - 'rapid':
          project: 'samplevnf'
          dockerdir: 'VNFs/DPPD-PROX/helper-scripts/rapid'
          <<: *master
          <<: *samplevnf-receivers
      - 'vineperf':
          project: 'vineperf'
          dockerdir: 'tools/docker/vineperf'
          <<: *master
          <<: *vineperf-receivers
      - 'vineperf-prox':
          project: 'vineperf'
          dockerdir: 'tools/docker/test-containers/trafficgen-pods/prox'
          <<: *master
          <<: *vineperf-receivers
      - 'vineperf-trex':
          project: 'vineperf'
          dockerdir: 'tools/docker/test-containers/trafficgen-pods/trex'
          <<: *master
          <<: *vineperf-receivers
      - 'vineperf-pktgen':
          project: 'vineperf'
          dockerdir: 'tools/docker/test-containers/trafficgen-pods/pktgen'
          <<: *master
          <<: *vineperf-receivers
      - 'vineperf-l2l3fwd':
          project: 'vineperf'
          dockerdir: 'tools/docker/test-containers/dpdk-forwarding-pods/l2l3fwd'
          <<: *master
          <<: *vineperf-receivers
      - 'vineperf-vpp':
          project: 'vineperf'
          dockerdir: 'tools/docker/test-containers/dpdk-forwarding-pods/vpp'
          <<: *master
          <<: *vineperf-receivers
      - 'sdvconfig':
          project: 'cirv-sdv'
          dockerdir: 'sdv/docker/sdvconfig'
          <<: *master
          <<: *cirv-receivers
      - 'sdvmodel':
          project: 'cirv-sdv'
          dockerdir: 'sdv/docker/sdvmodel'
          <<: *master
          <<: *cirv-receivers
      - 'sdvsecurity':
          project: 'cirv-sdv'
          dockerdir: 'sdv/docker/sdvsecurity'
          <<: *master
          <<: *cirv-receivers
      - 'sdvstate':
          project: 'cirv-sdv'
          dockerdir: 'sdv/docker/sdvstate'
          <<: *master
          <<: *cirv-receivers
      - 'sdvurls':
          project: 'cirv-sdv'
          dockerdir: 'sdv/docker/sdvurls'
          <<: *master
          <<: *cirv-receivers

      # projects with jobs for hunter
      - 'dovetail':
          project: 'dovetail'
          <<: *hunter
          <<: *other-receivers

      # projects with jobs for iruya
      - 'storperf-master':
          project: 'storperf'
          dockerdir: 'docker/storperf-master'
          arch_tag: 'x86_64'
          <<: *iruya
          <<: *storperf-receivers
      - 'storperf-graphite':
          project: 'storperf'
          dockerdir: 'docker/storperf-graphite'
          arch_tag: 'x86_64'
          <<: *iruya
          <<: *storperf-receivers
      - 'storperf-httpfrontend':
          project: 'storperf'
          dockerdir: 'docker/storperf-httpfrontend'
          arch_tag: 'x86_64'
          <<: *iruya
          <<: *storperf-receivers
      - 'storperf-reporting':
          project: 'storperf'
          dockerdir: 'docker/storperf-reporting'
          arch_tag: 'x86_64'
          <<: *iruya
          <<: *storperf-receivers
      - 'storperf-swaggerui':
          project: 'storperf'
          dockerdir: 'docker/storperf-swaggerui'
          arch_tag: 'x86_64'
          <<: *iruya
          <<: *storperf-receivers
      - 'storperf-workloadagent':
          project: 'storperf'
          dockerdir: 'docker/storperf-workloadagent'
          arch_tag: 'x86_64'
          <<: *iruya
          <<: *storperf-receivers

      # projects with jobs for jerma
      - 'barometer-collectd':
          project: 'barometer'
          dockerdir: 'docker/barometer-collectd'
          <<: *jerma
          <<: *other-receivers
      - 'barometer-collectd-experimental':
          project: 'barometer'
          dockerdir: '.'
          dockerfile: 'docker/barometer-collectd-experimental/Dockerfile'
          <<: *jerma
          <<: *other-receivers
      - 'barometer-collectd-latest':
          project: 'barometer'
          dockerdir: '.'
          dockerfile: 'docker/barometer-collectd-latest/Dockerfile'
          <<: *jerma
          <<: *other-receivers
      - 'barometer-dma':
          project: 'barometer'
          dockerdir: 'docker/barometer-dma'
          <<: *jerma
          <<: *other-receivers
      - 'barometer-grafana':
          project: 'barometer'
          dockerdir: 'docker/barometer-grafana'
          <<: *jerma
          <<: *other-receivers
      - 'barometer-influxdb':
          project: 'barometer'
          dockerdir: 'docker/barometer-influxdb'
          <<: *jerma
          <<: *other-receivers
      - 'barometer-kafka':
          project: 'barometer'
          dockerdir: 'docker/barometer-kafka'
          <<: *jerma
          <<: *other-receivers
      - 'barometer-ves':
          project: 'barometer'
          dockerdir: 'docker/barometer-ves'
          <<: *jerma
          <<: *other-receivers
      - 'barometer-snmp':
          project: 'barometer'
          dockerdir: 'docker/barometer-snmp'
          <<: *jerma
          <<: *other-receivers

      # projects with jobs for kali
      - 'barometer-collectd':
          project: 'barometer'
          dockerdir: 'docker/barometer-collectd'
          <<: *kali
          <<: *other-receivers
      - 'barometer-collectd-experimental':
          project: 'barometer'
          dockerdir: '.'
          dockerfile: 'docker/barometer-collectd-experimental/Dockerfile'
          <<: *kali
          <<: *other-receivers
      - 'barometer-collectd-latest':
          project: 'barometer'
          dockerdir: '.'
          dockerfile: 'docker/barometer-collectd-latest/Dockerfile'
          <<: *kali
          <<: *other-receivers
      - 'barometer-dma':
          project: 'barometer'
          dockerdir: 'docker/barometer-dma'
          <<: *kali
          <<: *other-receivers
      - 'barometer-grafana':
          project: 'barometer'
          dockerdir: 'docker/barometer-grafana'
          <<: *kali
          <<: *other-receivers
      - 'barometer-influxdb':
          project: 'barometer'
          dockerdir: 'docker/barometer-influxdb'
          <<: *kali
          <<: *other-receivers
      - 'barometer-kafka':
          project: 'barometer'
          dockerdir: 'docker/barometer-kafka'
          <<: *kali
          <<: *other-receivers
      - 'barometer-ves':
          project: 'barometer'
          dockerdir: 'docker/barometer-ves'
          <<: *kali
          <<: *other-receivers
      - 'barometer-snmp':
          project: 'barometer'
          dockerdir: 'docker/barometer-snmp'
          <<: *kali
          <<: *other-receivers

    # yamllint enable rule:key-duplicates
    jobs:
      - "{dockerrepo}-docker-build-push-{stream}"

########################
# job templates
########################
- job-template:
    name: '{dockerrepo}-docker-build-push-{stream}'

    disabled: '{obj:disabled}'

    parameters: &parameters
      - project-parameter:
          project: '{project}'
          branch: '{branch}'
      - 'opnfv-build-ubuntu-defaults'
      - string:
          name: PUSH_IMAGE
          default: "true"
          description: "To enable/disable pushing the image to Dockerhub."
      - string:
          name: DOCKER_REPO_NAME
          default: "anuket/{dockerrepo}"
          description: "Dockerhub repo to be pushed to."
      - string:
          name: DOCKER_DIR
          default: "{dockerdir}"
          description: "Directory containing files needed by the Dockerfile"
      - string:
          name: COMMIT_ID
          default: ""
          description: "commit id to make a snapshot docker image"
      - string:
          name: GERRIT_REFNAME
          default: ""
          description: "Docker tag to be built, e.g. refs/tags/5.0.0, refs/tags/opnfv-5.0.0, refs/tags/5.0.RC1"
      - string:
          name: DOCKERFILE
          default: "{dockerfile}"
          description: "Dockerfile to use for creating the image."
      - string:
          name: ARCH_TAG
          default: "{arch_tag}"
          description: "If set, this value will be added to the docker image tag as a prefix"
      - string:
          name: EXTRA_BUILD_ARGS
          default: "{extra_build_args}"
          description: "Whitespace separated key=value pairs. If set, these args will be used to build docker image"

    properties:
      - throttle:
          max-per-node: 1
          option: 'project'

    scm:
      - git-scm

    builders: &builders
      - shell:
          !include-raw-escape: ./opnfv-docker.sh

    triggers:
      - pollscm:
          cron: "*/30 * * * *"
      - gerrit-trigger-tag-created:
          project: '{project}'

    publishers:
      - email:
          recipients: '{receivers}'
      - email-jenkins-admins-on-failure
