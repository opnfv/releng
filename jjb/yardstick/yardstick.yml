- project:
    name: yardstick

    project: '{name}'

    pod:
        - opnfv-jump-2:
            installer: fuel
        - ericsson-pod1:
            installer: fuel
        - huawei-us-deploy-bare-1:
            installer: compass4nfv

    loop:
        - daily

    jobs:
        - 'yardstick-{installer}-{pod}-{loop}-{stream}'
        - 'yardstick-merge-{stream}'
        - 'yardstick-verify-{stream}'

    stream:
        - master:
            branch: 'master'
            gs-pathname: ''
#        - brahmaputra:
#            branch: 'stable/brahmaputra'
#            gs-pathname: '/brahmaputra'

- job-template:
    name: 'yardstick-verify-{stream}'

    parameters:
        - project-parameter:
            project: '{project}'
        - gerrit-parameter:
            branch: '{branch}'
        - 'ericsson-ca-build-1-defaults'

    scm:
        - gerrit-trigger-scm:
            credentials-id: '{ssh-credentials}'
            refspec: '$GERRIT_REFSPEC'
            choosing-strategy: 'gerrit'

    triggers:
        - gerrit:
            trigger-on:
                - patchset-created-event:
                    exclude-drafts: 'false'
                    exclude-trivial-rebase: 'false'
                    exclude-no-code-change: 'false'
                - draft-published-event
                - comment-added-contains-event:
                    comment-contains-value: 'recheck'
                - comment-added-contains-event:
                    comment-contains-value: 'reverify'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: '{project}'
                branches:
                  - branch-compare-type: 'ANT'
                    branch-pattern: '**/{branch}'

    builders:
        - shell: |
            #!/bin/bash
            set -o errexit
            set -o pipefail

            echo "Running unit tests..."
            cd $WORKSPACE
            virtualenv $WORKSPACE/yardstick_venv
            source $WORKSPACE/yardstick_venv/bin/activate
            easy_install -U setuptools
            python setup.py develop
            ./run_tests.sh
            deactivate

- job-template:
    name: 'yardstick-merge-{stream}'

    parameters:
        - project-parameter:
            project: '{project}'
        - gerrit-parameter:
            branch: '{branch}'
        - 'ericsson-ca-build-1-defaults'

    scm:
        - gerrit-trigger-scm:
            credentials-id: '{ssh-credentials}'
            refspec: ''
            choosing-strategy: 'default'

    triggers:
        - gerrit:
            trigger-on:
                - change-merged-event
                - comment-added-contains-event:
                    comment-contains-value: 'remerge'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: '{project}'
                branches:
                    - branch-compare-type: 'ANT'
                      branch-pattern: '**/{branch}'

    builders:
        - shell: |
            #!/bin/bash
            set -o errexit
            set -o pipefail

            echo "Running unit tests..."
            cd $WORKSPACE
            virtualenv $WORKSPACE/yardstick_venv
            source $WORKSPACE/yardstick_venv/bin/activate
            easy_install -U setuptools
            python setup.py develop
            ./run_tests.sh
            deactivate

- job-template:
    name: 'yardstick-{installer}-{pod}-{loop}-{stream}'

    disabled: false

    parameters:
        - project-parameter:
            project: '{project}'
        - '{pod}-defaults'
        - '{installer}-defaults'
        - 'yardstick-params-{pod}'
        - string:
            name: YARDSTICK_SUITE_NAME
            default: opnfv_${{NODE_NAME}}_{loop}.yaml
            description: 'Path to test suite'

    scm:
        - git-scm:
            credentials-id: '{ssh-credentials}'
            refspec: ''
            branch: master

    triggers:
        - 'yardstick-trigger-{pod}'

    builders:
        - 'yardstick-cleanup'
        - 'yardstick-fetch-os-creds'
        - 'yardstick-daily'

    publishers:
        - email:
            recipients: ana.cunha@ericsson.com jorgen.w.karlsson@ericsson.com

########################
# builder macros
########################
- builder:
    name: yardstick-daily
    builders:
        - shell: |
            #!/bin/bash
            set -o errexit

            echo "Yardstick: Run benchmark test suites ..."

            # Pull the latest image
            docker pull opnfv/yardstick

            docker run \
               --privileged=true \
                --rm \
                -t \
                -e "INSTALLER_TYPE=${INSTALLER_TYPE}" \
                -e "INSTALLER_IP=${INSTALLER_IP}" \
                -e "POD_NAME=${NODE_NAME}" \
                -e "EXTERNAL_NETWORK=net04_ext" \
                opnfv/yardstick \
                run_tests.sh \
                $YARDSTICK_SUITE_NAME

            echo "Yardstick: done!"

- builder:
    name: yardstick-fetch-os-creds
    builders:
        - shell:
            !include-raw ../../utils/fetch_os_creds.sh

- builder:
    name: yardstick-cleanup
    builders:
        - shell: |
            #!/bin/bash

            echo "Cleaning up docker containers/images..."

            # Remove previous running containers if exist
            if [[ ! -z $(docker ps -a | grep opnfv/yardstick) ]]; then
                echo "Removing existing opnfv/yardstick containers..."
                docker ps | grep opnfv/yardstick | awk '{print $1}' | xargs docker stop
                docker ps -a | grep opnfv/yardstick | awk '{print $1}' | xargs docker rm
            fi

            # Remove existing images if exist
            if [[ ! -z $(docker images | grep opnfv/yardstick) ]]; then
                echo "Docker images to remove:"
                docker images | head -1 && docker images | grep opnfv/yardstick
                image_tags=($(docker images | grep opnfv/yardstick | awk '{print $2}'))
                for tag in "${image_tags[@]}"; do
                    echo "Removing docker image opnfv/yardstick:$tag..."
                    docker rmi opnfv/yardstick:$tag
                done
            fi
########################
# parameter macros
########################
- parameter:
    name: 'yardstick-params-ericsson-pod1'
    parameters:
        - string:
            name: YARDSTICK_DB_BACKEND
            default: 'none'
            description: 'Arguments to use in order to choose the backend DB'

- parameter:
    name: 'yardstick-params-opnfv-jump-2'
    parameters:
        - string:
            name: YARDSTICK_DB_BACKEND
            default: 'db_args'
            description: 'Arguments to use in order to choose the backend DB'

- parameter:
    name: 'yardstick-params-huawei-us-deploy-bare-1'
    parameters:
        - string:
            name: YARDSTICK_DB_BACKEND
            default: 'none'
            description: 'Arguments to use in order to choose the backend DB'
########################
# trigger macros
########################
- trigger:
    name: 'yardstick-trigger-ericsson-pod1'
    triggers:
        - timed: '@midnight'

- trigger:
    name: 'yardstick-trigger-opnfv-jump-2'
    triggers:
        - timed: '#@midnight'

- trigger:
    name: 'yardstick-trigger-huawei-us-deploy-bare-1'
    triggers:
        - timed: '#@midnight'
