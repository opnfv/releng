# Draft for Joid - Work still in progress
# Author: David Blaisonneau [irc: David_Orange ]

########################
# Job configuration for joid
########################
- project:

    name: joid

    project: 'joid'

    installer: 'joid'

    jobs:
        - 'joid-daily-full-{stream}'
        - 'joid-daily-{stream}'
        - 'joid-clean-{stream}'
        - 'joid-gitupdate-{stream}'
        - 'joid-configure-{stream}'
        - 'joid-prepare-{stream}'
        - 'joid-deploy-{stream}'

    pod:
        - orange-fr-pod2

    stream:
        - master:
            branch: 'master'
            gs-pathname: ''

########################
# job templates
########################

# Job: Erase all, including KVM, and deploy JOID
- job-template:
    name: 'joid-daily-full-{stream}'

    node: {pod}

    disabled: true

    parameters:
        - joid-parameters

    builders:
        - trigger-builds:
          - project: 'joid-clean-{stream}'
            git-revision: true
            block: true
        - trigger-builds:
          - project: 'joid-destroy-vm-{stream}'
            git-revision: true
            block: true
        - trigger-builds:
          - project: 'joid-gitupdate-{stream}'
            git-revision: true
            block: true
        - trigger-builds:
          - project: 'joid-configure-{stream}'
            git-revision: true
            block: true
        - trigger-builds:
          - project: 'joid-prepare-{stream}'
            git-revision: true
            block: true
        - trigger-builds:
          - project: 'joid-deploy-{stream}'
            git-revision: true
            block: true
        - trigger-builds:
          - project: 'joid-adminrc-{stream}'
            git-revision: true
            block: true


# Job: Erase juju config, and deploy JOID
- job-template:
    name: 'joid-daily-{stream}'

    node: {pod}

    disabled: true

    parameters:
        - joid-parameters

    builders:
        - trigger-builds:
          - project: 'joid-clean-{stream}'
            git-revision: true
            block: true
        - trigger-builds:
          - project: 'joid-gitupdate-{stream}'
            git-revision: true
            block: true
        - trigger-builds:
          - project: 'joid-configure-{stream}'
            git-revision: true
            block: true
        - trigger-builds:
          - project: 'joid-deploy-{stream}'
            git-revision: true
            block: true
        - trigger-builds:
          - project: 'joid-adminrc-{stream}'
            git-revision: true
            block: true

#     triggers:
#         - 'joid-{stream}-daily-trigger'

# Job: Release MAAS nodes and juju config
- job-template:
    name: 'joid-clean-{stream}'

    disabled: true

    parameters:
        - joid-parameters

    node: {pod}

    builders:
        - shell: |
            #!/bin/bash
            set +e
            cd ~/joid/ci
            echo "------ Clean MAAS and Juju ------"
            ./clean.sh

# Destroy MAAS and Juju Bootstrap KVMs
- job-template:
    name: 'joid-destroy-vm-{stream}'

    disabled: true

    parameters:
        - joid-parameters

    node: {pod}

    builders:
        - shell: |
            #!/bin/bash
            set +e
            echo "------ VM List ------"
            virsh list
            echo "------ Destroy Bootstrap ------"
            VM=$(virsh list --name |grep bootstrap)
            if [ "z$VM" = "z" ]
                then "echo NO Bootstrap VM"
                else {
                    virsh destroy $VM
                    virsh undefine $VM
                    virsh vol-delete --pool default /var/lib/libvirt/images/$VM.img
                }
            fi
            echo "------ Destroy MAAS ------"
            VM=$(virsh list --name |grep maas)
            if [ "z$VM" = "z" ]
                then "echo NO MAAS VM"
                else {
                    virsh destroy $VM
                    virsh undefine $VM
                    virsh vol-delete --pool default /var/lib/libvirt/images/$VM-root.img
                    virsh vol-delete --pool default /var/lib/libvirt/images/$VM-seed.img
                }
            fi

# Set local parameters on the new config
- job-template:
    name: 'joid-configure-{stream}'

    disabled: true

    parameters:
        - joid-parameters

    node: {pod}

    builders:
        - shell: |
            #!/bin/bash
            set +e
            source ~/joid_local_config
            cd ~/joid/ci
            echo "------ Set MAAS password ------"
            MAASCONFIG=~/joid/ci/maas/$POD_DC/$POD_NUM/deployment.yaml
            echo $MAASCONFIG
            sed -i -- 's/user: ubuntu/user: $MAAS_USER/' $MAASCONFIG
            sed -i -- 's/password: ubuntu/user: $MAAS_PASSWORD/' $MAASCONFIG
            echo "------ Set openstack password ------"
            if [ "$JOID_MODE" == 'nonha' ]
                then SRCBUNDLE=~/joid/ci/$JOID_SDN_CONTROLLER/juju-deployer/ovs-$JOID_SDN_CONTROLLER.yaml
                else SRCBUNDLE=~/joid/ci/$JOID_SDN_CONTROLLER/juju-deployer/ovs-$JOID_SDN_CONTROLLER-$JOID_MODE.yaml
                fi
            sed -i -- 's/"admin-password": openstack/"admin-password": $OS_ADMIN_PASSWORD/' $SRCBUNDLE

# Git clone last joid repo
- job-template:
    name: 'joid-gitupdate-{stream}'

    disabled: true

    parameters:
        - joid-parameters

    node: {pod}

    builders:
        - shell: |
            #!/bin/bash
            set +e
            cd ~/
            echo "------ Remove old joid repo ------"
            rm -rf joid
            echo "------ Git clone repo ------"
            git clone http://gerrit.opnfv.org/gerrit/joid.git

# Create MAAS and juju Boostrap
- job-template:
    name: 'joid-prepare-{stream}'

    disabled: true

    parameters:
        - joid-parameters

    node: {pod}

    builders:
        - shell: |
            #!/bin/bash
            set +e
            source ~/joid_local_config
            cd ~/joid/ci
            echo "------ Create MAAS and Juju bootstrap ------"
            ./02-maasdeploy.sh $POD_NAME

# Deploy JOID
- job-template:
    name: 'joid-deploy-{stream}'

    disabled: true

    parameters:
        - joid-parameters

    node: {pod}

    builders:
        - shell: |
            #!/bin/bash
            set +e
            source ~/joid_local_config
            cd ~/joid/ci
            echo "------ Deploy  JOID------"
            echo "--- joid mode:           $JOID_MODE"
            echo "--- joid release:        $JOID_RELEASE"
            echo "--- joid sdn contorller: $JOID_SDN_CONTROLLER"
            ./deploy.sh -t $JOID_MODE -o $JOID_RELEASE -s $JOID_SDN_CONTROLLER -l $POD_NAME


########################
# parameters macros
########################
- parameter:
    name: joid-parameters
    parameters:
        - string:
            name: INSTALLER
            default: '{installer}'
            description: "Installer to use."
        - string:
            name: JOID_MODE
            default: 'ha'
            description: "High availability mode: <ha|nonha|tip>"
        - string:
            name: JOID_OS_RELEASE
            default: 'liberty'
            description: "Openstack release: <juno|liberty>"
        - string:
            name: JOID_SDN_CONTROLLER
            default: ''
            description: "Joid SDN controller: <odl|opencontrail|onos|none>"

########################
# trigger macros
########################
# No trigger macro until we get a pod to test the installer (orange-pod2 must stay
# stable for 4 to 6 weeks slots

# - trigger:
#     name: 'joid-test-daily-trigger'
#     triggers:
#         - timed: '0 3 * * *'
#
