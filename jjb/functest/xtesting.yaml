---
- xtesting-containers: &xtesting-containers
    name: 'xtesting-containers'
    repo: '{repo}'
    port: '{port}'
    container: '{container}'
    tag: '{tag}'

- xtesting-params: &xtesting-params
    name: 'xtesting-params'
    repo: 'opnfv'
    port:
    tag:
      - latest:
          from:
          build_args:
          branch: master
          slave: lf-virtual1
          dependency: 3.14
      - xena:
          from:
          build_args:
          branch: stable/xena
          slave: lf-virtual1
          dependency: 3.14
      - wallaby:
          from:
          build_args:
          branch: stable/wallaby
          slave: lf-virtual1
          dependency: 3.13
      - leguer:
          from:
          build_args:
          branch: stable/leguer
          slave: lf-virtual1
          dependency: 3.12
      - kali:
          from:
          build_args:
          branch: stable/kali
          slave: lf-virtual1
          dependency: 3.11
      - jerma:
          from:
          build_args:
          branch: stable/jerma
          slave: lf-virtual1
          dependency: 3.10

- xtesting-jobs: &xtesting-jobs
    name: 'xtesting-jobs'
    current-parameters: true

- parameter:
    name: xtesting-slave
    parameters:
      - label:
          name: slave
          default: '{slave}'

- parameter:
    name: xtesting-build_tag
    parameters:
      - random-string:
          name: build_tag

- xtesting-run-containers: &xtesting-run-containers
    name: 'xtesting-run-containers'
    <<: *xtesting-containers
    test: '{test}'
    privileged: '{privileged}'
    volumes: '{volumes}'
    env: '{env}'
    network: '{network}'

- builder:
    name: xtesting-pull-containers
    builders:
      - shell: |
          set +x
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          sudo docker pull $image

- builder:
    name: xtesting-run-containers
    builders:
      - shell: |
          set +x
          volumes=;
          if [ "{volumes}" != "None" ]; then
            for i in $(echo {volumes} | tr -d '[]' |sed "s/, / /g" ); \
              do volumes="-v $i $volumes"; done
          fi
          env=;
          if [ "{env}" != "None" ]; then
            for i in $(eval echo {env} | tr -d '[]' |sed "s/, / /g" ); \
              do env="-e $i $env"; done
          fi
          [ ! -z "$WORKSPACE" ] && sudo rm -rf $WORKSPACE/results || true
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          sudo docker run --rm \
            --privileged={privileged} \
            --network={network} \
            $volumes \
            $env \
            -e S3_ENDPOINT_URL=https://storage.googleapis.com \
            -e S3_DST_URL=s3://artifacts.opnfv.org/xtesting/$BUILD_TAG/$JOB_NAME-$BUILD_ID \
            -e HTTP_DST_URL=http://artifacts.opnfv.org/xtesting/$BUILD_TAG/$JOB_NAME-$BUILD_ID \
            -v /home/opnfv/xtesting/.boto:/root/.boto \
            -e TEST_DB_URL=http://testresults.opnfv.org/test/api/v1/results \
            -e TEST_DB_EXT_URL=http://testresults.opnfv.org/test/api/v1/results \
            -e NODE_NAME=$slave \
            -e BUILD_TAG=$BUILD_TAG \
            -v $WORKSPACE/../$JOB_NAME/results:/var/lib/xtesting/results \
            $image run_tests -t {test} -p -r

- builder:
    name: xtesting-remove-images
    builders:
      - shell: |
          set +x
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          sudo docker rmi $image || true

- job-template:
    name: 'xtesting-{repo}-{container}-{tag}-pull'
    parameters:
      - xtesting-slave:
          slave: '{slave}'
    builders:
      - xtesting-pull-containers:
          <<: *xtesting-containers

- project:
    name: 'xtesting-opnfv-xtesting-pull'
    <<: *xtesting-params
    container: 'xtesting'
    jobs:
      - 'xtesting-{repo}-{container}-{tag}-pull'

- project:
    name: 'xtesting-opnfv-xtesting-mts-pull'
    <<: *xtesting-params
    container: 'xtesting-mts'
    jobs:
      - 'xtesting-{repo}-{container}-{tag}-pull'

- job-template:
    name: 'xtesting-{repo}-{container}-{tag}-rmi'
    parameters:
      - xtesting-slave:
          slave: '{slave}'
    builders:
      - xtesting-remove-images:
          <<: *xtesting-containers

- project:
    name: 'xtesting-opnfv-xtesting-rmi'
    <<: *xtesting-params
    container: 'xtesting'
    jobs:
      - 'xtesting-{repo}-{container}-{tag}-rmi'

- project:
    name: 'xtesting-opnfv-xtesting-mts-rmi'
    <<: *xtesting-params
    container: 'xtesting-mts'
    jobs:
      - 'xtesting-{repo}-{container}-{tag}-rmi'

- job-template:
    name: 'xtesting-opnfv-xtesting-{tag}-{test}-run'
    parameters:
      - xtesting-slave:
          slave: '{slave}'
      - xtesting-build_tag:
          build_tag: ''
    builders:
      - xtesting-run-containers:
          <<: *xtesting-run-containers

- project:
    name: 'xtesting-opnfv-xtesting'
    <<: *xtesting-params
    volumes:
    env:
    container: 'xtesting'
    test:
      - first
      - second
      - third
      - fourth
      - fifth
      - sixth
      - eighth
    privileged: 'false'
    network: bridge
    exclude:
      - tag: leguer
        test: eighth
      - tag: kali
        test: eighth
      - tag: jerma
        test: eighth
    jobs:
      - 'xtesting-opnfv-xtesting-{tag}-{test}-run'

- job-template:
    name: 'xtesting-opnfv-xtesting-mts-{tag}-{test}-run'
    parameters:
      - xtesting-slave:
          slave: '{slave}'
      - xtesting-build_tag:
          build_tag: ''
    builders:
      - xtesting-run-containers:
          <<: *xtesting-run-containers

- project:
    name: 'xtesting-opnfv-xtesting-mts'
    <<: *xtesting-params
    volumes:
    env:
    container: 'xtesting-mts'
    test:
      - seventh
    privileged: 'false'
    network: bridge
    jobs:
      - 'xtesting-opnfv-xtesting-mts-{tag}-{test}-run'

- builder:
    name: xtesting-zip
    builders:
      - shell: |
          set +x
          volumes=;
          if [ "{volumes}" != "None" ]; then
            for i in $(echo {volumes} | tr -d '[]' |sed "s/, / /g" ); \
              do volumes="-v $i $volumes"; done
          fi
          env=;
          if [ "{env}" != "None" ]; then
            for i in $(eval echo {env} | tr -d '[]' |sed "s/, / /g" ); \
              do env="-e $i $env"; done
          fi
          [ ! -z "$WORKSPACE" ] && sudo rm -rf $WORKSPACE/results || true
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          sudo docker run --rm \
            $volumes \
            $env \
            -e S3_ENDPOINT_URL=https://storage.googleapis.com \
            -e S3_DST_URL=s3://artifacts.opnfv.org/xtesting \
            -e HTTP_DST_URL=http://artifacts.opnfv.org/xtesting \
            -v /home/opnfv/xtesting/.boto:/root/.boto \
            -e TEST_DB_URL=http://testresults.opnfv.org/test/api/v1/results \
            -e TEST_DB_EXT_URL=http://testresults.opnfv.org/test/api/v1/results \
            -e BUILD_TAG=$BUILD_TAG \
            -v $WORKSPACE/../$JOB_NAME/results:/var/lib/xtesting/results \
            $image zip_campaign

- job-template:
    name: 'xtesting-{tag}-zip'
    parameters:
      - xtesting-slave:
          slave: '{slave}'
      - xtesting-build_tag:
          build_tag: ''
    builders:
      - xtesting-zip:
          <<: *xtesting-containers
          volumes: '{volumes}'
          env: '{env}'

- project:
    name: 'xtesting-{tag}-zip'
    <<: *xtesting-params
    volumes:
    env:
    container: 'xtesting'
    jobs:
      - 'xtesting-{tag}-zip'

- job-template:
    name: 'xtesting-{tag}-daily'
    project-type: multijob
    triggers:
      - timed: '@daily'
    parameters:
      - xtesting-slave:
          slave: '{slave}'
      - xtesting-build_tag:
          build_tag: ''
    # PyYAML and yamllint differ here
    # see https://github.com/yaml/pyyaml/issues/234
    # yamllint disable rule:indentation
    properties:
      - build-blocker:
          blocking-jobs:
          - ^xtesting-(pi-)*{tag}-(daily|docker|review)$
    # yamllint enable rule:indentation
    builders:
      - multijob:
          name: remove former images
          projects:
            - name: 'xtesting-opnfv-xtesting-{tag}-rmi'
              <<: *xtesting-jobs
            - name: 'xtesting-opnfv-xtesting-mts-{tag}-rmi'
              <<: *xtesting-jobs
      - multijob:
          name: pull containers
          projects:
            - name: 'xtesting-opnfv-xtesting-{tag}-pull'
              <<: *xtesting-jobs
            - name: 'xtesting-opnfv-xtesting-mts-{tag}-pull'
              <<: *xtesting-jobs
      - multijob:
          name: opnfv/xtesting:{tag}
          projects:
            - name: 'xtesting-opnfv-xtesting-{tag}-first-run'
              <<: *xtesting-jobs
            - name: 'xtesting-opnfv-xtesting-{tag}-second-run'
              <<: *xtesting-jobs
            - name: 'xtesting-opnfv-xtesting-{tag}-third-run'
              <<: *xtesting-jobs
            - name: 'xtesting-opnfv-xtesting-{tag}-fourth-run'
              <<: *xtesting-jobs
            - name: 'xtesting-opnfv-xtesting-{tag}-fifth-run'
              <<: *xtesting-jobs
            - name: 'xtesting-opnfv-xtesting-{tag}-sixth-run'
              <<: *xtesting-jobs
            - name: 'xtesting-opnfv-xtesting-{tag}-eighth-run'
              <<: *xtesting-jobs
      - multijob:
          name: opnfv/xtesting-mts:{tag}
          projects:
            - name: 'xtesting-opnfv-xtesting-mts-{tag}-seventh-run'
              <<: *xtesting-jobs
      - multijob:
          name: dump all campaign data
          projects:
            - name: 'xtesting-{tag}-zip'
              <<: *xtesting-jobs

- project:
    name: 'xtesting-daily'
    <<: *xtesting-params
    jobs:
      - 'xtesting-{tag}-daily'

- view:
    name: xtesting
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: ^xtesting-[a-z0-9.]+-daily$

- xtesting-build-containers: &xtesting-build-containers
    name: 'xtesting-build-containers'
    <<: *xtesting-containers
    ref_arg: '{ref_arg}'
    path: '{path}'
    build_args: '{build_args}'
    from: '{from}'

- builder:
    name: xtesting-build-containers
    builders:
      - shell: |
          set +x
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          build_args=""
          if [ "{build_args}" != "None" ]; then
            for i in $(echo {build_args} | tr -d '[]' |sed "s/, / /g" ); \
              do build_args="--build-arg $i $build_args"; done
          fi
          if [ "{ref_arg}" != "None" ]; then
            build_args="$build_args --build-arg {ref_arg}={ref}"
          fi
          cd {path}
          if [ "{from}" != "None" ]; then
              sed -i {from} Dockerfile
          fi
          sudo docker build $build_args \
            --pull=false --no-cache --force-rm=true \
            -t $image .

- scm:
    name: xtesting-scm
    scm:
      - git:
          url: 'https://gerrit.opnfv.org/gerrit/functest-xtesting'
          refspec: '+refs/heads/*:refs/remotes/origin/* +refs/changes/*:refs/changes/*'
          branches:
            - '{ref}'

- xtesting-dep: &xtesting-dep
    name: 'xtesting-containers'
    repo: '{repo}'
    port: '{port}'
    tag: '{tag}'
    dependency: '{dependency}'

- builder:
    name: xtesting-pull-dep-images
    builders:
      - shell: |
          set +x
          if [ "_" = "_" ]; then
            image=alpine:{dependency}
          elif [ "" = "None" ]; then
            image=_/alpine:{dependency}
          else
            image=_:/alpine:{dependency}
          fi
          sudo docker pull $image || true

- builder:
    name: xtesting-remove-dep-images
    builders:
      - shell: |
          set +x
          if [ "_" = "_" ]; then
            image=alpine:{dependency}
          elif [ "" = "None" ]; then
            image=_/alpine:{dependency}
          else
            image=_:/alpine:{dependency}
          fi
          sudo docker rmi $image || true

- job-template:
    name: 'xtesting-{repo}-{tag}-dep-pull'
    parameters:
      - xtesting-slave:
          slave: '{slave}'
    builders:
      - xtesting-pull-dep-images:
          <<: *xtesting-dep

- project:
    name: 'xtesting-{repo}-{tag}-dep-pull'
    <<: *xtesting-params
    jobs:
      - 'xtesting-{repo}-{tag}-dep-pull'

- job-template:
    name: 'xtesting-{repo}-{tag}-dep-rmi'
    parameters:
      - xtesting-slave:
          slave: '{slave}'
    builders:
      - xtesting-remove-dep-images:
          <<: *xtesting-dep

- project:
    name: 'xtesting-{repo}-{tag}-dep-rmi'
    <<: *xtesting-params
    jobs:
      - 'xtesting-{repo}-{tag}-dep-rmi'

- builder:
    name: xtesting-tox
    builders:
      - shell: |
          set +x
          sudo apt-get update && \
          sudo DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y
          sudo DEBIAN_FRONTEND=noninteractive \
          apt-get install software-properties-common gpg -y
          sudo add-apt-repository -y ppa:deadsnakes/ppa
          sudo apt-get update && sudo DEBIAN_FRONTEND=noninteractive \
          apt-get install \
            python3.9 python3.9-dev python3.9-distutils \
            python3.8 python3.8-dev python3.8-distutils \
            python3.7 python3.7-dev python3.6 python3.6-dev \
            python python-dev python3-pip enchant -y
          sudo pip3 install tox tox-pip-version

          tox

- job-template:
    name: 'xtesting-{tag}-tox'
    scm:
      - xtesting-scm:
          ref: $GERRIT_REFSPEC
    triggers:
      - xtesting-patchset-created:
          branch: '{branch}'
    parameters:
      - xtesting-slave:
          slave: '{slave}'
    builders:
      - xtesting-tox:

- project:
    name: xtesting-tox
    <<: *xtesting-params
    jobs:
      - 'xtesting-{tag}-tox'

- job-template:
    name: 'xtesting-{repo}-{container}-{tag}-gate'
    parameters:
      - xtesting-slave:
          slave: '{slave}'
    scm:
      - xtesting-scm:
          ref: $GERRIT_REFSPEC
    builders:
      - xtesting-build-containers:
          <<: *xtesting-build-containers
          ref: $GERRIT_REFSPEC
          build_args: '{build_args}'

- project:
    name: xtesting-opnfv-xtesting-{tag}-gate
    <<: *xtesting-params
    container: xtesting
    ref_arg: BRANCH
    path: docker/core
    jobs:
      - 'xtesting-{repo}-{container}-{tag}-gate'

- project:
    name: xtesting-opnfv-xtesting-mts-{tag}-gate
    <<: *xtesting-params
    container: xtesting-mts
    ref_arg: BRANCH
    path: docker/mts
    jobs:
      - 'xtesting-{repo}-{container}-{tag}-gate'

- trigger:
    name: xtesting-patchset-created
    triggers:
      - gerrit:
          trigger-on:
            - patchset-created-event
            - comment-added-contains-event:
                comment-contains-value: 'recheck'
            - comment-added-contains-event:
                comment-contains-value: 'reverify'
          projects:
            - project-compare-type: 'ANT'
              project-pattern: 'functest-xtesting'
              branches:
                - branch-compare-type: 'ANT'
                  branch-pattern: '**/{branch}'

- job-template:
    name: 'xtesting-{tag}-review'
    project-type: multijob
    triggers:
      - xtesting-patchset-created:
          branch: '{branch}'
    parameters:
      - xtesting-slave:
          slave: '{slave}'
      - xtesting-build_tag:
          build_tag: ''
    # PyYAML and yamllint differ here
    # see https://github.com/yaml/pyyaml/issues/234
    # yamllint disable rule:indentation
    properties:
      - build-blocker:
          blocking-jobs:
          - ^xtesting-(pi-)*{tag}-(daily|docker|review)$
    # yamllint enable rule:indentation
    builders:
      - multijob:
          name: remove former images
          projects:
            - name: 'xtesting-opnfv-xtesting-{tag}-rmi'
              <<: *xtesting-jobs
            - name: 'xtesting-opnfv-xtesting-mts-{tag}-rmi'
              <<: *xtesting-jobs
      - multijob:
          name: remove dependency
          projects:
            - name: 'xtesting-{repo}-{tag}-dep-rmi'
              <<: *xtesting-jobs
      - multijob:
          name: pull dependency
          projects:
            - name: 'xtesting-{repo}-{tag}-dep-pull'
              <<: *xtesting-jobs
      - multijob:
          name: opnfv/xtesting
          projects:
            - name: 'xtesting-opnfv-xtesting-{tag}-gate'
              <<: *xtesting-jobs
      - multijob:
          name: opnfv/xtesting-mts
          projects:
            - name: 'xtesting-opnfv-xtesting-mts-{tag}-gate'
              <<: *xtesting-jobs
      - multijob:
          name: opnfv/xtesting:{tag}
          projects:
            - name: 'xtesting-opnfv-xtesting-{tag}-first-run'
              <<: *xtesting-jobs
            - name: 'xtesting-opnfv-xtesting-{tag}-second-run'
              <<: *xtesting-jobs
            - name: 'xtesting-opnfv-xtesting-{tag}-third-run'
              <<: *xtesting-jobs
            - name: 'xtesting-opnfv-xtesting-{tag}-fourth-run'
              <<: *xtesting-jobs
            - name: 'xtesting-opnfv-xtesting-{tag}-fifth-run'
              <<: *xtesting-jobs
            - name: 'xtesting-opnfv-xtesting-{tag}-sixth-run'
              <<: *xtesting-jobs
            - name: 'xtesting-opnfv-xtesting-{tag}-eighth-run'
              <<: *xtesting-jobs
      - multijob:
          name: opnfv/xtesting-mts:{tag}
          projects:
            - name: 'xtesting-opnfv-xtesting-mts-{tag}-seventh-run'
              <<: *xtesting-jobs

- project:
    name: 'xtesting-review'
    <<: *xtesting-params
    jobs:
      - 'xtesting-{tag}-review'

- view:
    name: xtesting-review
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: ^xtesting-[a-z0-9.]+-review$

- view:
    name: xtesting-tox
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: ^xtesting-[a-z0-9.]+-tox$

- builder:
    name: xtesting-push-containers
    builders:
      - shell: |
          set +x
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          sudo docker push $image

- trigger:
    name: xtesting-commit
    triggers:
      - pollscm:
          cron: "*/30 * * * *"

- job-template:
    name: 'xtesting-{repo}-{container}-{tag}-build'
    parameters:
      - xtesting-slave:
          slave: '{slave}'
    scm:
      - xtesting-scm:
          ref: '{branch}'
    builders:
      - xtesting-build-containers:
          <<: *xtesting-build-containers
          ref: '{branch}'
          build_args: '{build_args}'
      - xtesting-push-containers:
          <<: *xtesting-build-containers
          ref: '{branch}'

- project:
    name: xtesting-opnfv-xtesting-{tag}-build
    <<: *xtesting-params
    container: xtesting
    ref_arg: BRANCH
    path: docker/core
    jobs:
      - 'xtesting-{repo}-{container}-{tag}-build'

- project:
    name: xtesting-opnfv-xtesting-mts-{tag}-build
    <<: *xtesting-params
    container: xtesting-mts
    ref_arg: BRANCH
    path: docker/mts
    jobs:
      - 'xtesting-{repo}-{container}-{tag}-build'

- job-template:
    name: 'xtesting-{tag}-docker'
    project-type: multijob
    triggers:
      - xtesting-commit
    scm:
      - xtesting-scm:
          ref: '{branch}'
    parameters:
      - xtesting-slave:
          slave: '{slave}'
    # PyYAML and yamllint differ here
    # see https://github.com/yaml/pyyaml/issues/234
    # yamllint disable rule:indentation
    properties:
      - build-blocker:
          blocking-jobs:
          - ^xtesting-(pi-)*{tag}-(daily|docker|review)$
    # yamllint enable rule:indentation
    builders:
      - multijob:
          name: remove dependency
          projects:
            - name: 'xtesting-{repo}-{tag}-dep-rmi'
              <<: *xtesting-jobs
      - multijob:
          name: pull dependency
          projects:
            - name: 'xtesting-{repo}-{tag}-dep-pull'
              <<: *xtesting-jobs
      - multijob:
          name: opnfv/xtesting
          projects:
            - name: 'xtesting-opnfv-xtesting-{tag}-build'
              <<: *xtesting-jobs
      - multijob:
          name: opnfv/xtesting-mts
          projects:
            - name: 'xtesting-opnfv-xtesting-mts-{tag}-build'
              <<: *xtesting-jobs

- builder:
    name: xtesting-trivy
    builders:
      - shell: |
          sudo apt-get update && sudo DEBIAN_FRONTEND=noninteractive \
          apt-get install curl -y

          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b .
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          ./trivy --exit-code 1 $image

- job-template:
    name: 'xtesting-{repo}-{container}-{tag}-trivy'
    triggers:
      - timed: '@daily'
    parameters:
      - xtesting-slave:
          slave: '{slave}'
    builders:
      - xtesting-trivy:
          <<: *xtesting-containers

- project:
    name: 'xtesting-opnfv-xtesting-trivy'
    <<: *xtesting-params
    container: 'xtesting'
    jobs:
      - 'xtesting-{repo}-{container}-{tag}-trivy'

- project:
    name: 'xtesting-opnfv-xtesting-mts-trivy'
    <<: *xtesting-params
    container: 'xtesting-mts'
    jobs:
      - 'xtesting-{repo}-{container}-{tag}-trivy'

- project:
    name: 'xtesting'
    <<: *xtesting-params
    jobs:
      - 'xtesting-{tag}-docker'

- view:
    name: xtesting-docker
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: ^xtesting-[a-z0-9.]+-docker$

- view:
    name: xtesting-trivy
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: (?!xtesting-pi)^xtesting-[a-z-0-9.]+-trivy$
