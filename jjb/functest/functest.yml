###################################
# job configuration for functest
###################################
- project:
    name: functest

    installer:
        - fuel:
            node: 'opnfv-jump-2'
            installer_type: 'fuel'
            installer_ip: '10.20.0.2'
        - foreman:
            node: 'opnfv-jump-2'
            installer_type: 'foreman'
            installer_ip: '172.30.10.73'
        - apex:
            node: 'opnfv-jump-1'
            installer_type: 'apex'
            installer_ip: '192.168.X.X'
    pod:
        - orange-build:
            node: 'orange-build'
            installer_type: 'foreman'
            installer_ip: '172.30.10.73'

    jobs:
        - 'set-functest-env-{pod}'
        - 'functest-{pod}'
        - 'clean-functest-env-{pod}'
        - 'set-functest-env-{installer}-{stream}'
        - 'functest-{installer}-{stream}'
        - 'clean-functest-env-{installer}-{stream}'
        - 'functest-openstack-bench-test-{pod}'
        - 'functest-openstack-tempest-smoke-test-{pod}'
        - 'functest-odl-test-{pod}'
        - 'functest-vims-{installer}-{stream}'
        - 'functest-vping-test-{pod}'
        - 'functest-daily-{stream}'
        - 'functest-merge-{stream}'
        - 'functest-verify-{stream}'

    # stream:    branch with - in place of / (eg. stable-arno)
    # branch:    branch (eg. stable/arno)
    stream:
        - master:
            branch: 'master'
            gs-pathname: ''
        - stable-arno:
            branch: 'stable/arno'
            gs-pathname: '/arno'

    project: 'functest'
    somevar: 'foo'
################################
# job template
################################
- job-template:
    name: set-functest-env-{pod}

    node: '{pod}'

    logrotate:
        daysToKeep: 30
        numToKeep: 10
        artifactDaysToKeep: -1
        artifactNumToKeep: -1

    builders:
        - 'set-functest-env'

- job-template:
    name: clean-functest-env-{pod}

    node: '{pod}'

    logrotate:
        daysToKeep: 30
        numToKeep: 10
        artifactDaysToKeep: -1
        artifactNumToKeep: -1

    builders:
        - 'functest-cleanup'

- job-template:
    name: set-functest-env-{installer}-{stream}

    node: '{node}'

    logrotate:
        daysToKeep: 30
        numToKeep: 10
        artifactDaysToKeep: -1
        artifactNumToKeep: -1

    builders:
        - 'set-functest-env'

- job-template:
    name: clean-functest-env-{installer}-{stream}

    node: '{node}'

    logrotate:
        daysToKeep: 30
        numToKeep: 10
        artifactDaysToKeep: -1
        artifactNumToKeep: -1

    builders:
        - 'functest-cleanup'

- job-template:
    name: functest-openstack-bench-test-{pod}

    node: '{pod}'

    logrotate:
        daysToKeep: 30
        numToKeep: 10
        artifactDaysToKeep: -1
        artifactNumToKeep: -1

    builders:
        - 'functest-rally-bench'

- job-template:
    name: functest-openstack-tempest-smoke-test-{pod}

    node: '{pod}'

    logrotate:
        daysToKeep: 30
        numToKeep: 10
        artifactDaysToKeep: -1
        artifactNumToKeep: -1

    builders:
        - 'functest-tempest-smoke'

- job-template:
    name: functest-odl-test-{pod}

    node: '{pod}'

    logrotate:
        daysToKeep: 30
        numToKeep: 10
        artifactDaysToKeep: -1
        artifactNumToKeep: -1

    builders:
        - shell: |
        - 'functest-odl'

- job-template:
    name: functest-vping-test-{pod}

    node: '{pod}'

    logrotate:
        daysToKeep: 30
        numToKeep: 10
        artifactDaysToKeep: -1
        artifactNumToKeep: -1

    builders:
        - 'functest-vping'

- job-template:
    name: functest-{pod}

    node: '{pod}'

    parameters:
        - project-parameter:
            project: '{project}'
        - functest-parameter
        - string:
            name: INSTALLER_TYPE
            default: '{installer_type}'
            description: "Installer name that is used for deployment."
        - string:
            name: INSTALLER_IP
            default: '{installer_ip}'
            description: "Installer IP."
        - '{pod}'

    scm:
        - git-scm:
            credentials-id: '{ssh-credentials}'
            refspec: ''
            branch: master

    logrotate:
        daysToKeep: 30
        numToKeep: 10
        artifactDaysToKeep: -1
        artifactNumToKeep: -1

    builders:
        - 'functest-cleanup'
        - 'set-functest-env'
        - 'functest-all'
        - 'functest-store-results'

- job-template:
    name: functest-{installer}-{stream}

    node: '{node}'

    parameters:
        - project-parameter:
            project: '{project}'
        - functest-parameter
        - string:
            name: INSTALLER_TYPE
            default: '{installer_type}'
            description: "Installer name that is used for deployment."
        - string:
            name: INSTALLER_IP
            default: '{installer_ip}'
            description: "Installer IP."
        - string:
            name: GIT_BASE
            default: ssh://gerrit.opnfv.org:29418/$PROJECT
            description: "Override GIT_BASE"

    scm:
        - git-scm:
            credentials-id: '{ssh-credentials}'
            refspec: ''
            branch: master

    logrotate:
        daysToKeep: 30
        numToKeep: 10
        artifactDaysToKeep: -1
        artifactNumToKeep: -1

    builders:
        - 'functest-cleanup'
        - 'set-functest-env'
        - 'functest-all'
        - 'functest-store-results'

- job-template:
    name: functest-vims-{installer}-{stream}

    node: '{node}'

    parameters:
        - project-parameter:
            project: '{project}'
        - functest-parameter
        - string:
            name: INSTALLER_TYPE
            default: '{installer_type}'
            description: "Installer name that is used for deployment."
        - string:
            name: INSTALLER_IP
            default: '{installer_ip}'
            description: "Installer IP."
        - string:
            name: GIT_BASE
            default: ssh://gerrit.opnfv.org:29418/$PROJECT
            description: "Override GIT_BASE"

    scm:
        - git-scm:
            credentials-id: '{ssh-credentials}'
            refspec: ''
            branch: master

    logrotate:
        daysToKeep: 30
        numToKeep: 10
        artifactDaysToKeep: -1
        artifactNumToKeep: -1

    builders:
        - 'functest-vims'

- job-template:
    name: 'functest-daily-{stream}'

    # Job template for daily builders
    #
    # Required Variables:
    #     stream:    branch with - in place of / (eg. stable)
    #     branch:    branch (eg. stable)

    varsetabove: '{somevar}'

    parameters:
        - project-parameter:
            project: '{project}'
        - functest-parameter:
            gs-pathname: '{gs-pathname}'

    scm:
        - git-scm:
            credentials-id: '{ssh-credentials}'
            refspec: ''
            branch: '{stream}'

    triggers:
        - 'functest-{stream}'

    prebuilders:
        - test-macro

    builders:
        - shell:
            !include-raw ../opnfvdocs/docu-build.sh

    postbuilders:
        - test-macro

- job-template:
    name: 'functest-verify-{stream}'

    logrotate:
        daysToKeep: 30
        numToKeep: 10
        artifactDaysToKeep: -1
        artifactNumToKeep: -1

    parameters:
        - project-parameter:
            project: '{project}'
        - gerrit-parameter:
            branch: '{branch}'
    scm:
        - gerrit-trigger-scm:
            credentials-id: '{ssh-credentials}'
            refspec: '$GERRIT_REFSPEC'
            choosing-strategy: 'gerrit'

    triggers:
        - gerrit:
            trigger-on:
                - patchset-created-event:
                    exclude-drafts: 'false'
                    exclude-trivial-rebase: 'false'
                    exclude-no-code-change: 'false'
                - draft-published-event
                - comment-added-contains-event:
                    comment-contains-value: 'recheck'
                - comment-added-contains-event:
                    comment-contains-value: 'reverify'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: 'functest'
                branches:
                  - branch-compare-type: 'ANT'
                    branch-pattern: '**/{branch}'

    builders:
        - shell:
            !include-raw ../opnfvdocs/docu-build.sh

- job-template:
    name: 'functest-merge-{stream}'

    # builder-merge job to run JJB update
    #
    # This job's purpose is to update all the JJB

    parameters:
        - project-parameter:
            project: '{project}'
        - gerrit-parameter:
            branch: '{branch}'

    scm:
        - gerrit-trigger-scm:
            credentials-id: '{ssh-credentials}'
            refspec: ''
            choosing-strategy: 'default'

    triggers:
        - gerrit:
            trigger-on:
                - change-merged-event
                - comment-added-contains-event:
                    comment-contains-value: 'remerge'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: 'functest'
                branches:
                    - branch-compare-type: 'ANT'
                      branch-pattern: '**/{branch}'

    builders:
        - shell:
            !include-raw ../opnfvdocs/docu-build.sh

########################
# parameter macros
########################
- parameter:
    name: functest-parameter
    parameters:
        - string:
            name: GS_PATHNAME
            default: '{gs-pathname}'
            description: "Version directory where the opnfv documents will be stored in gs repository"
        - string:
            name: FUNCTEST_REPO_DIR
            default: "/home/opnfv/repos/functest"
            description: "Directory where the Functest repository is cloned"

- parameter:
    name: orange-build
    parameters:
        - string:
            name: GIT_BASE
            default: https://gerrit.opnfv.org/gerrit/$PROJECT
            description: "Override GIT_BASE"

- parameter:
    name: opnfv-jump-1
    parameters:
        - string:
            name: GIT_BASE
            default: ssh://gerrit.opnfv.org:29418/$PROJECT
            description: "Override GIT_BASE"

- parameter:
    name: opnfv-jump-2
    parameters:
        - string:
            name: GIT_BASE
            default: ssh://gerrit.opnfv.org:29418/$PROJECT
            description: "Override GIT_BASE"
########################
# trigger macros
########################
- trigger:
    name: 'functest-master'
    triggers:
        - pollscm: "H 9 * * *"

- trigger:
    name: 'functest-stable-arno'
    triggers:
        - pollscm: "H 21 * * *"

########################
# builder macros
########################
# macros
- builder:
    name: functest-all
    builders:
        - shell: |
            #!/bin/bash
            set +e

            echo "Functest: running all the tests"
            cmd="${FUNCTEST_REPO_DIR}/docker/run_tests.sh"
            container_id=$(docker ps -a | grep opnfv/functest | awk '{print $1}' | head -1)
            docker exec $container_id $cmd

- builder:
    name: set-functest-env
    builders:
        - shell: |
            #!/bin/bash
            set +e
            if [[ ${INSTALLER_TYPE} == 'apex' ]]; then
                INSTALLER_IP=$(cat instack /var/lib/libvirt/dnsmasq/default.leases \
                    |sed 's/.*192/192/g' | sed 's/\ in.*//g')
            fi
            echo "Functest: Start Docker and prepare environment"
            envs="INSTALLER_TYPE=${INSTALLER_TYPE} -e INSTALLER_IP=${INSTALLER_IP}"
            docker pull opnfv/functest:latest_stable
            echo "Functest: Running docker run command: docker run -i -e $envs opnfv/functest /bin/bash &"
            docker run -i -e $envs opnfv/functest /bin/bash &
            docker ps -a
            sleep 5
            container_id=$(docker ps -a | grep opnfv/functest | awk '{print $1}' | head -1)
            echo "Container ID=${container_id}"
            if [ -z ${container_id} ]; then
                echo "Cannot find opnfv/functest container ID ${container_id}. Please check if it is existing."
                docker ps -a
                exit 1
            fi
            echo "Starting the container: docker start ${container_id}"
            docker start ${container_id}
            sleep 5
            docker ps
            if [ $(docker ps | grep opnfv/functest | wc -l) == 0 ]; then
                echo "The container opnfv/functest with ID=${container_id} has not been properly started. Exiting..."
                exit 1
            fi
            cmd="${FUNCTEST_REPO_DIR}/docker/prepare_env.sh"
            echo "Executing command inside the docker: ${cmd}"
            docker exec ${container_id} ${cmd}

- builder:
    name: functest-vping
    builders:
        - shell: |
            #!/bin/bash
            set +e

            echo "Functest: run vPing"
            cmd="${FUNCTEST_REPO_DIR}/docker/run_tests.sh --test vping"
            container_id=$(docker ps -a | grep opnfv/functest | awk '{print $1}' | head -1)
            docker exec $container_id $cmd

- builder:
    name: functest-odl
    builders:
        - shell: |
            #!/bin/bash
            set +e

            echo "Functest: run ODL suite"
            cmd="${FUNCTEST_REPO_DIR}/docker/run_tests.sh --test odl"
            container_id=$(docker ps -a | grep opnfv/functest | awk '{print $1}' | head -1)
            docker exec $container_id $cmd

- builder:
    name: functest-tempest-smoke
    builders:
        - shell: |
            #!/bin/bash
            set +e

            # tempest
            echo "Functest: run Tempest suite"
            cmd="${FUNCTEST_REPO_DIR}/docker/run_tests.sh --test tempest"
            container_id=$(docker ps -a | grep opnfv/functest | awk '{print $1}' | head -1)
            docker exec $container_id $cmd

- builder:
    name: functest-rally-bench
    builders:
        - shell: |
            #!/bin/bash
            set +e

            echo "Functest: run Functest Rally Bench suites"
            cmd="${FUNCTEST_REPO_DIR}/docker/run_tests.sh --test rally"
            container_id=$(docker ps -a | grep opnfv/functest | awk '{print $1}' | head -1)
            docker exec $container_id $cmd

- builder:
    name: functest-vims
    builders:
        - shell: |
            #!/bin/bash
            set +e

            echo "Functest: run Functest vIMS test"
            cmd="${FUNCTEST_REPO_DIR}/docker/run_tests.sh --test vims"
            container_id=$(docker ps -a | grep opnfv/functest | awk '{print $1}' | head -1)
            docker exec $container_id $cmd

- builder:
    name: functest-store-results
    builders:
        - shell:
            !include-raw res-build.sh

- builder:
    name: functest-cleanup
    builders:
        - shell: |
            #!/bin/bash

            echo "Cleaning up docker containers/images..."

            # Remove previous running containers if exist
            if [[ ! -z $(docker ps -a | grep opnfv/functest) ]]; then
                echo "Removing existing opnfv/functest containers..."
                docker ps | grep opnfv/functest | awk '{print $1}' | xargs docker stop
                docker ps -a | grep opnfv/functest | awk '{print $1}' | xargs docker rm
            fi

            # Remove existing images if exist
            if [[ ! -z $(docker images | grep opnfv/functest) ]]; then
                echo "Docker images to remove:"
                docker images | head -1 && docker images | grep opnfv/functest
                image_tags=($(docker images | grep opnfv/functest | awk '{print $2}'))
                for tag in "${image_tags[@]}"; do
                    echo "Removing docker image opnfv/functest:$tag..."
                    docker rmi opnfv/functest:$tag
                done
            fi
