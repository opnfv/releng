---
- functest-kubernetes-pi-containers: &functest-kubernetes-pi-containers
    name: 'functest-kubernetes-pi-containers'
    repo: '{repo}'
    port: '{port}'
    container: '{container}'
    tag: '{tag}'

- functest-kubernetes-pi-params: &functest-kubernetes-pi-params
    name: 'functest-kubernetes-pi-params'
    repo: 'ollivier'
    port:
    tag:
      - latest:
          slave: lf-virtual1-9
      - v1.25:
          slave: lf-virtual1-8
      - v1.24:
          slave: lf-virtual1-7
      - v1.23:
          slave: lf-virtual1-6
      - v1.22:
          slave: lf-virtual1-5
      - arm-latest:
          slave: lf-virtual1-9
      - arm-v1.25:
          slave: lf-virtual1-8
      - arm-v1.24:
          slave: lf-virtual1-7
      - arm-v1.23:
          slave: lf-virtual1-6
      - arm-v1.22:
          slave: lf-virtual1-5
      - arm64-latest:
          slave: lf-virtual1-9
      - arm64-v1.25:
          slave: lf-virtual1-8
      - arm64-v1.24:
          slave: lf-virtual1-7
      - arm64-v1.23:
          slave: lf-virtual1-6
      - arm64-v1.22:
          slave: lf-virtual1-5

- functest-kubernetes-pi-jobs: &functest-kubernetes-pi-jobs
    name: 'functest-kubernetes-pi-jobs'
    current-parameters: true

- parameter:
    name: functest-kubernetes-pi-slave
    parameters:
      - label:
          name: slave
          default: '{slave}'

- parameter:
    name: functest-kubernetes-pi-build_tag
    parameters:
      - random-string:
          name: build_tag

- parameter:
    name: functest-kubernetes-pi-DEPLOY_SCENARIO
    parameters:
      - string:
          name: DEPLOY_SCENARIO
          default: k8-nosdn-nofeature-noha

- functest-kubernetes-pi-run-containers: &functest-kubernetes-pi-run-containers
    name: 'functest-kubernetes-pi-run-containers'
    <<: *functest-kubernetes-pi-containers
    test: '{test}'
    privileged: '{privileged}'
    volumes: '{volumes}'
    env: '{env}'
    network: '{network}'
    uid: '{uid}'
    gid: '{gid}'
    published_ports: '{published_ports}'

- builder:
    name: functest-kubernetes-pi-pull-containers
    builders:
      - shell: |
          set +x
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          docker pull $image

- builder:
    name: functest-kubernetes-pi-run-containers
    builders:
      - shell: |
          set +x
          volumes=;
          if [ "{volumes}" != "None" ]; then
            for i in $(echo {volumes} | tr -d '[]' |sed "s/, / /g" ); \
              do volumes="-v $i $volumes"; done
          fi
          env=;
          if [ "{env}" != "None" ]; then
            for i in $(eval echo {env} | tr -d '[]' |sed "s/, / /g" ); \
              do env="-e $i $env"; done
          fi
          published_ports=;
          if [ "{published_ports}" != "None" ]; then
            for i in $(echo {published_ports} | tr -d '[]' |sed "s/, / /g" ); \
              do published_ports="-p $i $published_ports"; done
          fi
          [ ! -z "$WORKSPACE" ] && rm -rf $WORKSPACE/results || true
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          mkdir -p $WORKSPACE/results
          chown {uid}:{gid} $WORKSPACE/results
          docker run --rm \
            --privileged={privileged} \
            --network={network} \
            $volumes \
            $env \
            $published_ports \
            -e S3_ENDPOINT_URL=https://storage.googleapis.com \
            -e S3_DST_URL=s3://artifacts.opnfv.org/functest-kubernetes/$BUILD_TAG/$JOB_NAME-$BUILD_ID \
            -e HTTP_DST_URL=http://artifacts.opnfv.org/functest-kubernetes/$BUILD_TAG/$JOB_NAME-$BUILD_ID \
            -v /home/opnfv/functest-kubernetes/.boto:/etc/boto.cfg \
            -e TEST_DB_URL=http://testresults.opnfv.org/test/api/v1/results \
            -e TEST_DB_EXT_URL=http://testresults.opnfv.org/test/api/v1/results \
            -e NODE_NAME=$slave \
            -e BUILD_TAG=$BUILD_TAG \
            -v $WORKSPACE/../$JOB_NAME/results:/var/lib/xtesting/results \
            $image run_tests -t {test} -p -r

- builder:
    name: functest-kubernetes-pi-remove-images
    builders:
      - shell: |
          set +x
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          docker rmi $image || true

- job-template:
    name: 'functest-kubernetes-pi-{repo}-{container}-{tag}-pull'
    parameters:
      - functest-kubernetes-pi-slave:
          slave: '{slave}'
    builders:
      - functest-kubernetes-pi-pull-containers:
          <<: *functest-kubernetes-pi-containers

- project:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-healthcheck-pull'
    <<: *functest-kubernetes-pi-params
    container: 'functest-kubernetes-healthcheck'
    jobs:
      - 'functest-kubernetes-pi-{repo}-{container}-{tag}-pull'

- project:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-pull'
    <<: *functest-kubernetes-pi-params
    container: 'functest-kubernetes-smoke'
    jobs:
      - 'functest-kubernetes-pi-{repo}-{container}-{tag}-pull'

- project:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-security-pull'
    <<: *functest-kubernetes-pi-params
    container: 'functest-kubernetes-security'
    jobs:
      - 'functest-kubernetes-pi-{repo}-{container}-{tag}-pull'

- project:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-benchmarking-pull'
    <<: *functest-kubernetes-pi-params
    container: 'functest-kubernetes-benchmarking'
    jobs:
      - 'functest-kubernetes-pi-{repo}-{container}-{tag}-pull'

- project:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-cnf-pull'
    <<: *functest-kubernetes-pi-params
    container: 'functest-kubernetes-cnf'
    jobs:
      - 'functest-kubernetes-pi-{repo}-{container}-{tag}-pull'

- job-template:
    name: 'functest-kubernetes-pi-{repo}-{container}-{tag}-rmi'
    parameters:
      - functest-kubernetes-pi-slave:
          slave: '{slave}'
    builders:
      - functest-kubernetes-pi-remove-images:
          <<: *functest-kubernetes-pi-containers

- project:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-healthcheck-rmi'
    <<: *functest-kubernetes-pi-params
    container: 'functest-kubernetes-healthcheck'
    jobs:
      - 'functest-kubernetes-pi-{repo}-{container}-{tag}-rmi'

- project:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-rmi'
    <<: *functest-kubernetes-pi-params
    container: 'functest-kubernetes-smoke'
    jobs:
      - 'functest-kubernetes-pi-{repo}-{container}-{tag}-rmi'

- project:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-security-rmi'
    <<: *functest-kubernetes-pi-params
    container: 'functest-kubernetes-security'
    jobs:
      - 'functest-kubernetes-pi-{repo}-{container}-{tag}-rmi'

- project:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-benchmarking-rmi'
    <<: *functest-kubernetes-pi-params
    container: 'functest-kubernetes-benchmarking'
    jobs:
      - 'functest-kubernetes-pi-{repo}-{container}-{tag}-rmi'

- project:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-cnf-rmi'
    <<: *functest-kubernetes-pi-params
    container: 'functest-kubernetes-cnf'
    jobs:
      - 'functest-kubernetes-pi-{repo}-{container}-{tag}-rmi'

- job-template:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-healthcheck-{tag}-{test}-run'
    parameters:
      - functest-kubernetes-pi-slave:
          slave: '{slave}'
      - functest-kubernetes-pi-build_tag:
          build_tag: ''
      - functest-kubernetes-pi-DEPLOY_SCENARIO:
          DEPLOY_SCENARIO: k8-nosdn-nofeature-noha
    builders:
      - functest-kubernetes-pi-run-containers:
          <<: *functest-kubernetes-pi-run-containers

- project:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-healthcheck'
    <<: *functest-kubernetes-pi-params
    volumes:
      - /home/opnfv/functest-kubernetes/config.{tag}:/home/xtesting/.kubeconfig
    env:
      - DEPLOY_SCENARIO=$DEPLOY_SCENARIO
    published_ports:
    container: 'functest-kubernetes-healthcheck'
    test:
      - k8s_quick
      - k8s_smoke
    privileged: 'false'
    network: bridge
    uid: 1000
    gid: 1000
    jobs:
      - 'functest-kubernetes-pi-ollivier-functest-kubernetes-healthcheck-{tag}-{test}-run'

- job-template:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-{test}-run'
    parameters:
      - functest-kubernetes-pi-slave:
          slave: '{slave}'
      - functest-kubernetes-pi-build_tag:
          build_tag: ''
      - functest-kubernetes-pi-DEPLOY_SCENARIO:
          DEPLOY_SCENARIO: k8-nosdn-nofeature-noha
    builders:
      - functest-kubernetes-pi-run-containers:
          <<: *functest-kubernetes-pi-run-containers

- project:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke'
    <<: *functest-kubernetes-pi-params
    volumes:
      - /home/opnfv/functest-kubernetes/config.{tag}:/home/xtesting/.kubeconfig
    env:
      - DEPLOY_SCENARIO=$DEPLOY_SCENARIO
    published_ports:
    container: 'functest-kubernetes-smoke'
    test:
      - xrally_kubernetes
      - k8s_conformance
      - k8s_conformance_serial
      - sig_api_machinery
      - sig_api_machinery_serial
      - sig_apps
      - sig_apps_serial
      - sig_auth
      - sig_cluster_lifecycle
      - sig_instrumentation
      - sig_network
      - sig_node
      - sig_scheduling_serial
      - sig_storage
      - sig_storage_serial
    privileged: 'false'
    network: bridge
    uid: 1000
    gid: 1000
    jobs:
      - 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-{test}-run'

- job-template:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-security-{tag}-{test}-run'
    parameters:
      - functest-kubernetes-pi-slave:
          slave: '{slave}'
      - functest-kubernetes-pi-build_tag:
          build_tag: ''
      - functest-kubernetes-pi-DEPLOY_SCENARIO:
          DEPLOY_SCENARIO: k8-nosdn-nofeature-noha
    builders:
      - functest-kubernetes-pi-run-containers:
          <<: *functest-kubernetes-pi-run-containers

- project:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-security'
    <<: *functest-kubernetes-pi-params
    volumes:
      - /home/opnfv/functest-kubernetes/config.{tag}:/home/xtesting/.kubeconfig
    env:
      - DEPLOY_SCENARIO=$DEPLOY_SCENARIO
    published_ports:
    container: 'functest-kubernetes-security'
    test:
      - kube_hunter
      - kube_bench_master
      - kube_bench_node
    privileged: 'false'
    network: bridge
    uid: 1000
    gid: 1000
    jobs:
      - 'functest-kubernetes-pi-ollivier-functest-kubernetes-security-{tag}-{test}-run'

- job-template:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-benchmarking-{tag}-{test}-run'
    parameters:
      - functest-kubernetes-pi-slave:
          slave: '{slave}'
      - functest-kubernetes-pi-build_tag:
          build_tag: ''
      - functest-kubernetes-pi-DEPLOY_SCENARIO:
          DEPLOY_SCENARIO: k8-nosdn-nofeature-noha
    builders:
      - functest-kubernetes-pi-run-containers:
          <<: *functest-kubernetes-pi-run-containers

- project:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-benchmarking'
    <<: *functest-kubernetes-pi-params
    volumes:
      - /home/opnfv/functest-kubernetes/config.{tag}:/home/xtesting/.kubeconfig
    env:
      - DEPLOY_SCENARIO=$DEPLOY_SCENARIO
    published_ports:
    container: 'functest-kubernetes-benchmarking'
    test:
      - xrally_kubernetes_full
      - netperf
    privileged: 'false'
    network: bridge
    uid: 1000
    gid: 1000
    jobs:
      - 'functest-kubernetes-pi-ollivier-functest-kubernetes-benchmarking-{tag}-{test}-run'

- job-template:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-cnf-{tag}-{test}-run'
    parameters:
      - functest-kubernetes-pi-slave:
          slave: '{slave}'
      - functest-kubernetes-pi-build_tag:
          build_tag: ''
      - functest-kubernetes-pi-DEPLOY_SCENARIO:
          DEPLOY_SCENARIO: k8-nosdn-nofeature-noha
    builders:
      - functest-kubernetes-pi-run-containers:
          <<: *functest-kubernetes-pi-run-containers

- project:
    name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-cnf'
    <<: *functest-kubernetes-pi-params
    volumes:
      - /home/opnfv/functest-kubernetes/config.{tag}:/home/xtesting/.kubeconfig
    env:
      - DEPLOY_SCENARIO=$DEPLOY_SCENARIO
    published_ports:
    container: 'functest-kubernetes-cnf'
    test:
      - k8s_vims
      - helm_vims
      - cnf_testsuite
    privileged: 'false'
    network: bridge
    uid: 1000
    gid: 1000
    jobs:
      - 'functest-kubernetes-pi-ollivier-functest-kubernetes-cnf-{tag}-{test}-run'

- builder:
    name: functest-kubernetes-pi-zip
    builders:
      - shell: |
          set +x
          volumes=;
          if [ "{volumes}" != "None" ]; then
            for i in $(echo {volumes} | tr -d '[]' |sed "s/, / /g" ); \
              do volumes="-v $i $volumes"; done
          fi
          env=;
          if [ "{env}" != "None" ]; then
            for i in $(eval echo {env} | tr -d '[]' |sed "s/, / /g" ); \
              do env="-e $i $env"; done
          fi
          published_ports=;
          if [ "{published_ports}" != "None" ]; then
            for i in $(echo {published_ports} | tr -d '[]' |sed "s/, / /g" ); \
              do published_ports="-p $i $published_ports"; done
          fi
          [ ! -z "$WORKSPACE" ] && rm -rf $WORKSPACE/results || true
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          mkdir -p $WORKSPACE/results
          chown {uid}:{gid} $WORKSPACE/results
          docker run --rm \
            $volumes \
            $env \
            $published_ports \
            -e S3_ENDPOINT_URL=https://storage.googleapis.com \
            -e S3_DST_URL=s3://artifacts.opnfv.org/functest-kubernetes \
            -e HTTP_DST_URL=http://artifacts.opnfv.org/functest-kubernetes \
            -v /home/opnfv/functest-kubernetes/.boto:/etc/boto.cfg \
            -e TEST_DB_URL=http://testresults.opnfv.org/test/api/v1/results \
            -e TEST_DB_EXT_URL=http://testresults.opnfv.org/test/api/v1/results \
            -e BUILD_TAG=$BUILD_TAG \
            -v $WORKSPACE/../$JOB_NAME/results:/var/lib/xtesting/results \
            $image zip_campaign

- job-template:
    name: 'functest-kubernetes-pi-{tag}-zip'
    parameters:
      - functest-kubernetes-pi-slave:
          slave: '{slave}'
      - functest-kubernetes-pi-build_tag:
          build_tag: ''
      - functest-kubernetes-pi-DEPLOY_SCENARIO:
          DEPLOY_SCENARIO: k8-nosdn-nofeature-noha
    builders:
      - functest-kubernetes-pi-zip:
          <<: *functest-kubernetes-pi-containers
          volumes: '{volumes}'
          env: '{env}'
          uid: '{uid}'
          gid: '{gid}'
          published_ports: '{published_ports}'

- project:
    name: 'functest-kubernetes-pi-{tag}-zip'
    <<: *functest-kubernetes-pi-params
    volumes:
      - /home/opnfv/functest-kubernetes/config.{tag}:/home/xtesting/.kubeconfig
    env:
      - DEPLOY_SCENARIO=$DEPLOY_SCENARIO
    published_ports:
    container: 'functest-kubernetes-healthcheck'
    uid: 1000
    gid: 1000
    jobs:
      - 'functest-kubernetes-pi-{tag}-zip'

- job-template:
    name: 'functest-kubernetes-pi-{tag}-daily'
    project-type: multijob
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-kubernetes-pi-slave:
          slave: '{slave}'
      - functest-kubernetes-pi-build_tag:
          build_tag: ''
      - functest-kubernetes-pi-DEPLOY_SCENARIO:
          DEPLOY_SCENARIO: k8-nosdn-nofeature-noha
    # PyYAML and yamllint differ here
    # see https://github.com/yaml/pyyaml/issues/234
    # yamllint disable rule:indentation
    properties:
      - build-blocker:
          blocking-jobs:
          - ^functest-kubernetes-(pi-)*.*-(daily|docker|review)$
    # yamllint enable rule:indentation
    builders:
      - multijob:
          name: remove former images
          projects:
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-healthcheck-{tag}-rmi'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-rmi'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-security-{tag}-rmi'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-benchmarking-{tag}-rmi'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-cnf-{tag}-rmi'
              <<: *functest-kubernetes-pi-jobs
      - multijob:
          name: pull containers
          projects:
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-healthcheck-{tag}-pull'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-pull'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-security-{tag}-pull'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-benchmarking-{tag}-pull'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-cnf-{tag}-pull'
              <<: *functest-kubernetes-pi-jobs
      - multijob:
          name: ollivier/functest-kubernetes-healthcheck:{tag}
          projects:
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-healthcheck-{tag}-k8s_quick-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-healthcheck-{tag}-k8s_smoke-run'
              <<: *functest-kubernetes-pi-jobs
      - multijob:
          name: ollivier/functest-kubernetes-smoke:{tag}
          execution-type: SEQUENTIALLY
          projects:
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-xrally_kubernetes-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-k8s_conformance-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-k8s_conformance_serial-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-sig_api_machinery-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-sig_api_machinery_serial-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-sig_apps-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-sig_apps_serial-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-sig_auth-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-sig_cluster_lifecycle-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-sig_instrumentation-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-sig_network-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-sig_node-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-sig_scheduling_serial-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-sig_storage-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-smoke-{tag}-sig_storage_serial-run'
              <<: *functest-kubernetes-pi-jobs
      - multijob:
          name: ollivier/functest-kubernetes-security:{tag}
          projects:
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-security-{tag}-kube_hunter-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-security-{tag}-kube_bench_master-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-security-{tag}-kube_bench_node-run'
              <<: *functest-kubernetes-pi-jobs
      - multijob:
          name: ollivier/functest-kubernetes-benchmarking:{tag}
          projects:
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-benchmarking-{tag}-xrally_kubernetes_full-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-benchmarking-{tag}-netperf-run'
              <<: *functest-kubernetes-pi-jobs
      - multijob:
          name: ollivier/functest-kubernetes-cnf:{tag}
          projects:
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-cnf-{tag}-k8s_vims-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-cnf-{tag}-helm_vims-run'
              <<: *functest-kubernetes-pi-jobs
            - name: 'functest-kubernetes-pi-ollivier-functest-kubernetes-cnf-{tag}-cnf_testsuite-run'
              <<: *functest-kubernetes-pi-jobs
      - multijob:
          name: dump all campaign data
          projects:
            - name: 'functest-kubernetes-pi-{tag}-zip'
              <<: *functest-kubernetes-pi-jobs
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-kubernetes-pi-daily'
    <<: *functest-kubernetes-pi-params
    jobs:
      - 'functest-kubernetes-pi-{tag}-daily'

- view:
    name: functest-kubernetes-pi
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: ^functest-kubernetes-pi-[a-z-0-9.]+-daily$
