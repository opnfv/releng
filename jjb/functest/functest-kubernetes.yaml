---
- functest-kubernetes-jobs: &functest-kubernetes-jobs
    name: 'functest-kubernetes-jobs'
    current-parameters: true

- functest-kubernetes-params: &functest-kubernetes-params
    name: 'functest-kubernetes-params'
    repo: 'opnfv'
    port:
    tag:
      - latest:
          branch: master
          slave: lf-virtual1-6
          dependency: 3.13
      - leguer:
          branch: stable/leguer
          slave: lf-virtual1-5
          dependency: 3.12
      - kali:
          branch: stable/kali
          slave: lf-virtual1-4
          dependency: 3.11
      - jerma:
          branch: stable/jerma
          slave: lf-virtual1-3
          dependency: 3.10
      - iruya:
          branch: stable/iruya
          slave: lf-virtual1-2
          dependency: 3.9
      - hunter:
          branch: stable/hunter
          slave: lf-virtual1-1
          dependency: 3.9

- parameter:
    name: functest-kubernetes-slave
    parameters:
      - label:
          name: slave
          default: '{slave}'

- parameter:
    name: functest-kubernetes-build_tag
    parameters:
      - random-string:
          name: build_tag

- parameter:
    name: functest-kubernetes-DEPLOY_SCENARIO
    parameters:
      - string:
          name: DEPLOY_SCENARIO
          default: k8-nosdn-nofeature-noha

- functest-kubernetes-containers: &functest-kubernetes-containers
    name: 'functest-kubernetes-containers'
    repo: '{repo}'
    port: '{port}'
    container: '{container}'
    tag: '{tag}'

- functest-kubernetes-run-containers: &functest-kubernetes-run-containers
    name: 'functest-kubernetes-run-containers'
    <<: *functest-kubernetes-containers
    test: '{test}'
    privileged: '{privileged}'
    network: '{network}'

- builder:
    name: functest-kubernetes-pull-containers
    builders:
      - shell: |
          set +x
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          docker pull $image

- builder:
    name: functest-kubernetes-run-containers
    builders:
      - shell: |
          set +x
          [ ! -z "$WORKSPACE" ] && rm -rf $WORKSPACE/results || true
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          docker run --rm \
            --privileged={privileged} \
            --network={network} \
            -e S3_ENDPOINT_URL=https://storage.googleapis.com \
            -e S3_DST_URL=s3://artifacts.opnfv.org/functest-kubernetes/$BUILD_TAG/$JOB_NAME-$BUILD_ID \
            -e HTTP_DST_URL=http://artifacts.opnfv.org/functest-kubernetes/$BUILD_TAG/$JOB_NAME-$BUILD_ID \
            -v /home/opnfv/functest-kubernetes/.boto:/root/.boto \
            -e TEST_DB_URL=http://testresults.opnfv.org/test/api/v1/results \
            -e TEST_DB_EXT_URL=http://testresults.opnfv.org/test/api/v1/results \
            -e NODE_NAME=$slave \
            -e BUILD_TAG=$BUILD_TAG \
            -v $WORKSPACE/../$JOB_NAME/results:/var/lib/xtesting/results \
            -e DEPLOY_SCENARIO=$DEPLOY_SCENARIO \
            -v /home/opnfv/functest-kubernetes/config.{tag}:/root/.kube/config \
            $image run_tests -t {test} -p -r

- builder:
    name: functest-kubernetes-remove-images
    builders:
      - shell: |
          set +x
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          docker rmi $image || true

- functest-kubernetes-build-containers: &functest-kubernetes-build-containers
    name: 'functest-kubernetes-build-containers'
    <<: *functest-kubernetes-containers
    ref_arg: '{ref_arg}'
    path: '{path}'

- builder:
    name: functest-kubernetes-build-containers
    builders:
      - shell: |
          set +x
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          if [ "{ref_arg}" = "None" ]; then
            build_arg=""
          else
            build_arg="--build-arg {ref_arg}={ref}"
          fi
          cd {path}
          docker build $build_arg \
            --pull=false --no-cache --force-rm=true \
            -t $image .

- scm:
    name: functest-kubernetes-scm
    scm:
      - git:
          url: 'https://gerrit.opnfv.org/gerrit/functest-kubernetes'
          refspec: '+refs/heads/*:refs/remotes/origin/* +refs/changes/*:refs/changes/*'
          branches:
            - '{ref}'

- job-template:
    name: 'functest-kubernetes-{repo}-{container}-{tag}-pull'
    parameters:
      - functest-kubernetes-slave:
          slave: '{slave}'
    builders:
      - functest-kubernetes-pull-containers:
          <<: *functest-kubernetes-containers

- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-healthcheck-pull'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-healthcheck'
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-pull'

- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-pull'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-smoke'
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-pull'

- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-security-pull'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-security'
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-pull'

- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-benchmarking-pull'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-benchmarking'
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-pull'

- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-cnf-pull'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-cnf'
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-pull'

- job-template:
    name: 'functest-kubernetes-{repo}-{container}-{tag}-rmi'
    parameters:
      - functest-kubernetes-slave:
          slave: '{slave}'
    builders:
      - functest-kubernetes-remove-images:
          <<: *functest-kubernetes-containers

- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-healthcheck-rmi'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-healthcheck'
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-rmi'

- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-rmi'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-smoke'
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-rmi'

- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-security-rmi'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-security'
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-rmi'

- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-benchmarking-rmi'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-benchmarking'
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-rmi'

- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-cnf-rmi'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-cnf'
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-rmi'

- job-template:
    name: 'functest-kubernetes-{repo}-{container}-{tag}-{test}-run'
    parameters:
      - functest-kubernetes-slave:
          slave: '{slave}'
      - functest-kubernetes-build_tag:
          build_tag: ''
      - functest-kubernetes-DEPLOY_SCENARIO:
          DEPLOY_SCENARIO: k8-nosdn-nofeature-noha
    builders:
      - functest-kubernetes-run-containers:
          <<: *functest-kubernetes-run-containers

- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-healthcheck'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-healthcheck'
    test:
      - k8s_quick
      - k8s_smoke
    privileged: 'false'
    network: bridge
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-{test}-run'

- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-smoke'
    test:
      - xrally_kubernetes
      - k8s_conformance
      - sig_network
      - sig_network_features
      - sig_storage
    privileged: 'false'
    network: bridge
    exclude:
      - {'tag': 'leguer', 'test': 'sig_network'}
      - {'tag': 'leguer', 'test': 'sig_network_features'}
      - {'tag': 'leguer', 'test': 'sig_storage'}
      - {'tag': 'kali', 'test': 'sig_network'}
      - {'tag': 'kali', 'test': 'sig_network_features'}
      - {'tag': 'kali', 'test': 'sig_storage'}
      - {'tag': 'jerma', 'test': 'sig_network'}
      - {'tag': 'jerma', 'test': 'sig_network_features'}
      - {'tag': 'jerma', 'test': 'sig_storage'}
      - {'tag': 'iruya', 'test': 'sig_network'}
      - {'tag': 'iruya', 'test': 'sig_network_features'}
      - {'tag': 'iruya', 'test': 'sig_storage'}
      - {'tag': 'hunter', 'test': 'sig_network'}
      - {'tag': 'hunter', 'test': 'sig_network_features'}
      - {'tag': 'hunter', 'test': 'sig_storage'}
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-{test}-run'

- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-security'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-security'
    test:
      - kube_hunter
      - kube_bench_master
      - kube_bench_node
    privileged: 'false'
    network: bridge
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-{test}-run'

- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-benchmarking'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-benchmarking'
    test:
      - xrally_kubernetes_full
    privileged: 'false'
    network: bridge
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-{test}-run'

- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-cnf'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-cnf'
    test:
      - k8s_vims
      - helm_vims
      - cnf_conformance
    privileged: 'false'
    network: bridge
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-{test}-run'


- builder:
    name: functest-kubernetes-zip
    builders:
      - shell: |
          set +x
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          docker run --rm \
            -e S3_ENDPOINT_URL=https://storage.googleapis.com \
            -e S3_DST_URL=s3://artifacts.opnfv.org/functest-kubernetes \
            -e HTTP_DST_URL=http://artifacts.opnfv.org/functest-kubernetes \
            -v /home/opnfv/functest-kubernetes/.boto:/root/.boto \
            -e TEST_DB_URL=http://testresults.opnfv.org/test/api/v1/results \
            -e TEST_DB_EXT_URL=http://testresults.opnfv.org/test/api/v1/results \
            -e BUILD_TAG=$BUILD_TAG \
            -v $WORKSPACE/../$JOB_NAME/results:/var/lib/xtesting/results \
            -e DEPLOY_SCENARIO=$DEPLOY_SCENARIO \
            -v /home/opnfv/functest-kubernetes/config.{tag}:/root/.kube/config \
            $image zip_campaign

- job-template:
    name: 'functest-kubernetes-{tag}-zip'
    parameters:
      - functest-kubernetes-slave:
          slave: '{slave}'
      - functest-kubernetes-build_tag:
          build_tag: ''
      - functest-kubernetes-DEPLOY_SCENARIO:
          DEPLOY_SCENARIO: k8-nosdn-nofeature-noha
    builders:
      - functest-kubernetes-zip:
          <<: *functest-kubernetes-containers

- project:
    name: 'functest-kubernetes-{tag}-zip'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-healthcheck'
    jobs:
      - 'functest-kubernetes-{tag}-zip'

- job-template:
    name: 'functest-kubernetes-{tag}-daily'
    project-type: multijob
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-kubernetes-slave:
          slave: '{slave}'
      - functest-kubernetes-build_tag:
          build_tag: ''
      - functest-kubernetes-DEPLOY_SCENARIO:
          DEPLOY_SCENARIO: k8-nosdn-nofeature-noha
    properties:
      - build-blocker:
          use-build-blocker: true
          blocking-level: 'NODE'
          blocking-jobs:
            - '^functest-kubernetes-{tag}-(daily|docker|review)$'
    builders:
      - multijob:
          name: remove former images
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-healthcheck-{tag}-rmi'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-{tag}-rmi'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-security-{tag}-rmi'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-benchmarking-{tag}-rmi'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-cnf-{tag}-rmi'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: pull containers
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-healthcheck-{tag}-pull'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-{tag}-pull'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-security-{tag}-pull'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-benchmarking-{tag}-pull'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-cnf-{tag}-pull'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: opnfv/functest-kubernetes-healthcheck:{tag}
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-healthcheck-{tag}-k8s_quick-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-healthcheck-{tag}-k8s_smoke-run'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: opnfv/functest-kubernetes-smoke:{tag}
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-{tag}-xrally_kubernetes-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-{tag}-k8s_conformance-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-{tag}-sig_network-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-{tag}-sig_network_features-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-{tag}-sig_storage-run'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: opnfv/functest-kubernetes-security:{tag}
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-security-{tag}-kube_hunter-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-security-{tag}-kube_bench_master-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-security-{tag}-kube_bench_node-run'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: opnfv/functest-kubernetes-benchmarking:{tag}
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-benchmarking-{tag}-xrally_kubernetes_full-run'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: opnfv/functest-kubernetes-cnf:{tag}
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-cnf-{tag}-k8s_vims-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-cnf-{tag}-helm_vims-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-cnf-{tag}-cnf_conformance-run'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: dump all campaign data
          projects:
            - name: 'functest-kubernetes-{tag}-zip'
              <<: *functest-kubernetes-jobs

- functest-kubernetes-dep: &functest-kubernetes-dep
    name: 'functest-kubernetes-containers'
    repo: '{repo}'
    port: '{port}'
    tag: '{tag}'
    dependency: '{dependency}'

- builder:
    name: functest-kubernetes-pull-dep-images
    builders:
      - shell: |
          set +x
          if [ "_" = "_" ]; then
            image=alpine:{dependency}
          elif [ "_" = "None" ]; then
            image=_/alpine:{dependency}
          else
            image=_:/alpine{dependency}
          fi
          docker pull $image || true

- builder:
    name: functest-kubernetes-remove-dep-images
    builders:
      - shell: |
          set +x
          if [ "_" = "_" ]; then
            image=alpine:{dependency}
          elif [ "_" = "None" ]; then
            image=_/alpine:{dependency}
          else
            image=_:/alpine{dependency}
          fi
          docker rmi $image || true

- job-template:
    name: 'functest-kubernetes-{repo}-{tag}-dep-pull'
    parameters:
      - functest-kubernetes-slave:
          slave: '{slave}'
    builders:
      - functest-kubernetes-pull-dep-images:
          <<: *functest-kubernetes-dep

- project:
    name: 'functest-kubernetes-{repo}-{tag}-dep-pull'
    <<: *functest-kubernetes-params
    jobs:
      - 'functest-kubernetes-{repo}-{tag}-dep-pull'

- job-template:
    name: 'functest-kubernetes-{repo}-{tag}-dep-rmi'
    parameters:
      - functest-kubernetes-slave:
          slave: '{slave}'
    builders:
      - functest-kubernetes-remove-dep-images:
          <<: *functest-kubernetes-dep

- project:
    name: 'functest-kubernetes-{repo}-{tag}-dep-rmi'
    <<: *functest-kubernetes-params
    jobs:
      - 'functest-kubernetes-{repo}-{tag}-dep-rmi'

- builder:
    name: functest-kubernetes-tox
    builders:
      - shell: |
          set +x
          apt-get update && apt-get install software-properties-common gpg -y
          add-apt-repository -y ppa:deadsnakes/ppa
          apt-get update && apt-get install python3.8 python3.8-dev \
            python3.8-distutils \
            python3.7 python3.7-dev python3.6 python3.6-dev \
            python python-dev python3-pip enchant -y
          pip3 install tox tox-pip-version
          tox

- job-template:
    name: 'functest-kubernetes-{tag}-tox'
    scm:
      - functest-kubernetes-scm:
          ref: $GERRIT_REFSPEC
    triggers:
      - functest-kubernetes-patchset-created:
          branch: '{branch}'
    parameters:
      - functest-kubernetes-slave:
          slave: '{slave}'
    builders:
      - functest-kubernetes-tox:

- project:
    name: functest-kubernetes-tox
    <<: *functest-kubernetes-params
    jobs:
      - 'functest-kubernetes-{tag}-tox'

- project:
    name: functest-kubernetes-opnfv-functest-kubernetes-core-{tag}-gate
    <<: *functest-kubernetes-params
    container: functest-kubernetes-core
    ref_arg: BRANCH
    path: docker/core
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-gate'

- project:
    name: functest-kubernetes-opnfv-functest-kubernetes-healthcheck-{tag}-gate
    <<: *functest-kubernetes-params
    container: functest-kubernetes-healthcheck
    ref_arg:
    path: docker/healthcheck
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-gate'

- project:
    name: functest-kubernetes-opnfv-functest-kubernetes-cnf-{tag}-gate
    <<: *functest-kubernetes-params
    container: functest-kubernetes-cnf
    ref_arg: BRANCH
    path: docker/cnf
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-gate'

- project:
    name: functest-kubernetes-opnfv-functest-kubernetes-security-{tag}-gate
    <<: *functest-kubernetes-params
    container: functest-kubernetes-security
    ref_arg: BRANCH
    path: docker/security
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-gate'

- project:
    name: functest-kubernetes-opnfv-functest-kubernetes-smoke-{tag}-gate
    <<: *functest-kubernetes-params
    container: functest-kubernetes-smoke
    ref_arg:
    path: docker/smoke
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-gate'

- project:
    name: functest-kubernetes-opnfv-functest-kubernetes-benchmarking-{tag}-gate
    <<: *functest-kubernetes-params
    container: functest-kubernetes-benchmarking
    ref_arg:
    path: docker/benchmarking
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-gate'


- job-template:
    name: 'functest-kubernetes-{repo}-{container}-{tag}-gate'
    parameters:
      - functest-kubernetes-slave:
          slave: '{slave}'
    scm:
      - functest-kubernetes-scm:
          ref: $GERRIT_REFSPEC
    builders:
      - functest-kubernetes-build-containers:
          <<: *functest-kubernetes-build-containers
          ref: $GERRIT_REFSPEC

- trigger:
    name: functest-kubernetes-patchset-created
    triggers:
      - gerrit:
          trigger-on:
            - patchset-created-event
            - comment-added-contains-event:
                comment-contains-value: 'recheck'
            - comment-added-contains-event:
                comment-contains-value: 'reverify'
          projects:
            - project-compare-type: 'ANT'
              project-pattern: 'functest-kubernetes'
              branches:
                - branch-compare-type: 'ANT'
                  branch-pattern: '**/{branch}'

- job-template:
    name: 'functest-kubernetes-{tag}-review'
    project-type: multijob
    triggers:
      - functest-kubernetes-patchset-created:
          branch: '{branch}'
    parameters:
      - functest-kubernetes-slave:
          slave: '{slave}'
      - functest-kubernetes-build_tag:
          build_tag: ''
      - functest-kubernetes-DEPLOY_SCENARIO:
          DEPLOY_SCENARIO: k8-nosdn-nofeature-noha
    properties:
      - build-blocker:
          use-build-blocker: true
          blocking-level: 'NODE'
          blocking-jobs:
            - '^functest-kubernetes-{tag}-(daily|docker|review)$'
    builders:
      - multijob:
          name: remove former images
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-healthcheck-{tag}-rmi'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-{tag}-rmi'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-security-{tag}-rmi'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-benchmarking-{tag}-rmi'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-cnf-{tag}-rmi'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: remove dependency
          projects:
            - name: 'functest-kubernetes-{repo}-{tag}-dep-rmi'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: pull dependency
          projects:
            - name: 'functest-kubernetes-{repo}-{tag}-dep-pull'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: build opnfv/functest-kubernetes-core
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-core-{tag}-gate'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: build containers
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-healthcheck-{tag}-gate'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-cnf-{tag}-gate'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-security-{tag}-gate'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: build opnfv/functest-kubernetes-smoke
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-{tag}-gate'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: build opnfv/functest-kubernetes-benchmarking
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-benchmarking-{tag}-gate'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: opnfv/functest-kubernetes-healthcheck:{tag}
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-healthcheck-{tag}-k8s_quick-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-healthcheck-{tag}-k8s_smoke-run'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: opnfv/functest-kubernetes-smoke:{tag}
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-{tag}-xrally_kubernetes-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-{tag}-k8s_conformance-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-{tag}-sig_network-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-{tag}-sig_network_features-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-{tag}-sig_storage-run'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: opnfv/functest-kubernetes-security:{tag}
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-security-{tag}-kube_hunter-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-security-{tag}-kube_bench_master-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-security-{tag}-kube_bench_node-run'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: opnfv/functest-kubernetes-benchmarking:{tag}
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-benchmarking-{tag}-xrally_kubernetes_full-run'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: opnfv/functest-kubernetes-cnf:{tag}
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-cnf-{tag}-k8s_vims-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-cnf-{tag}-helm_vims-run'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-cnf-{tag}-cnf_conformance-run'
              <<: *functest-kubernetes-jobs

- builder:
    name: functest-kubernetes-push-containers
    builders:
      - shell: |
          set +x
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          docker push $image

- trigger:
    name: functest-kubernetes-commit
    triggers:
      - pollscm:
          cron: "*/30 * * * *"

- job-template:
    name: 'functest-kubernetes-{repo}-{container}-{tag}-build'
    parameters:
      - functest-kubernetes-slave:
          slave: '{slave}'
    scm:
      - functest-kubernetes-scm:
          ref: '{branch}'
    builders:
      - functest-kubernetes-build-containers:
          <<: *functest-kubernetes-build-containers
          ref: '{branch}'
      - functest-kubernetes-push-containers:
          <<: *functest-kubernetes-build-containers
          ref: '{branch}'

- project:
    name: functest-kubernetes-opnfv-functest-kubernetes-core-{tag}-build
    <<: *functest-kubernetes-params
    container: functest-kubernetes-core
    ref_arg: BRANCH
    path: docker/core
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-build'

- project:
    name: functest-kubernetes-opnfv-functest-kubernetes-healthcheck-{tag}-build
    <<: *functest-kubernetes-params
    container: functest-kubernetes-healthcheck
    ref_arg:
    path: docker/healthcheck
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-build'

- project:
    name: functest-kubernetes-opnfv-functest-kubernetes-cnf-{tag}-build
    <<: *functest-kubernetes-params
    container: functest-kubernetes-cnf
    ref_arg: BRANCH
    path: docker/cnf
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-build'

- project:
    name: functest-kubernetes-opnfv-functest-kubernetes-security-{tag}-build
    <<: *functest-kubernetes-params
    container: functest-kubernetes-security
    ref_arg: BRANCH
    path: docker/security
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-build'

- project:
    name: functest-kubernetes-opnfv-functest-kubernetes-smoke-{tag}-build
    <<: *functest-kubernetes-params
    container: functest-kubernetes-smoke
    ref_arg:
    path: docker/smoke
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-build'

- project:
    name: functest-kubernetes-opnfv-functest-kubernetes-benchmarking-{tag}-build
    <<: *functest-kubernetes-params
    container: functest-kubernetes-benchmarking
    ref_arg:
    path: docker/benchmarking
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-build'


- job-template:
    name: 'functest-kubernetes-{tag}-docker'
    project-type: multijob
    triggers:
      - functest-kubernetes-commit
    scm:
      - functest-kubernetes-scm:
          ref: '{branch}'
    parameters:
      - functest-kubernetes-slave:
          slave: '{slave}'
    properties:
      - build-blocker:
          use-build-blocker: true
          blocking-level: 'NODE'
          blocking-jobs:
            - '^functest-kubernetes-{tag}-(daily|docker|review)$'
    builders:
      - multijob:
          name: remove dependency
          projects:
            - name: 'functest-kubernetes-{repo}-{tag}-dep-rmi'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: pull dependency
          projects:
            - name: 'functest-kubernetes-{repo}-{tag}-dep-pull'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: build opnfv/functest-kubernetes-core
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-core-{tag}-build'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: build containers
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-healthcheck-{tag}-build'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-cnf-{tag}-build'
              <<: *functest-kubernetes-jobs
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-security-{tag}-build'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: build opnfv/functest-kubernetes-smoke
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-{tag}-build'
              <<: *functest-kubernetes-jobs
      - multijob:
          name: build opnfv/functest-kubernetes-benchmarking
          projects:
            - name: 'functest-kubernetes-opnfv-functest-kubernetes-benchmarking-{tag}-build'
              <<: *functest-kubernetes-jobs

- builder:
    name: functest-kubernetes-trivy
    builders:
      - shell: |
          apt-get update && apt-get install curl
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b .
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          ./trivy --exit-code 1 $image

- job-template:
    name: 'functest-kubernetes-{repo}-{container}-{tag}-trivy'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-kubernetes-slave:
          slave: '{slave}'
    builders:
      - functest-kubernetes-trivy:
          <<: *functest-kubernetes-containers

- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-healthcheck-trivy'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-healthcheck'
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-trivy'
- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-smoke-trivy'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-smoke'
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-trivy'
- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-security-trivy'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-security'
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-trivy'
- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-benchmarking-trivy'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-benchmarking'
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-trivy'
- project:
    name: 'functest-kubernetes-opnfv-functest-kubernetes-cnf-trivy'
    <<: *functest-kubernetes-params
    container: 'functest-kubernetes-cnf'
    jobs:
      - 'functest-kubernetes-{repo}-{container}-{tag}-trivy'

- project:
    name: 'functest-kubernetes'
    <<: *functest-kubernetes-params
    jobs:
      - 'functest-kubernetes-{tag}-daily'
      - 'functest-kubernetes-{tag}-review'
      - 'functest-kubernetes-{tag}-docker'


- view:
    name: functest-kubernetes
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: ^functest-kubernetes-[a-z-]+-daily$

- view:
    name: functest-kubernetes-review
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: ^functest-kubernetes-[a-z-]+-review$

- view:
    name: functest-kubernetes-tox
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: ^functest-kubernetes-[a-z-]+-tox$

- view:
    name: functest-kubernetes-docker
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: ^functest-kubernetes-[a-z-]+-docker$

- view:
    name: functest-kubernetes-trivy
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: ^functest-kubernetes-[a-z-]+-trivy$
