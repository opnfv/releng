---
- builder:
    name: xtesting-ci-tests-remote
    builders:
      - shell: |
          set +x
          ssh -T opnfv@172.30.12.84 << EOF
            sudo apt -o DPkg::Lock::Timeout=300 update
            sudo DEBIAN_FRONTEND=noninteractive apt \
              -o DPkg::Lock::Timeout=300 install python3-pip docker.io podman curl -y
            curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-linux-amd64
            chmod +x ./kind
            sudo mv ./kind /usr/local/bin/kind
            kind delete clusters xtesting jenkins gitlab || true
            sudo docker ps -aq |xargs sudo docker stop || true
            sudo docker ps -aq |xargs sudo docker rm || true
            sudo docker system prune -f --all || true
            sudo rm -f /etc/systemd/system/docker.service.d/http-proxy.conf
            if [ $(lsb_release -r -s |cut -d\. -f1) -ge "22" ]; then
              sudo DEBIAN_FRONTEND=noninteractive apt \
                -o DPkg::Lock::Timeout=300 install podman -y
              sudo podman ps -aq |xargs sudo podman stop || true
              sudo podman ps -aq |xargs sudo podman rm || true
              sudo podman system prune --all --force || true
            fi
            sudo rm -rfv /data /tmp/xtesting*
            sudo iptables -P INPUT ACCEPT
            sudo iptables -P FORWARD ACCEPT
            sudo iptables -P OUTPUT ACCEPT
            sudo iptables -t nat -F
            sudo iptables -t mangle -F
            sudo iptables -F
            sudo iptables -X
            sudo systemctl daemon-reload
            sudo systemctl restart docker
            sudo systemctl restart podman
          EOF
          if [ $(lsb_release -r -s |cut -d\. -f1) -ge "24" ]; then
            sudo DEBIAN_FRONTEND=noninteractive apt \
              -o DPkg::Lock::Timeout=300 install ansible patch -y
          else
            sudo DEBIAN_FRONTEND=noninteractive apt \
              -o DPkg::Lock::Timeout=300 install patch -y
            sudo pip3 install ansible
          fi
          rm -rf ~/.ansible/roles/collivier.xtesting
          case {release} in
          stable)
            ansible-galaxy install -f collivier.xtesting ;;
          *)
            ansible-galaxy install -f git+https://github.com/collivier/ansible-role-xtesting.git,{release}
            mv ~/.ansible/roles/ansible-role-xtesting ~/.ansible/roles/collivier.xtesting ;;
          esac
          (cd ~/.ansible/roles/collivier.xtesting; patch -p1 < tests/docker_config_json.patch)
          ansible-galaxy collection install -f -r ~/.ansible/roles/collivier.xtesting/requirements.yml
          sed -i "s/127.0.0.1/172.30.12.84/g" ~/.ansible/roles/collivier.xtesting/tests/{playbook}.yml
          echo 172.30.12.84 ansible_host=172.30.12.84 ansible_user=opnfv > /tmp/inventory
          ansible-playbook -i /tmp/inventory -vvvv ~/.ansible/roles/collivier.xtesting/tests/{playbook}.yml

- parameter:
    name: xtesting-ci-node
    parameters:
      - label:
          name: node
          default: '{node}'

- job-template:
    name: 'xtesting-ci-tests-remote-{release}-{playbook}'
    triggers:
      - timed: '@weekly'
    parameters:
      - xtesting-ci-node:
          node: '{node}'
    properties:
      - build-blocker:
          use-build-blocker: true
          blocking-level: 'NODE'
          blocking-jobs:
            - '^xtesting-ci-tests-.*$'
    builders:
      - xtesting-ci-tests-remote:
          playbook: '{playbook}'
          release: '{release}'

- _playbook: &playbook
    name: 'playbook'
    playbook:
      - all
      - podman
      - podman2
      - proxy
      - proxy2
      - radosgw
      - nexus
      - repo
      - twice
      - macro
      - branch
      - jjb
      - https
      - https2
      - properties
      - gitlab.insert
      - jenkins_kind
      - jenkins_kind2
      - gitlab_kind
      - chainedci
      - kubernetes0
      - kubernetes1
      - kubernetes2
      - proxy_kubernetes
      - proxy_kubernetes2
      - k8s_jenkins_kind0
      - k8s_jenkins_kind1
      - k8s_jenkins_kind2
      - k8s_jenkins_kind3
      - k8s_gitlab0
      - k8s_gitlab1
      - k8s_gitlab_kind0
      - k8s_gitlab_kind1
      - k8s_gitlab_kind2
      - k8s_gitlab_kind3

- project:
    name: xtesting-ci-tests-remote
    <<: *playbook
    node: opnfv-build
    release:
      - stable
      - master
    jobs:
      - 'xtesting-ci-tests-remote-{release}-{playbook}'

- view:
    name: xtesting-ci
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: ^xtesting-ci-tests-.*$

- builder:
    name: xtesting-ci-clean-docker
    builders:
      - shell: |
          set +x
          sudo apt -o DPkg::Lock::Timeout=300 update
          sudo DEBIAN_FRONTEND=noninteractive apt \
            -o DPkg::Lock::Timeout=300 install docker.io curl -y
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          kind delete clusters xtesting jenkins gitlab || true
          sudo docker ps -aq |xargs sudo docker stop || true
          sudo docker ps -aq |xargs sudo docker rm || true
          sudo docker system prune -f --all || true
          sudo rm -f /etc/systemd/system/docker.service.d/http-proxy.conf
          if [ $(lsb_release -r -s |cut -d\. -f1) -ge "22" ]; then
            sudo DEBIAN_FRONTEND=noninteractive apt \
              -o DPkg::Lock::Timeout=300 install podman -y
            sudo podman ps -aq |xargs sudo podman stop || true
            sudo podman ps -aq |xargs sudo podman rm || true
            sudo podman system prune --all --force || true
          fi
          sudo rm -rfv /data /tmp/xtesting*
          sudo iptables -P INPUT ACCEPT
          sudo iptables -P FORWARD ACCEPT
          sudo iptables -P OUTPUT ACCEPT
          sudo iptables -t nat -F
          sudo iptables -t mangle -F
          sudo iptables -F
          sudo iptables -X
          sudo systemctl daemon-reload
          sudo systemctl restart docker
          sudo systemctl restart podman

- builder:
    name: xtesting-ci-tests-debian-docker
    builders:
      - shell: |
          set +x
          sudo docker run --privileged -v /home/opnfv/.docker/config.json:/root/.docker/config.json \
            -v /home/opnfv/.docker/config.json:/home/opnfv/.config/helm/registry/config.json \
            -v /home/opnfv/functest-kubernetes:/home/opnfv/functest-kubernetes \
            -v /data:/data -v /run:/run --network host debian:{debian} bash -c "\
          apt update && DEBIAN_FRONTEND=noninteractive apt \
            -o DPkg::Lock::Timeout=300 install git curl -y && \
          case {debian} in \
          bullseye) \
            [ -z "$VIRTUAL_ENV" ] && DEBIAN_FRONTEND=noninteractive apt \
              -o DPkg::Lock::Timeout=300 install python3-pip -y && pip3 install ansible ;; \
          *) \
            [ -z "$VIRTUAL_ENV" ] && DEBIAN_FRONTEND=noninteractive apt \
              -o DPkg::Lock::Timeout=300 install ansible -y ;; \
          esac && \
          rm -rf ~/.ansible/roles/collivier.xtesting && \
          case {release} in \
          stable) \
            ansible-galaxy install -f collivier.xtesting ;; \
          *) \
            ansible-galaxy install -f git+https://github.com/collivier/ansible-role-xtesting.git,{release} && \
            mv ~/.ansible/roles/ansible-role-xtesting ~/.ansible/roles/collivier.xtesting ;; \
          esac && \
          ansible-galaxy collection install community.kubernetes && \
          ansible-playbook -vvvv ~/.ansible/roles/collivier.xtesting/tests/{playbook}.yml"

- job-template:
    name: 'xtesting-ci-tests-{debian}-{release}-{playbook}'
    triggers:
      - timed: '@weekly'
    parameters:
      - xtesting-ci-node:
          node: '{node}'
    properties:
      - build-blocker:
          use-build-blocker: true
          blocking-level: 'NODE'
          blocking-jobs:
            - '^xtesting-ci-tests-.*$'
    builders:
      - xtesting-ci-clean-docker
      - xtesting-ci-tests-debian-docker:
          playbook: '{playbook}'
          release: '{release}'
          debian: '{debian}'

- project:
    name: xtesting-ci-tests-debian
    <<: *playbook
    node: xtesting
    release:
      - stable
      - master
    debian:
      - bullseye
      - bookworm
      - trixie
      - forky
      - sid
    exclude:
      - playbook: podman
        debian: bookworm
      - playbook: podman
        debian: trixie
      - playbook: podman
        debian: forky
      - playbook: podman
        debian: sid
      - playbook: podman2
        debian: bullseye
      - playbook: podman2
        debian: bookworm
      - playbook: podman2
        debian: trixie
      - playbook: podman2
        debian: forky
      - playbook: podman2
        debian: sid

    jobs:
      - 'xtesting-ci-tests-{debian}-{release}-{playbook}'

- builder:
    name: xtesting-ci-tests-ubuntu-docker
    builders:
      - shell: |
          set +x
          sudo docker run --privileged -v /home/opnfv/.docker/config.json:/root/.docker/config.json \
            -v /home/opnfv/.docker/config.json:/home/opnfv/.config/helm/registry/config.json \
            -v /home/opnfv/functest-kubernetes:/home/opnfv/functest-kubernetes \
            -v /data:/data -v /run:/run --network host ubuntu:{ubuntu} bash -c "\
          apt update && DEBIAN_FRONTEND=noninteractive apt \
            -o DPkg::Lock::Timeout=300 install git curl -y && \
          case {ubuntu} in \
          focal) \
            [ -z "$VIRTUAL_ENV" ] && DEBIAN_FRONTEND=noninteractive apt \
              -o DPkg::Lock::Timeout=300 install python3-pip -y && pip3 install ansible ;; \
          jammy) \
            [ -z "$VIRTUAL_ENV" ] && DEBIAN_FRONTEND=noninteractive apt \
              -o DPkg::Lock::Timeout=300 install python3-pip -y && pip3 install ansible ;; \
          *) \
            [ -z "$VIRTUAL_ENV" ] && DEBIAN_FRONTEND=noninteractive apt \
              -o DPkg::Lock::Timeout=300 install ansible -y ;; \
          esac && \
          rm -rf ~/.ansible/roles/collivier.xtesting && \
          case {release} in \
          stable) \
            ansible-galaxy install -f collivier.xtesting ;; \
          *) \
            ansible-galaxy install -f git+https://github.com/collivier/ansible-role-xtesting.git,{release} && \
            mv ~/.ansible/roles/ansible-role-xtesting ~/.ansible/roles/collivier.xtesting ;; \
          esac && \
          ansible-galaxy collection install community.kubernetes && \
          case {ubuntu} in \
          focal | oracular) \
            ansible-galaxy collection install -f community.docker ;; \
          *)  ;; \
          esac && \
          ansible-playbook -vvvv ~/.ansible/roles/collivier.xtesting/tests/{playbook}.yml"

- job-template:
    name: 'xtesting-ci-tests-{ubuntu}-{release}-{playbook}'
    triggers:
      - timed: '@weekly'
    parameters:
      - xtesting-ci-node:
          node: '{node}'
    properties:
      - build-blocker:
          use-build-blocker: true
          blocking-level: 'NODE'
          blocking-jobs:
            - '^xtesting-ci-tests-.*$'
    builders:
      - xtesting-ci-clean-docker
      - xtesting-ci-tests-ubuntu-docker:
          playbook: '{playbook}'
          release: '{release}'
          ubuntu: '{ubuntu}'

- project:
    name: xtesting-ci-tests-ubuntu
    <<: *playbook
    node: xtesting
    release:
      - stable
      - master
    ubuntu:
      - focal
      - jammy
      - noble
      - plucky
    exclude:
      - playbook: podman
        ubuntu: focal
      - playbook: podman
        ubuntu: noble
      - playbook: podman
        ubuntu: plucky
      - playbook: podman2
        ubuntu: focal
      - playbook: podman2
        ubuntu: noble
      - playbook: podman2
        ubuntu: plucky
    jobs:
      - 'xtesting-ci-tests-{ubuntu}-{release}-{playbook}'

- builder:
    name: xtesting-ci-tests-alpine-docker
    builders:
      - shell: |
          set +x
          sudo docker run --privileged -v /home/opnfv/.docker/config.json:/root/.docker/config.json \
            -v /home/opnfv/.docker/config.json:/home/opnfv/.config/helm/registry/config.json \
            -v /home/opnfv/functest-kubernetes:/home/opnfv/functest-kubernetes \
            -v /data:/data -v /run:/run --network host alpine:{alpine} ash -c "\
          case {alpine} in \
          *) \
            [ -z "$VIRTUAL_ENV" ] && apk add ansible git curl ;; \
          esac && \
          rm -rf ~/.ansible/roles/collivier.xtesting && \
          case {release} in \
          stable) \
            ansible-galaxy install -f collivier.xtesting ;; \
          *) \
            ansible-galaxy install -f git+https://github.com/collivier/ansible-role-xtesting.git,{release} && \
            mv ~/.ansible/roles/ansible-role-xtesting ~/.ansible/roles/collivier.xtesting ;; \
          esac && \
          ansible-galaxy collection install community.kubernetes && \
          case {alpine} in \
          "3.18") \
            [ -z "$VIRTUAL_ENV" ] && apk add ansible git && \
            ansible-galaxy collection install -f community.docker ;; \
          "3.19") \
            [ -z "$VIRTUAL_ENV" ] && apk add ansible git && \
            ansible-galaxy collection install -f community.docker ;; \
          "3.20") \
            [ -z "$VIRTUAL_ENV" ] && apk add ansible git && \
            ansible-galaxy collection install -f community.docker ;; \
          *) \
            [ -z "$VIRTUAL_ENV" ] && apk add ansible git ;; \
          esac && \
          ansible-playbook -vvvv ~/.ansible/roles/collivier.xtesting/tests/{playbook}.yml"

- job-template:
    name: 'xtesting-ci-tests-{alpine}-{release}-{playbook}'
    triggers:
      - timed: '@weekly'
    parameters:
      - xtesting-ci-node:
          node: '{node}'
    properties:
      - build-blocker:
          use-build-blocker: true
          blocking-level: 'NODE'
          blocking-jobs:
            - '^xtesting-ci-tests-.*$'
    builders:
      - xtesting-ci-clean-docker
      - xtesting-ci-tests-alpine-docker:
          playbook: '{playbook}'
          release: '{release}'
          alpine: '{alpine}'

- project:
    name: xtesting-ci-tests-alpine
    <<: *playbook
    node: xtesting
    release:
      - stable
      - master
    alpine:
      - 3.18
      - 3.19
      - '3.20'
      - 3.21
      - edge
    exclude:
      - playbook: podman
        alpine: 3.18
      - playbook: podman
        alpine: 3.19
      - playbook: podman
        alpine: '3.20'
      - playbook: podman
        alpine: 3.21
      - playbook: podman
        alpine: edge
      - playbook: podman2
        alpine: 3.18
      - playbook: podman2
        alpine: 3.19
      - playbook: podman2
        alpine: '3.20'
      - playbook: podman2
        alpine: 3.21
      - playbook: podman2
        alpine: edge
    jobs:
      - 'xtesting-ci-tests-{alpine}-{release}-{playbook}'

- builder:
    name: xtesting-ci-tests-rockylinux-docker
    builders:
      - shell: |
          set +x
          sudo docker run --privileged -v /home/opnfv/.docker/config.json:/root/.docker/config.json \
            -v /home/opnfv/.docker/config.json:/home/opnfv/.config/helm/registry/config.json \
            -v /home/opnfv/functest-kubernetes:/home/opnfv/functest-kubernetes \
            -v /data:/data -v /run:/run --network host \
            rockylinux:{rockylinux} bash -c "\
          yum install epel-release -y
          case {rockylinux} in \
          *) \
            [ -z "$VIRTUAL_ENV" ] && yum install --allowerasing ansible git curl-full -y ;; \
          esac && \
          rm -rf ~/.ansible/roles/collivier.xtesting && \
          case {release} in \
          stable) \
            ansible-galaxy install -f collivier.xtesting ;; \
          *) \
            ansible-galaxy install -f git+https://github.com/collivier/ansible-role-xtesting.git,{release} && \
            mv ~/.ansible/roles/ansible-role-xtesting ~/.ansible/roles/collivier.xtesting ;; \
          esac && \
          ansible-galaxy collection install community.kubernetes && \
          case {rockylinux} in \
          "9") \
            ansible-galaxy collection install -f community.docker ;; \
          *) ;; \
          esac && \
          ansible-playbook -vvvv ~/.ansible/roles/collivier.xtesting/tests/{playbook}.yml"

- job-template:
    name: 'xtesting-ci-tests-{rockylinux}-{release}-{playbook}'
    triggers:
      - timed: '@weekly'
    parameters:
      - xtesting-ci-node:
          node: '{node}'
    properties:
      - build-blocker:
          use-build-blocker: true
          blocking-level: 'NODE'
          blocking-jobs:
            - '^xtesting-ci-tests-.*$'
    builders:
      - xtesting-ci-clean-docker
      - xtesting-ci-tests-rockylinux-docker:
          playbook: '{playbook}'
          release: '{release}'
          rockylinux: '{rockylinux}'

- project:
    name: xtesting-ci-tests-rockylinux
    <<: *playbook
    node: xtesting
    release:
      - stable
      - master
    rockylinux:
      - 8
      - 9
    exclude:
      - playbook: podman
        rockylinux: 8
      - playbook: podman
        rockylinux: 9
      - playbook: podman2
        rockylinux: 8
      - playbook: podman2
        rockylinux: 9
    jobs:
      - 'xtesting-ci-tests-{rockylinux}-{release}-{playbook}'
