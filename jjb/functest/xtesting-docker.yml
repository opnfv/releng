---
##############################################
# job configuration for docker build and push
##############################################
- project:

    name: xtesting-docker

    project: functest-xtesting

    stream:
      - master:
          branch: '{stream}'
          disabled: false

    arch_tag:
      - 'amd64':
          slave_label: 'opnfv-build-ubuntu'
      - 'arm64':
          slave_label: 'opnfv-build-ubuntu-arm'

    # yamllint disable rule:key-duplicates
    image:
      - 'xtesting'

    # settings for jobs run in multijob phases
    build-job-settings: &build-job-settings
      current-parameters: false
      git-revision: true
      node-parameters: false
      predefined-parameters: |
        PUSH_IMAGE=$PUSH_IMAGE
        COMMIT_ID=$COMMIT_ID
        GERRIT_REFNAME=$GERRIT_REFNAME
        DOCKERFILE=$DOCKERFILE
      kill-phase-on: FAILURE
      abort-all-jobs: false

    manifest-job-settings: &manifest-job-settings
      current-parameters: false
      git-revision: true
      node-parameters: false
      predefined-parameters:
        GERRIT_REFNAME=$GERRIT_REFNAME
      kill-phase-on: FAILURE
      abort-all-jobs: false

    # yamllint enable rule:key-duplicates
    jobs:
      - "xtesting-docker-{stream}"
      - "{image}-docker-build-{arch_tag}-{stream}"
      - "{image}-docker-manifest-{stream}"

########################
# job templates
########################
- job-template:
    name: 'xtesting-docker-{stream}'

    project-type: multijob

    disabled: '{obj:disabled}'

    parameters:
      - job-parameters:
          project: '{project}'
          branch: '{branch}'
          slave_label: 'opnfv-build-ubuntu'
          arch_tag: 'amd64'

    properties:
      - throttle:
          max-per-node: 1
          option: 'project'

    scm:
      - git-scm

    triggers:
      - pollscm:
          cron: "*/30 * * * *"
      - gerrit-trigger-tag-created:
          project: '{project}'

    builders:
      - multijob:
          name: 'build xtesting images'
          execution-type: PARALLEL
          projects:
            - name: 'xtesting-docker-build-amd64-{stream}'
              <<: *build-job-settings
            - name: 'xtesting-docker-build-arm64-{stream}'
              <<: *build-job-settings
      - multijob:
          name: 'publish xtesting manifests'
          execution-type: PARALLEL
          projects:
            - name: 'xtesting-docker-manifest-{stream}'
              <<: *manifest-job-settings

    publishers:
      - 'functest-amd64-recipients'
      - 'functest-arm64-recipients'

- job-template:
    name: '{image}-docker-build-{arch_tag}-{stream}'
    disabled: '{obj:disabled}'
    parameters:
      - job-parameters:
          project: '{project}'
          branch: '{branch}'
          slave_label: '{slave_label}'
          arch_tag: '{arch_tag}'
    scm:
      - git-scm
    builders:
      - shell: |
          #!/bin/bash -ex
          case "{arch_tag}" in
          "arm64")
              sudo arch=arm64 bash ./build.sh ;;
          *)
              sudo arch=amd64 bash ./build.sh ;;
          esac
          exit $?

- job-template:
    name: '{image}-docker-manifest-{stream}'

    parameters:
      - project-parameter:
          project: '{project}'
          branch: '{branch}'
      - label:
          name: SLAVE_LABEL
          default: 'opnfv-build-ubuntu'
          description: 'Slave label on Jenkins'
      - string:
          name: PROJECT
          default: "{project}"
          description: "Project name used to enable job conditions"
      - string:
          name: GIT_BASE
          default: https://gerrit.opnfv.org/gerrit/$PROJECT
          description: 'Git URL to use on this Jenkins Slave'
      - string:
          name: REPO
          default: "opnfv"
          description: "Repository name for functest images"


    disabled: '{obj:disabled}'

    builders:
      - shell: |
          #!/bin/bash -ex
          case "{stream}" in
          "master")
              tag="latest" ;;
          *)
              tag="{stream}" ;;
          esac
          sudo manifest-tool push from-args \
              --platforms linux/amd64,linux/arm64 \
              --template $REPO/functest-{image}:ARCH-$tag \
              --target $REPO/functest-{image}:$tag
          exit $?
