---
- _functest-containers: &functest-containers
    name: 'functest-containers'
    repo: '{repo}'
    port: '{port}'
    container: '{container}'
    tag: '{tag}'

- _functest-params: &functest-params
    name: 'functest-params'
    tag:
      - latest:
          from:
          build_args:
          branch: master
          node: lf-pod4
          DASHBOARD_URL: http://172.30.12.83
          dependency: 3.14
      - zed:
          from:
          build_args:
          branch: stable/zed
          node: lf-pod4-2
          DASHBOARD_URL: http://172.30.12.85
          dependency: 3.14

- _functest-opnfv-functest-healthcheck-params: &functest-opnfv-functest-healthcheck-params
    name: 'functest-opnfv-functest-healthcheck-params'
    repo: 'opnfv'
    container: 'functest-healthcheck'
    port:
    tag:
      - latest:
          from:
          build_args:
          branch: master
          node: lf-pod4
          DASHBOARD_URL: http://172.30.12.83
          dependency: 3.14
      - zed:
          from:
          build_args:
          branch: stable/zed
          node: lf-pod4-2
          DASHBOARD_URL: http://172.30.12.85
          dependency: 3.14

- _functest-opnfv-functest-smoke-params: &functest-opnfv-functest-smoke-params
    name: 'functest-opnfv-functest-smoke-params'
    repo: 'opnfv'
    container: 'functest-smoke'
    port:
    tag:
      - latest:
          from:
          build_args:
          branch: master
          node: lf-pod4
          DASHBOARD_URL: http://172.30.12.83
          dependency: 3.14
      - zed:
          from:
          build_args:
          branch: stable/zed
          node: lf-pod4-2
          DASHBOARD_URL: http://172.30.12.85
          dependency: 3.14

- _functest-opnfv-functest-smoke-cntt-params: &functest-opnfv-functest-smoke-cntt-params
    name: 'functest-opnfv-functest-smoke-cntt-params'
    repo: 'opnfv'
    container: 'functest-smoke-cntt'
    port:
    tag:
      - latest:
          from:
          build_args:
          branch: master
          node: lf-pod4
          DASHBOARD_URL: http://172.30.12.83
          dependency: 3.14
      - zed:
          from:
          build_args:
          branch: stable/zed
          node: lf-pod4-2
          DASHBOARD_URL: http://172.30.12.85
          dependency: 3.14

- _functest-opnfv-functest-benchmarking-params: &functest-opnfv-functest-benchmarking-params
    name: 'functest-opnfv-functest-benchmarking-params'
    repo: 'opnfv'
    container: 'functest-benchmarking'
    port:
    tag:
      - latest:
          from:
          build_args:
          branch: master
          node: lf-pod4
          DASHBOARD_URL: http://172.30.12.83
          dependency: 3.14
      - zed:
          from:
          build_args:
          branch: stable/zed
          node: lf-pod4-2
          DASHBOARD_URL: http://172.30.12.85
          dependency: 3.14

- _functest-opnfv-functest-benchmarking-cntt-params: &functest-opnfv-functest-benchmarking-cntt-params
    name: 'functest-opnfv-functest-benchmarking-cntt-params'
    repo: 'opnfv'
    container: 'functest-benchmarking-cntt'
    port:
    tag:
      - latest:
          from:
          build_args:
          branch: master
          node: lf-pod4
          DASHBOARD_URL: http://172.30.12.83
          dependency: 3.14
      - zed:
          from:
          build_args:
          branch: stable/zed
          node: lf-pod4-2
          DASHBOARD_URL: http://172.30.12.85
          dependency: 3.14

- _functest-opnfv-functest-vnf-params: &functest-opnfv-functest-vnf-params
    name: 'functest-opnfv-functest-vnf-params'
    repo: 'opnfv'
    container: 'functest-vnf'
    port:
    tag:
      - latest:
          from:
          build_args:
          branch: master
          node: lf-pod4
          DASHBOARD_URL: http://172.30.12.83
          dependency: 3.14
      - zed:
          from:
          build_args:
          branch: stable/zed
          node: lf-pod4-2
          DASHBOARD_URL: http://172.30.12.85
          dependency: 3.14

- _functest-jobs: &functest-jobs
    name: 'functest-jobs'
    current-parameters: true

- parameter:
    name: functest-node
    parameters:
      - label:
          name: node
          default: '{node}'

- parameter:
    name: functest-build_tag
    parameters:
      - random-string:
          name: build_tag

- parameter:
    name: functest-EXTERNAL_NETWORK
    parameters:
      - string:
          name: EXTERNAL_NETWORK
          default: public

- parameter:
    name: functest-VOLUME_DEVICE_NAME
    parameters:
      - string:
          name: VOLUME_DEVICE_NAME
          default: sdb

- parameter:
    name: functest-IMAGE_PROPERTIES
    parameters:
      - string:
          name: IMAGE_PROPERTIES
          default: hw_scsi_model:virtio-scsi,hw_disk_bus:scsi

- _functest-run-containers: &functest-run-containers
    name: 'functest-run-containers'
    <<: *functest-containers
    privileged: '{privileged}'
    volumes: '{volumes}'
    env: '{env}'
    network: '{network}'
    uid: '{uid}'
    gid: '{gid}'
    published_ports: '{published_ports}'
    DASHBOARD_URL: '{DASHBOARD_URL}'

- builder:
    name: functest-pull-containers
    builders:
      - shell: |
          set +x
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          sudo docker pull $image

- builder:
    name: functest-run-containers
    builders:
      - shell: |
          set +x
          volumes=;
          if [ "{volumes}" != "None" ]; then
            for i in $(echo {volumes} | tr -d '[]' |sed "s/, / /g" ); \
              do volumes="-v $i $volumes"; done
          fi
          env=;
          if [ "{env}" != "None" ]; then
            for i in $(eval echo {env} | tr -d '[]' |sed "s/, / /g" ); \
              do env="-e $i $env"; done
          fi
          published_ports=;
          if [ "{published_ports}" != "None" ]; then
            for i in $(echo {published_ports} | tr -d '[]' |sed "s/, / /g" ); \
              do published_ports="-p $i $published_ports"; done
          fi
          [ ! -z "$WORKSPACE" ] && sudo rm -rf $WORKSPACE/results || true
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          sudo mkdir -p $WORKSPACE/results
          sudo chown {uid}:{gid} $WORKSPACE/results
          sudo docker run --rm \
            --privileged={privileged} \
            --network={network} \
            $volumes \
            $env \
            $published_ports \
            -e S3_ENDPOINT_URL=https://storage.googleapis.com \
            -e S3_DST_URL=s3://artifacts.opnfv.org/functest/$BUILD_TAG/$JOB_NAME-$BUILD_ID \
            -e HTTP_DST_URL=http://artifacts.opnfv.org/functest/$BUILD_TAG/$JOB_NAME-$BUILD_ID \
            -v /home/opnfv/functest/.boto:/etc/boto.cfg \
            -v /home/opnfv/functest/aws_config:/home/xtesting/.aws/config \
            -e TEST_DB_URL=http://testresults.opnfv.org/test/api/v1/results \
            -e TEST_DB_EXT_URL=http://testresults.opnfv.org/test/api/v1/results \
            -e NODE_NAME=$node \
            -e BUILD_TAG=$BUILD_TAG \
            -v $WORKSPACE/../$JOB_NAME/results:/var/lib/xtesting/results \
            -e DASHBOARD_URL={DASHBOARD_URL} \
            $image run_tests -t {test} -p -r

- builder:
    name: functest-remove-images
    builders:
      - shell: |
          set +x
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          sudo docker rmi $image || true

- job-template:
    name: 'functest-opnfv-functest-healthcheck-{tag}-pull'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-pull-containers:
          <<: *functest-containers

- project:
    name: 'functest-opnfv-functest-healthcheck-pull'
    <<: *functest-opnfv-functest-healthcheck-params
    jobs:
      - 'functest-opnfv-functest-healthcheck-{tag}-pull'

- job-template:
    name: 'functest-opnfv-functest-healthcheck-{tag}-rmi'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-remove-images:
          <<: *functest-containers

- project:
    name: 'functest-opnfv-functest-healthcheck-rmi'
    <<: *functest-opnfv-functest-healthcheck-params
    jobs:
      - 'functest-opnfv-functest-healthcheck-{tag}-rmi'

- job-template:
    name: 'functest-opnfv-functest-smoke-{tag}-pull'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-pull-containers:
          <<: *functest-containers

- project:
    name: 'functest-opnfv-functest-smoke-pull'
    <<: *functest-opnfv-functest-smoke-params
    jobs:
      - 'functest-opnfv-functest-smoke-{tag}-pull'

- job-template:
    name: 'functest-opnfv-functest-smoke-{tag}-rmi'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-remove-images:
          <<: *functest-containers

- project:
    name: 'functest-opnfv-functest-smoke-rmi'
    <<: *functest-opnfv-functest-smoke-params
    jobs:
      - 'functest-opnfv-functest-smoke-{tag}-rmi'

- job-template:
    name: 'functest-opnfv-functest-smoke-cntt-{tag}-pull'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-pull-containers:
          <<: *functest-containers

- project:
    name: 'functest-opnfv-functest-smoke-cntt-pull'
    <<: *functest-opnfv-functest-smoke-cntt-params
    jobs:
      - 'functest-opnfv-functest-smoke-cntt-{tag}-pull'

- job-template:
    name: 'functest-opnfv-functest-smoke-cntt-{tag}-rmi'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-remove-images:
          <<: *functest-containers

- project:
    name: 'functest-opnfv-functest-smoke-cntt-rmi'
    <<: *functest-opnfv-functest-smoke-cntt-params
    jobs:
      - 'functest-opnfv-functest-smoke-cntt-{tag}-rmi'

- job-template:
    name: 'functest-opnfv-functest-benchmarking-{tag}-pull'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-pull-containers:
          <<: *functest-containers

- project:
    name: 'functest-opnfv-functest-benchmarking-pull'
    <<: *functest-opnfv-functest-benchmarking-params
    jobs:
      - 'functest-opnfv-functest-benchmarking-{tag}-pull'

- job-template:
    name: 'functest-opnfv-functest-benchmarking-{tag}-rmi'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-remove-images:
          <<: *functest-containers

- project:
    name: 'functest-opnfv-functest-benchmarking-rmi'
    <<: *functest-opnfv-functest-benchmarking-params
    jobs:
      - 'functest-opnfv-functest-benchmarking-{tag}-rmi'

- job-template:
    name: 'functest-opnfv-functest-benchmarking-cntt-{tag}-pull'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-pull-containers:
          <<: *functest-containers

- project:
    name: 'functest-opnfv-functest-benchmarking-cntt-pull'
    <<: *functest-opnfv-functest-benchmarking-cntt-params
    jobs:
      - 'functest-opnfv-functest-benchmarking-cntt-{tag}-pull'

- job-template:
    name: 'functest-opnfv-functest-benchmarking-cntt-{tag}-rmi'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-remove-images:
          <<: *functest-containers

- project:
    name: 'functest-opnfv-functest-benchmarking-cntt-rmi'
    <<: *functest-opnfv-functest-benchmarking-cntt-params
    jobs:
      - 'functest-opnfv-functest-benchmarking-cntt-{tag}-rmi'

- job-template:
    name: 'functest-opnfv-functest-vnf-{tag}-pull'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-pull-containers:
          <<: *functest-containers

- project:
    name: 'functest-opnfv-functest-vnf-pull'
    <<: *functest-opnfv-functest-vnf-params
    jobs:
      - 'functest-opnfv-functest-vnf-{tag}-pull'

- job-template:
    name: 'functest-opnfv-functest-vnf-{tag}-rmi'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-remove-images:
          <<: *functest-containers

- project:
    name: 'functest-opnfv-functest-vnf-rmi'
    <<: *functest-opnfv-functest-vnf-params
    jobs:
      - 'functest-opnfv-functest-vnf-{tag}-rmi'

- job-template:
    name: 'functest-opnfv-functest-healthcheck-{tag}-{test}-run'
    parameters:
      - functest-node:
          node: '{node}'
      - functest-build_tag:
          build_tag: ''
      - functest-EXTERNAL_NETWORK:
          EXTERNAL_NETWORK: public
      - functest-VOLUME_DEVICE_NAME:
          VOLUME_DEVICE_NAME: sdb
      - functest-IMAGE_PROPERTIES:
          IMAGE_PROPERTIES: hw_scsi_model:virtio-scsi,hw_disk_bus:scsi
    builders:
      - functest-run-containers:
          <<: *functest-run-containers
          test: '{test}'

- project:
    name: 'functest-opnfv-functest-healthcheck'
    <<: *functest-opnfv-functest-healthcheck-params
    volumes:
      - /home/opnfv/functest/openstack.creds:/home/opnfv/functest/conf/env_file
      - /home/opnfv/functest/images:/home/opnfv/functest/images
    env:
      - EXTERNAL_NETWORK=$EXTERNAL_NETWORK
      - VOLUME_DEVICE_NAME=$VOLUME_DEVICE_NAME
      - IMAGE_PROPERTIES=$IMAGE_PROPERTIES
    published_ports:
    container: 'functest-healthcheck'
    test:
      - connection_check
      - tenantnetwork1
      - tenantnetwork2
      - vmready1
      - vmready2
      - singlevm1
      - singlevm2
      - vping_ssh
      - vping_userdata
      - cinder_test
      - tempest_smoke
      - tempest_horizon
    privileged: 'false'
    network: bridge
    uid: 1000
    gid: 1000
    jobs:
      - 'functest-opnfv-functest-healthcheck-{tag}-{test}-run'

- job-template:
    name: 'functest-opnfv-functest-smoke-{tag}-{test}-run'
    parameters:
      - functest-node:
          node: '{node}'
      - functest-build_tag:
          build_tag: ''
      - functest-EXTERNAL_NETWORK:
          EXTERNAL_NETWORK: public
      - functest-VOLUME_DEVICE_NAME:
          VOLUME_DEVICE_NAME: sdb
      - functest-IMAGE_PROPERTIES:
          IMAGE_PROPERTIES: hw_scsi_model:virtio-scsi,hw_disk_bus:scsi
    builders:
      - functest-run-containers:
          <<: *functest-run-containers
          test: '{test}'

- project:
    name: 'functest-opnfv-functest-smoke'
    <<: *functest-opnfv-functest-smoke-params
    volumes:
      - /home/opnfv/functest/openstack.creds:/home/opnfv/functest/conf/env_file
      - /home/opnfv/functest/images:/home/opnfv/functest/images
    env:
      - EXTERNAL_NETWORK=$EXTERNAL_NETWORK
      - VOLUME_DEVICE_NAME=$VOLUME_DEVICE_NAME
      - IMAGE_PROPERTIES=$IMAGE_PROPERTIES
    published_ports:
    container: 'functest-smoke'
    test:
      - tempest_neutron
      - tempest_cinder
      - tempest_keystone
      - tempest_heat
      - tempest_telemetry
      - rally_sanity
      - refstack_compute
      - refstack_object
      - refstack_platform
      - tempest_full
      - tempest_scenario
      - tempest_slow
      - patrole_admin
      - patrole_member
      - patrole_reader
      - tempest_barbican
      - tempest_octavia
      - tempest_cyborg
    privileged: 'false'
    network: bridge
    uid: 1000
    gid: 1000
    jobs:
      - 'functest-opnfv-functest-smoke-{tag}-{test}-run'

- job-template:
    name: 'functest-opnfv-functest-smoke-cntt-{tag}-{test}-run'
    parameters:
      - functest-node:
          node: '{node}'
      - functest-build_tag:
          build_tag: ''
      - functest-EXTERNAL_NETWORK:
          EXTERNAL_NETWORK: public
      - functest-VOLUME_DEVICE_NAME:
          VOLUME_DEVICE_NAME: sdb
      - functest-IMAGE_PROPERTIES:
          IMAGE_PROPERTIES: hw_scsi_model:virtio-scsi,hw_disk_bus:scsi
    builders:
      - functest-run-containers:
          <<: *functest-run-containers
          test: '{test}'

- project:
    name: 'functest-opnfv-functest-smoke-cntt'
    <<: *functest-opnfv-functest-smoke-cntt-params
    volumes:
      - /home/opnfv/functest/openstack.creds:/home/opnfv/functest/conf/env_file
      - /home/opnfv/functest/images:/home/opnfv/functest/images
    env:
      - EXTERNAL_NETWORK=$EXTERNAL_NETWORK
      - VOLUME_DEVICE_NAME=$VOLUME_DEVICE_NAME
      - IMAGE_PROPERTIES=$IMAGE_PROPERTIES
    published_ports:
    container: 'functest-smoke-cntt'
    test:
      - tempest_neutron_cntt
      - tempest_cinder_cntt
      - tempest_keystone_cntt
      - tempest_heat_cntt
      - rally_sanity_cntt
      - tempest_full_cntt
      - tempest_scenario_cntt
      - tempest_slow_cntt
    privileged: 'false'
    network: bridge
    uid: 1000
    gid: 1000
    jobs:
      - 'functest-opnfv-functest-smoke-cntt-{tag}-{test}-run'

- job-template:
    name: 'functest-opnfv-functest-benchmarking-{tag}-{test}-run'
    parameters:
      - functest-node:
          node: '{node}'
      - functest-build_tag:
          build_tag: ''
      - functest-EXTERNAL_NETWORK:
          EXTERNAL_NETWORK: public
      - functest-VOLUME_DEVICE_NAME:
          VOLUME_DEVICE_NAME: sdb
      - functest-IMAGE_PROPERTIES:
          IMAGE_PROPERTIES: hw_scsi_model:virtio-scsi,hw_disk_bus:scsi
    builders:
      - functest-run-containers:
          <<: *functest-run-containers
          test: '{test}'

- project:
    name: 'functest-opnfv-functest-benchmarking'
    <<: *functest-opnfv-functest-benchmarking-params
    volumes:
      - /home/opnfv/functest/openstack.creds:/home/opnfv/functest/conf/env_file
      - /home/opnfv/functest/images:/home/opnfv/functest/images
    env:
      - EXTERNAL_NETWORK=$EXTERNAL_NETWORK
      - VOLUME_DEVICE_NAME=$VOLUME_DEVICE_NAME
      - IMAGE_PROPERTIES=$IMAGE_PROPERTIES
    published_ports:
    container: 'functest-benchmarking'
    test:
      - rally_full
      - rally_jobs
      - vmtp
      - shaker
    privileged: 'false'
    network: bridge
    uid: 1000
    gid: 1000
    jobs:
      - 'functest-opnfv-functest-benchmarking-{tag}-{test}-run'

- job-template:
    name: 'functest-opnfv-functest-benchmarking-cntt-{tag}-{test}-run'
    parameters:
      - functest-node:
          node: '{node}'
      - functest-build_tag:
          build_tag: ''
      - functest-EXTERNAL_NETWORK:
          EXTERNAL_NETWORK: public
      - functest-VOLUME_DEVICE_NAME:
          VOLUME_DEVICE_NAME: sdb
      - functest-IMAGE_PROPERTIES:
          IMAGE_PROPERTIES: hw_scsi_model:virtio-scsi,hw_disk_bus:scsi
    builders:
      - functest-run-containers:
          <<: *functest-run-containers
          test: '{test}'

- project:
    name: 'functest-opnfv-functest-benchmarking-cntt'
    <<: *functest-opnfv-functest-benchmarking-cntt-params
    volumes:
      - /home/opnfv/functest/openstack.creds:/home/opnfv/functest/conf/env_file
      - /home/opnfv/functest/images:/home/opnfv/functest/images
    env:
      - EXTERNAL_NETWORK=$EXTERNAL_NETWORK
      - VOLUME_DEVICE_NAME=$VOLUME_DEVICE_NAME
      - IMAGE_PROPERTIES=$IMAGE_PROPERTIES
    published_ports:
    container: 'functest-benchmarking-cntt'
    test:
      - rally_full_cntt
      - rally_jobs_cntt
    privileged: 'false'
    network: bridge
    uid: 1000
    gid: 1000
    jobs:
      - 'functest-opnfv-functest-benchmarking-cntt-{tag}-{test}-run'

- job-template:
    name: 'functest-opnfv-functest-vnf-{tag}-{test}-run'
    parameters:
      - functest-node:
          node: '{node}'
      - functest-build_tag:
          build_tag: ''
      - functest-EXTERNAL_NETWORK:
          EXTERNAL_NETWORK: public
      - functest-VOLUME_DEVICE_NAME:
          VOLUME_DEVICE_NAME: sdb
      - functest-IMAGE_PROPERTIES:
          IMAGE_PROPERTIES: hw_scsi_model:virtio-scsi,hw_disk_bus:scsi
    builders:
      - functest-run-containers:
          <<: *functest-run-containers
          test: '{test}'

- project:
    name: 'functest-opnfv-functest-vnf'
    <<: *functest-opnfv-functest-vnf-params
    volumes:
      - /home/opnfv/functest/openstack.creds:/home/opnfv/functest/conf/env_file
      - /home/opnfv/functest/images:/home/opnfv/functest/images
    env:
      - EXTERNAL_NETWORK=$EXTERNAL_NETWORK
      - VOLUME_DEVICE_NAME=$VOLUME_DEVICE_NAME
      - IMAGE_PROPERTIES=$IMAGE_PROPERTIES
    published_ports:
    container: 'functest-vnf'
    test:
      - cloudify
      - cloudify_ims
      - heat_ims
      - vyos_vrouter
    privileged: 'false'
    network: bridge
    uid: 1000
    gid: 1000
    jobs:
      - 'functest-opnfv-functest-vnf-{tag}-{test}-run'

- builder:
    name: functest-zip
    builders:
      - shell: |
          set +x
          volumes=;
          if [ "{volumes}" != "None" ]; then
            for i in $(echo {volumes} | tr -d '[]' |sed "s/, / /g" ); \
              do volumes="-v $i $volumes"; done
          fi
          env=;
          if [ "{env}" != "None" ]; then
            for i in $(eval echo {env} | tr -d '[]' |sed "s/, / /g" ); \
              do env="-e $i $env"; done
          fi
          published_ports=;
          if [ "{published_ports}" != "None" ]; then
            for i in $(echo {published_ports} | tr -d '[]' |sed "s/, / /g" ); \
              do published_ports="-p $i $published_ports"; done
          fi
          [ ! -z "$WORKSPACE" ] && sudo rm -rf $WORKSPACE/results || true
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          sudo mkdir -p $WORKSPACE/results
          sudo chown {uid}:{gid} $WORKSPACE/results
          sudo docker run --rm \
            --privileged={privileged} \
            --network={network} \
            $volumes \
            $env \
            $published_ports \
            -e S3_ENDPOINT_URL=https://storage.googleapis.com \
            -e S3_DST_URL=s3://artifacts.opnfv.org/functest \
            -e HTTP_DST_URL=http://artifacts.opnfv.org/functest \
            -v /home/opnfv/functest/.boto:/etc/boto.cfg \
            -v /home/opnfv/functest/aws_config:/home/xtesting/.aws/config \
            -e TEST_DB_URL=http://testresults.opnfv.org/test/api/v1/results \
            -e TEST_DB_EXT_URL=http://testresults.opnfv.org/test/api/v1/results \
            -e NODE_NAME=$node \
            -e BUILD_TAG=$BUILD_TAG \
            -v $WORKSPACE/../$JOB_NAME/results:/var/lib/xtesting/results \
            -e DASHBOARD_URL={DASHBOARD_URL} \
            $image zip_campaign

- job-template:
    name: 'functest-{tag}-zip'
    parameters:
      - functest-node:
          node: '{node}'
      - functest-build_tag:
          build_tag: ''
      - functest-EXTERNAL_NETWORK:
          EXTERNAL_NETWORK: public
      - functest-VOLUME_DEVICE_NAME:
          VOLUME_DEVICE_NAME: sdb
      - functest-IMAGE_PROPERTIES:
          IMAGE_PROPERTIES: hw_scsi_model:virtio-scsi,hw_disk_bus:scsi
    builders:
      - functest-zip:
          <<: *functest-run-containers

- project:
    name: 'functest-zip'
    <<: *functest-opnfv-functest-healthcheck-params
    volumes:
      - /home/opnfv/functest/openstack.creds:/home/opnfv/functest/conf/env_file
      - /home/opnfv/functest/images:/home/opnfv/functest/images
    env:
      - EXTERNAL_NETWORK=$EXTERNAL_NETWORK
      - VOLUME_DEVICE_NAME=$VOLUME_DEVICE_NAME
      - IMAGE_PROPERTIES=$IMAGE_PROPERTIES
    published_ports:
    container: 'functest-healthcheck'
    privileged: 'false'
    network: bridge
    uid: 1000
    gid: 1000
    jobs:
      - 'functest-{tag}-zip'

- job-template:
    name: 'functest-{tag}-daily'
    project-type: multijob
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
      - functest-build_tag:
          build_tag: ''
      - functest-EXTERNAL_NETWORK:
          EXTERNAL_NETWORK: public
      - functest-VOLUME_DEVICE_NAME:
          VOLUME_DEVICE_NAME: sdb
      - functest-IMAGE_PROPERTIES:
          IMAGE_PROPERTIES: hw_scsi_model:virtio-scsi,hw_disk_bus:scsi
    # PyYAML and yamllint differ here
    # see https://github.com/yaml/pyyaml/issues/234
    # yamllint disable rule:indentation
    properties:
      - build-blocker:
          blocking-jobs:
          - ^functest-(pi-)*{tag}-(daily|docker|review)$
    # yamllint enable rule:indentation
    builders:
      - multijob:
          name: remove former images
          projects:
            - name: 'functest-opnfv-functest-healthcheck-{tag}-rmi'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-rmi'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-rmi'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-{tag}-rmi'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-cntt-{tag}-rmi'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-vnf-{tag}-rmi'
              <<: *functest-jobs
      - multijob:
          name: pull containers
          projects:
            - name: 'functest-opnfv-functest-healthcheck-{tag}-pull'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-pull'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-pull'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-{tag}-pull'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-cntt-{tag}-pull'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-vnf-{tag}-pull'
              <<: *functest-jobs
      - multijob:
          name: opnfv/functest-healthcheck:{tag}
          projects:
            - name: 'functest-opnfv-functest-healthcheck-{tag}-connection_check-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-tenantnetwork1-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-tenantnetwork2-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-vmready1-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-vmready2-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-singlevm1-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-singlevm2-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-vping_ssh-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-vping_userdata-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-cinder_test-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-tempest_smoke-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-tempest_horizon-run'
              <<: *functest-jobs
      - multijob:
          name: opnfv/functest-smoke:{tag}
          projects:
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_neutron-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_cinder-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_keystone-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_heat-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_telemetry-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-rally_sanity-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-refstack_compute-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-refstack_object-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-refstack_platform-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_full-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_scenario-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_slow-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-patrole_admin-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-patrole_member-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-patrole_reader-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_barbican-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_octavia-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_cyborg-run'
              <<: *functest-jobs
      - multijob:
          name: opnfv/functest-smoke-cntt:{tag}
          projects:
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-tempest_neutron_cntt-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-tempest_cinder_cntt-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-tempest_keystone_cntt-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-tempest_heat_cntt-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-rally_sanity_cntt-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-tempest_full_cntt-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-tempest_scenario_cntt-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-tempest_slow_cntt-run'
              <<: *functest-jobs
      - multijob:
          name: opnfv/functest-benchmarking:{tag}
          projects:
            - name: 'functest-opnfv-functest-benchmarking-{tag}-rally_full-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-{tag}-rally_jobs-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-{tag}-vmtp-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-{tag}-shaker-run'
              <<: *functest-jobs
      - multijob:
          name: opnfv/functest-benchmarking-cntt:{tag}
          projects:
            - name: 'functest-opnfv-functest-benchmarking-cntt-{tag}-rally_full_cntt-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-cntt-{tag}-rally_jobs_cntt-run'
              <<: *functest-jobs
      - multijob:
          name: opnfv/functest-vnf:{tag}
          projects:
            - name: 'functest-opnfv-functest-vnf-{tag}-cloudify-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-vnf-{tag}-cloudify_ims-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-vnf-{tag}-heat_ims-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-vnf-{tag}-vyos_vrouter-run'
              <<: *functest-jobs
      - multijob:
          name: dump all campaign data
          projects:
            - name: 'functest-{tag}-zip'
              <<: *functest-jobs
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-daily'
    <<: *functest-params
    jobs:
      - 'functest-{tag}-daily'

- view:
    name: functest
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: ^functest-[a-z0-9.]+-daily$

- _functest-build-containers: &functest-build-containers
    name: 'functest-build-containers'
    <<: *functest-containers
    ref_arg: '{ref_arg}'
    path: '{path}'
    build_args: '{build_args}'
    from: '{from}'

- builder:
    name: functest-build-containers
    builders:
      - shell: |
          set +x
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          build_args=""
          if [ "{build_args}" != "None" ]; then
            for i in $(echo {build_args} | tr -d '[]' |sed "s/, / /g" ); \
              do build_args="--build-arg $i $build_args"; done
          fi
          if [ "{ref_arg}" != "None" ]; then
            build_args="$build_args --build-arg {ref_arg}={ref}"
          fi
          cd {path}
          if [ "{from}" != "None" ]; then
              sed -i {from} Dockerfile
          fi
          sudo docker build $build_args \
            --pull=false --no-cache --force-rm=true \
            -t $image .

- scm:
    name: functest-scm
    scm:
      - git:
          url: 'https://gerrit.opnfv.org/gerrit/functest'
          refspec: '+refs/heads/*:refs/remotes/origin/* +refs/changes/*:refs/changes/*'
          branches:
            - '{ref}'

- _functest-dep: &functest-dep
    name: 'functest-containers'
    repo: '{repo}'
    container: '{container}'
    port: '{port}'
    tag: '{dependency}'

- job-template:
    name: 'functest-{tag}-dep-pull'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-pull-containers:
          <<: *functest-dep

- _functest-dep-params: &functest-dep-params
    name: 'functest-dep-params'
    repo: '_'
    container: 'alpine'
    port:
    tag:
      - latest:
          dependency: 3.14
      - zed:
          dependency: 3.14

- project:
    name: 'functest-dep-pull'
    <<: *functest-dep-params
    jobs:
      - 'functest-{tag}-dep-pull'

- job-template:
    name: 'functest-{tag}-dep-rmi'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-remove-images:
          <<: *functest-dep

- project:
    name: 'functest-dep-rmi'
    <<: *functest-dep-params
    jobs:
      - 'functest-{tag}-dep-rmi'

- builder:
    name: functest-tox
    builders:
      - shell: |
          set +x
          sudo apt-get -o DPkg::Lock::Timeout=300 update && \
          sudo DEBIAN_FRONTEND=noninteractive apt-get \
            -o DPkg::Lock::Timeout=300 dist-upgrade -y
          sudo DEBIAN_FRONTEND=noninteractive \
          apt-get -o DPkg::Lock::Timeout=300 install software-properties-common gpg -y
          sudo add-apt-repository -y ppa:deadsnakes/ppa
          sudo apt-get -o DPkg::Lock::Timeout=300 update && \
          sudo DEBIAN_FRONTEND=noninteractive apt-get \
            -o DPkg::Lock::Timeout=300 install \
            libxml2-dev libxslt-dev libffi-dev libjpeg-dev \
            python3.12 python3.12-dev \
            python3.11 python3.11-dev \
            python3.10 python3.10-dev \
            python3.9 python3.9-dev python3.9-distutils \
            python3.8 python3.8-dev python3.8-distutils \
            python3-pip enchant-2 -y
          sudo pip3 install tox

          tox

- job-template:
    name: 'functest-{tag}-tox'
    scm:
      - functest-scm:
          ref: $GERRIT_REFSPEC
    triggers:
      - functest-patchset-created:
          branch: '{branch}'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-tox:

- project:
    name: functest-tox
    <<: *functest-params
    jobs:
      - 'functest-{tag}-tox'

- job-template:
    name: 'functest-opnfv-functest-core-{tag}-gate'
    parameters:
      - functest-node:
          node: '{node}'
    scm:
      - functest-scm:
          ref: $GERRIT_REFSPEC
    builders:
      - functest-build-containers:
          <<: *functest-build-containers
          ref: $GERRIT_REFSPEC
          build_args: '{build_args}'

- project:
    name: functest-opnfv-functest-core-gate
    <<: *functest-params
    repo: opnfv
    port:
    container: functest-core
    ref_arg: BRANCH
    path: docker/core
    jobs:
      - 'functest-opnfv-functest-core-{tag}-gate'

- job-template:
    name: 'functest-opnfv-functest-healthcheck-{tag}-gate'
    parameters:
      - functest-node:
          node: '{node}'
    scm:
      - functest-scm:
          ref: $GERRIT_REFSPEC
    builders:
      - functest-build-containers:
          <<: *functest-build-containers
          ref: $GERRIT_REFSPEC
          build_args: '{build_args}'

- project:
    name: functest-opnfv-functest-healthcheck-gate
    <<: *functest-params
    repo: opnfv
    port:
    container: functest-healthcheck
    ref_arg: BRANCH
    path: docker/healthcheck
    jobs:
      - 'functest-opnfv-functest-healthcheck-{tag}-gate'

- job-template:
    name: 'functest-opnfv-functest-smoke-{tag}-gate'
    parameters:
      - functest-node:
          node: '{node}'
    scm:
      - functest-scm:
          ref: $GERRIT_REFSPEC
    builders:
      - functest-build-containers:
          <<: *functest-build-containers
          ref: $GERRIT_REFSPEC
          build_args: '{build_args}'

- project:
    name: functest-opnfv-functest-smoke-gate
    <<: *functest-params
    repo: opnfv
    port:
    container: functest-smoke
    ref_arg: BRANCH
    path: docker/smoke
    jobs:
      - 'functest-opnfv-functest-smoke-{tag}-gate'

- job-template:
    name: 'functest-opnfv-functest-benchmarking-{tag}-gate'
    parameters:
      - functest-node:
          node: '{node}'
    scm:
      - functest-scm:
          ref: $GERRIT_REFSPEC
    builders:
      - functest-build-containers:
          <<: *functest-build-containers
          ref: $GERRIT_REFSPEC
          build_args: '{build_args}'

- project:
    name: functest-opnfv-functest-benchmarking-gate
    <<: *functest-params
    repo: opnfv
    port:
    container: functest-benchmarking
    ref_arg: BRANCH
    path: docker/benchmarking
    jobs:
      - 'functest-opnfv-functest-benchmarking-{tag}-gate'

- job-template:
    name: 'functest-opnfv-functest-vnf-{tag}-gate'
    parameters:
      - functest-node:
          node: '{node}'
    scm:
      - functest-scm:
          ref: $GERRIT_REFSPEC
    builders:
      - functest-build-containers:
          <<: *functest-build-containers
          ref: $GERRIT_REFSPEC
          build_args: '{build_args}'

- project:
    name: functest-opnfv-functest-vnf-gate
    <<: *functest-params
    repo: opnfv
    port:
    container: functest-vnf
    ref_arg: BRANCH
    path: docker/vnf
    jobs:
      - 'functest-opnfv-functest-vnf-{tag}-gate'

- job-template:
    name: 'functest-opnfv-functest-smoke-cntt-{tag}-gate'
    parameters:
      - functest-node:
          node: '{node}'
    scm:
      - functest-scm:
          ref: $GERRIT_REFSPEC
    builders:
      - functest-build-containers:
          <<: *functest-build-containers
          ref: $GERRIT_REFSPEC
          build_args: '{build_args}'

- project:
    name: functest-opnfv-functest-smoke-cntt-gate
    <<: *functest-params
    repo: opnfv
    port:
    container: functest-smoke-cntt
    ref_arg: BRANCH
    path: docker/smoke-cntt
    jobs:
      - 'functest-opnfv-functest-smoke-cntt-{tag}-gate'

- job-template:
    name: 'functest-opnfv-functest-benchmarking-cntt-{tag}-gate'
    parameters:
      - functest-node:
          node: '{node}'
    scm:
      - functest-scm:
          ref: $GERRIT_REFSPEC
    builders:
      - functest-build-containers:
          <<: *functest-build-containers
          ref: $GERRIT_REFSPEC
          build_args: '{build_args}'

- project:
    name: functest-opnfv-functest-benchmarking-cntt-gate
    <<: *functest-params
    repo: opnfv
    port:
    container: functest-benchmarking-cntt
    ref_arg: BRANCH
    path: docker/benchmarking-cntt
    jobs:
      - 'functest-opnfv-functest-benchmarking-cntt-{tag}-gate'

- trigger:
    name: functest-patchset-created
    triggers:
      - gerrit:
          trigger-on:
            - patchset-created-event
            - comment-added-contains-event:
                comment-contains-value: 'recheck'
            - comment-added-contains-event:
                comment-contains-value: 'reverify'
          projects:
            - project-compare-type: 'ANT'
              project-pattern: 'functest'
              branches:
                - branch-compare-type: 'ANT'
                  branch-pattern: '**/{branch}'

- job-template:
    name: 'functest-{tag}-review'
    project-type: multijob
    triggers:
      - functest-patchset-created:
          branch: '{branch}'
    parameters:
      - functest-node:
          node: '{node}'
      - functest-build_tag:
          build_tag: ''
      - functest-EXTERNAL_NETWORK:
          EXTERNAL_NETWORK: public
      - functest-VOLUME_DEVICE_NAME:
          VOLUME_DEVICE_NAME: sdb
      - functest-IMAGE_PROPERTIES:
          IMAGE_PROPERTIES: hw_scsi_model:virtio-scsi,hw_disk_bus:scsi
    # PyYAML and yamllint differ here
    # see https://github.com/yaml/pyyaml/issues/234
    # yamllint disable rule:indentation
    properties:
      - build-blocker:
          blocking-jobs:
          - ^functest-(pi-)*{tag}-(daily|docker|review)$
    # yamllint enable rule:indentation
    builders:
      - multijob:
          name: remove former images
          projects:
            - name: 'functest-opnfv-functest-healthcheck-{tag}-rmi'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-rmi'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-rmi'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-{tag}-rmi'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-cntt-{tag}-rmi'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-vnf-{tag}-rmi'
              <<: *functest-jobs
      - multijob:
          name: remove dependency
          projects:
            - name: 'functest-{tag}-dep-rmi'
              <<: *functest-jobs
      - multijob:
          name: pull dependency
          projects:
            - name: 'functest-{tag}-dep-pull'
              <<: *functest-jobs
      - multijob:
          name: build opnfv/functest-core
          projects:
            - name: 'functest-opnfv-functest-core-{tag}-gate'
              <<: *functest-jobs
      - multijob:
          name: build containers
          projects:
            - name: 'functest-opnfv-functest-healthcheck-{tag}-gate'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-gate'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-{tag}-gate'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-vnf-{tag}-gate'
              <<: *functest-jobs
      - multijob:
          name: build cntt containers
          projects:
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-gate'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-cntt-{tag}-gate'
              <<: *functest-jobs
      - multijob:
          name: opnfv/functest-healthcheck:{tag}
          projects:
            - name: 'functest-opnfv-functest-healthcheck-{tag}-connection_check-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-tenantnetwork1-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-tenantnetwork2-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-vmready1-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-vmready2-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-singlevm1-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-singlevm2-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-vping_ssh-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-vping_userdata-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-cinder_test-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-tempest_smoke-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-healthcheck-{tag}-tempest_horizon-run'
              <<: *functest-jobs
      - multijob:
          name: opnfv/functest-smoke:{tag}
          projects:
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_neutron-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_cinder-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_keystone-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_heat-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_telemetry-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-rally_sanity-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-refstack_compute-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-refstack_object-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-refstack_platform-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_full-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_scenario-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_slow-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-patrole_admin-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-patrole_member-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-patrole_reader-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_barbican-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_octavia-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-tempest_cyborg-run'
              <<: *functest-jobs
      - multijob:
          name: opnfv/functest-smoke-cntt:{tag}
          projects:
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-tempest_neutron_cntt-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-tempest_cinder_cntt-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-tempest_keystone_cntt-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-tempest_heat_cntt-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-rally_sanity_cntt-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-tempest_full_cntt-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-tempest_scenario_cntt-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-tempest_slow_cntt-run'
              <<: *functest-jobs
      - multijob:
          name: opnfv/functest-benchmarking:{tag}
          projects:
            - name: 'functest-opnfv-functest-benchmarking-{tag}-rally_full-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-{tag}-rally_jobs-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-{tag}-vmtp-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-{tag}-shaker-run'
              <<: *functest-jobs
      - multijob:
          name: opnfv/functest-benchmarking-cntt:{tag}
          projects:
            - name: 'functest-opnfv-functest-benchmarking-cntt-{tag}-rally_full_cntt-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-cntt-{tag}-rally_jobs_cntt-run'
              <<: *functest-jobs
      - multijob:
          name: opnfv/functest-vnf:{tag}
          projects:
            - name: 'functest-opnfv-functest-vnf-{tag}-cloudify-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-vnf-{tag}-cloudify_ims-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-vnf-{tag}-heat_ims-run'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-vnf-{tag}-vyos_vrouter-run'
              <<: *functest-jobs
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-review'
    <<: *functest-params
    jobs:
      - 'functest-{tag}-review'

- view:
    name: functest-review
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: ^functest-[a-z0-9.]+-review$

- view:
    name: functest-tox
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: ^functest-[a-z0-9.]+-tox$

- builder:
    name: functest-push-containers
    builders:
      - shell: |
          set +x
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          sudo docker push $image

- trigger:
    name: functest-commit
    triggers:
      - pollscm:
          cron: "*/30 * * * *"

- job-template:
    name: 'functest-opnfv-functest-core-{tag}-build'
    parameters:
      - functest-node:
          node: '{node}'
    scm:
      - functest-scm:
          ref: '{branch}'
    builders:
      - functest-build-containers:
          <<: *functest-build-containers
          ref: '{branch}'
          build_args: '{build_args}'
      - functest-push-containers:
          <<: *functest-build-containers
          ref: '{branch}'

- project:
    name: functest-opnfv-functest-core-build
    <<: *functest-params
    repo: opnfv
    container: functest-core
    port:
    ref_arg: BRANCH
    path: docker/core
    jobs:
      - 'functest-opnfv-functest-core-{tag}-build'

- job-template:
    name: 'functest-opnfv-functest-healthcheck-{tag}-build'
    parameters:
      - functest-node:
          node: '{node}'
    scm:
      - functest-scm:
          ref: '{branch}'
    builders:
      - functest-build-containers:
          <<: *functest-build-containers
          ref: '{branch}'
          build_args: '{build_args}'
      - functest-push-containers:
          <<: *functest-build-containers
          ref: '{branch}'

- project:
    name: functest-opnfv-functest-healthcheck-build
    <<: *functest-params
    repo: opnfv
    container: functest-healthcheck
    port:
    ref_arg: BRANCH
    path: docker/healthcheck
    jobs:
      - 'functest-opnfv-functest-healthcheck-{tag}-build'

- job-template:
    name: 'functest-opnfv-functest-smoke-{tag}-build'
    parameters:
      - functest-node:
          node: '{node}'
    scm:
      - functest-scm:
          ref: '{branch}'
    builders:
      - functest-build-containers:
          <<: *functest-build-containers
          ref: '{branch}'
          build_args: '{build_args}'
      - functest-push-containers:
          <<: *functest-build-containers
          ref: '{branch}'

- project:
    name: functest-opnfv-functest-smoke-build
    <<: *functest-params
    repo: opnfv
    container: functest-smoke
    port:
    ref_arg: BRANCH
    path: docker/smoke
    jobs:
      - 'functest-opnfv-functest-smoke-{tag}-build'

- job-template:
    name: 'functest-opnfv-functest-benchmarking-{tag}-build'
    parameters:
      - functest-node:
          node: '{node}'
    scm:
      - functest-scm:
          ref: '{branch}'
    builders:
      - functest-build-containers:
          <<: *functest-build-containers
          ref: '{branch}'
          build_args: '{build_args}'
      - functest-push-containers:
          <<: *functest-build-containers
          ref: '{branch}'

- project:
    name: functest-opnfv-functest-benchmarking-build
    <<: *functest-params
    repo: opnfv
    container: functest-benchmarking
    port:
    ref_arg: BRANCH
    path: docker/benchmarking
    jobs:
      - 'functest-opnfv-functest-benchmarking-{tag}-build'

- job-template:
    name: 'functest-opnfv-functest-vnf-{tag}-build'
    parameters:
      - functest-node:
          node: '{node}'
    scm:
      - functest-scm:
          ref: '{branch}'
    builders:
      - functest-build-containers:
          <<: *functest-build-containers
          ref: '{branch}'
          build_args: '{build_args}'
      - functest-push-containers:
          <<: *functest-build-containers
          ref: '{branch}'

- project:
    name: functest-opnfv-functest-vnf-build
    <<: *functest-params
    repo: opnfv
    container: functest-vnf
    port:
    ref_arg: BRANCH
    path: docker/vnf
    jobs:
      - 'functest-opnfv-functest-vnf-{tag}-build'

- job-template:
    name: 'functest-opnfv-functest-smoke-cntt-{tag}-build'
    parameters:
      - functest-node:
          node: '{node}'
    scm:
      - functest-scm:
          ref: '{branch}'
    builders:
      - functest-build-containers:
          <<: *functest-build-containers
          ref: '{branch}'
          build_args: '{build_args}'
      - functest-push-containers:
          <<: *functest-build-containers
          ref: '{branch}'

- project:
    name: functest-opnfv-functest-smoke-cntt-build
    <<: *functest-params
    repo: opnfv
    container: functest-smoke-cntt
    port:
    ref_arg: BRANCH
    path: docker/smoke-cntt
    jobs:
      - 'functest-opnfv-functest-smoke-cntt-{tag}-build'

- job-template:
    name: 'functest-opnfv-functest-benchmarking-cntt-{tag}-build'
    parameters:
      - functest-node:
          node: '{node}'
    scm:
      - functest-scm:
          ref: '{branch}'
    builders:
      - functest-build-containers:
          <<: *functest-build-containers
          ref: '{branch}'
          build_args: '{build_args}'
      - functest-push-containers:
          <<: *functest-build-containers
          ref: '{branch}'

- project:
    name: functest-opnfv-functest-benchmarking-cntt-build
    <<: *functest-params
    repo: opnfv
    container: functest-benchmarking-cntt
    port:
    ref_arg: BRANCH
    path: docker/benchmarking-cntt
    jobs:
      - 'functest-opnfv-functest-benchmarking-cntt-{tag}-build'

- job-template:
    name: 'functest-{tag}-docker'
    project-type: multijob
    triggers:
      - functest-commit
    scm:
      - functest-scm:
          ref: '{branch}'
    parameters:
      - functest-node:
          node: '{node}'
    # PyYAML and yamllint differ here
    # see https://github.com/yaml/pyyaml/issues/234
    # yamllint disable rule:indentation
    properties:
      - build-blocker:
          blocking-jobs:
          - ^functest-(pi-)*{tag}-(daily|docker|review)$
    # yamllint enable rule:indentation
    builders:
      - multijob:
          name: remove dependency
          projects:
            - name: 'functest-{tag}-dep-rmi'
              <<: *functest-jobs
      - multijob:
          name: pull dependency
          projects:
            - name: 'functest-{tag}-dep-pull'
              <<: *functest-jobs
      - multijob:
          name: build opnfv/functest-core
          projects:
            - name: 'functest-opnfv-functest-core-{tag}-build'
              <<: *functest-jobs
      - multijob:
          name: build containers
          projects:
            - name: 'functest-opnfv-functest-healthcheck-{tag}-build'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-smoke-{tag}-build'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-{tag}-build'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-vnf-{tag}-build'
              <<: *functest-jobs
      - multijob:
          name: build cntt containers
          projects:
            - name: 'functest-opnfv-functest-smoke-cntt-{tag}-build'
              <<: *functest-jobs
            - name: 'functest-opnfv-functest-benchmarking-cntt-{tag}-build'
              <<: *functest-jobs
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-docker'
    <<: *functest-params
    jobs:
      - 'functest-{tag}-docker'

- builder:
    name: functest-trivy
    builders:
      - shell: |
          sudo apt-get -o DPkg::Lock::Timeout=300 update && \
          sudo DEBIAN_FRONTEND=noninteractive apt-get \
            -o DPkg::Lock::Timeout=300 install curl -y

          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b .
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          ./trivy image --exit-code 1 $image

- job-template:
    name: 'functest-opnfv-functest-core-{tag}-trivy'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-trivy:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-core-trivy'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-core'
    port:
    jobs:
      - 'functest-opnfv-functest-core-{tag}-trivy'

- job-template:
    name: 'functest-opnfv-functest-healthcheck-{tag}-trivy'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-trivy:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-healthcheck-trivy'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-healthcheck'
    port:
    jobs:
      - 'functest-opnfv-functest-healthcheck-{tag}-trivy'

- job-template:
    name: 'functest-opnfv-functest-smoke-{tag}-trivy'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-trivy:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-smoke-trivy'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-smoke'
    port:
    jobs:
      - 'functest-opnfv-functest-smoke-{tag}-trivy'

- job-template:
    name: 'functest-opnfv-functest-benchmarking-{tag}-trivy'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-trivy:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-benchmarking-trivy'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-benchmarking'
    port:
    jobs:
      - 'functest-opnfv-functest-benchmarking-{tag}-trivy'

- job-template:
    name: 'functest-opnfv-functest-vnf-{tag}-trivy'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-trivy:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-vnf-trivy'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-vnf'
    port:
    jobs:
      - 'functest-opnfv-functest-vnf-{tag}-trivy'

- job-template:
    name: 'functest-opnfv-functest-smoke-cntt-{tag}-trivy'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-trivy:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-smoke-cntt-trivy'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-smoke-cntt'
    port:
    jobs:
      - 'functest-opnfv-functest-smoke-cntt-{tag}-trivy'

- job-template:
    name: 'functest-opnfv-functest-benchmarking-cntt-{tag}-trivy'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-trivy:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-benchmarking-cntt-trivy'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-benchmarking-cntt'
    port:
    jobs:
      - 'functest-opnfv-functest-benchmarking-cntt-{tag}-trivy'

- builder:
    name: functest-grype
    builders:
      - shell: |
          sudo apt-get -o DPkg::Lock::Timeout=300 update && \
          sudo DEBIAN_FRONTEND=noninteractive apt-get \
            -o DPkg::Lock::Timeout=300 install curl -y

          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sudo sh -s -- -b .
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          ./grype -q $image

- job-template:
    name: 'functest-opnfv-functest-core-{tag}-grype'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-grype:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-core-grype'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-core'
    port:
    jobs:
      - 'functest-opnfv-functest-core-{tag}-grype'

- job-template:
    name: 'functest-opnfv-functest-healthcheck-{tag}-grype'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-grype:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-healthcheck-grype'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-healthcheck'
    port:
    jobs:
      - 'functest-opnfv-functest-healthcheck-{tag}-grype'

- job-template:
    name: 'functest-opnfv-functest-smoke-{tag}-grype'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-grype:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-smoke-grype'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-smoke'
    port:
    jobs:
      - 'functest-opnfv-functest-smoke-{tag}-grype'

- job-template:
    name: 'functest-opnfv-functest-benchmarking-{tag}-grype'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-grype:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-benchmarking-grype'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-benchmarking'
    port:
    jobs:
      - 'functest-opnfv-functest-benchmarking-{tag}-grype'

- job-template:
    name: 'functest-opnfv-functest-vnf-{tag}-grype'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-grype:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-vnf-grype'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-vnf'
    port:
    jobs:
      - 'functest-opnfv-functest-vnf-{tag}-grype'

- job-template:
    name: 'functest-opnfv-functest-smoke-cntt-{tag}-grype'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-grype:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-smoke-cntt-grype'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-smoke-cntt'
    port:
    jobs:
      - 'functest-opnfv-functest-smoke-cntt-{tag}-grype'

- job-template:
    name: 'functest-opnfv-functest-benchmarking-cntt-{tag}-grype'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-grype:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-benchmarking-cntt-grype'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-benchmarking-cntt'
    port:
    jobs:
      - 'functest-opnfv-functest-benchmarking-cntt-{tag}-grype'

- builder:
    name: functest-sbom
    builders:
      - shell: |
          sudo apt-get -o DPkg::Lock::Timeout=300 update && \
          sudo DEBIAN_FRONTEND=noninteractive apt-get \
            -o DPkg::Lock::Timeout=300 install curl -y

          sudo mkdir -p ~/.docker
          curl -sSfL https://raw.githubusercontent.com/docker/sbom-cli-plugin/main/install.sh | sudo sh -s --
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          sudo docker sbom $image

- job-template:
    name: 'functest-opnfv-functest-core-{tag}-sbom'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-sbom:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-core-sbom'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-core'
    port:
    jobs:
      - 'functest-opnfv-functest-core-{tag}-sbom'

- job-template:
    name: 'functest-opnfv-functest-healthcheck-{tag}-sbom'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-sbom:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-healthcheck-sbom'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-healthcheck'
    port:
    jobs:
      - 'functest-opnfv-functest-healthcheck-{tag}-sbom'

- job-template:
    name: 'functest-opnfv-functest-smoke-{tag}-sbom'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-sbom:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-smoke-sbom'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-smoke'
    port:
    jobs:
      - 'functest-opnfv-functest-smoke-{tag}-sbom'

- job-template:
    name: 'functest-opnfv-functest-benchmarking-{tag}-sbom'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-sbom:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-benchmarking-sbom'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-benchmarking'
    port:
    jobs:
      - 'functest-opnfv-functest-benchmarking-{tag}-sbom'

- job-template:
    name: 'functest-opnfv-functest-vnf-{tag}-sbom'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-sbom:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-vnf-sbom'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-vnf'
    port:
    jobs:
      - 'functest-opnfv-functest-vnf-{tag}-sbom'

- job-template:
    name: 'functest-opnfv-functest-smoke-cntt-{tag}-sbom'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-sbom:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-smoke-cntt-sbom'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-smoke-cntt'
    port:
    jobs:
      - 'functest-opnfv-functest-smoke-cntt-{tag}-sbom'

- job-template:
    name: 'functest-opnfv-functest-benchmarking-cntt-{tag}-sbom'
    triggers:
      - timed: '@weekly'
    parameters:
      - functest-node:
          node: '{node}'
    builders:
      - functest-sbom:
          <<: *functest-containers
    publishers:
      - email-ext:
          failure: false
          first-failure: true
          fixed: true
          recipients: cedric.ollivier@orange.com

- project:
    name: 'functest-opnfv-functest-benchmarking-cntt-sbom'
    <<: *functest-params
    repo: 'opnfv'
    container: 'functest-benchmarking-cntt'
    port:
    jobs:
      - 'functest-opnfv-functest-benchmarking-cntt-{tag}-sbom'

- view:
    name: functest-docker
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: ^functest-[a-z0-9.]+-docker$

- view:
    name: functest-trivy
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: (?!functest-kubernetes)(?!functest-pi)^functest-[a-z-0-9.]+-trivy$

- view:
    name: functest-grype
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: (?!functest-kubernetes)(?!functest-pi)^functest-[a-z-0-9.]+-grype$

- view:
    name: functest-sbom
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: (?!functest-kubernetes)(?!functest-pi)^functest-[a-z-0-9.]+-sbom$
