{
  "comments": [
    {
      "key": {
        "uuid": "da33351e_5c98de69",
        "filename": "jjb/releng/opnfv-docker.yml",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 3405
      },
      "writtenOn": "2017-09-25T03:29:38Z",
      "side": 1,
      "message": "Here we must ensure they are built in the right order. If functest-core is not the first, it will raise side effects in rutime.",
      "revId": "2896c2f2f3ecee9ce6c7eb14ea8c64db8677738b",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_3ceb5ab1",
        "filename": "jjb/releng/opnfv-docker.yml",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 2997
      },
      "writtenOn": "2017-09-25T03:55:25Z",
      "side": 1,
      "message": "I think the proper way is to add a new multijob, which builds core first, then all the others in parallel as phase jobs.",
      "parentUuid": "da33351e_5c98de69",
      "revId": "2896c2f2f3ecee9ce6c7eb14ea8c64db8677738b",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_92a52fa4",
        "filename": "jjb/releng/opnfv-docker.yml",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 2034
      },
      "writtenOn": "2017-09-25T14:05:12Z",
      "side": 1,
      "message": "Multijob makes the most sense, but note that this, along with the many StorPerf jobs, ends up with starting many jobs at once, causing a lot of \"Build in progress. Waiting...\", and might cause false failures.\n\nIs there a better way to deal with the \"build in progress?\"\n\nAlso note there is a race condition in opnfv-docker.sh with the build in progress check.  Two jobs started at the same time can both pass that check and interfere with each other.",
      "parentUuid": "da33351e_3ceb5ab1",
      "revId": "2896c2f2f3ecee9ce6c7eb14ea8c64db8677738b",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}